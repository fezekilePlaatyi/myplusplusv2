<!DOCTYPE html>
<html lang="en">
<head>
    <title>mY++ | Web</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="mY++ Messaging home">
    <meta name="robots" content="index, home">
    <link href="https://myplusplus.net" rel="canonical">
    <meta name="author" content="Plaatyi Plaatjie Platyi Platjie Fezekile">
    <meta name="keywords" content="mYplusplus, mY++, myplus, my, Mthatha, mypp, myp, messaging, south africa, eastern cape, software company, Mthatha">
    <link rel="icon" href="/img/favicon.png">
    <link rel="stylesheet" href="/css/w3.css">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/croppie.css">
    <link rel="stylesheet" href="/css/emojionearea.css">
    <link rel="stylesheet" href="/css/styles.min.css">
    <link rel="stylesheet" href="/css/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="/css/capture.css" type="text/css" media="all">
    <link rel="stylesheet" href="/css/my.style.css" type="text/css"> 
    <link rel="stylesheet" href="/css/my.css" type="text/css">

  

    <script src="/js/jquery.min.js"></script>
    <script src="/js/my.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/jquery-ui.min.js"></script>
    <script src="/js/moment.min.js"></script>
    <script src="/js/jquery.nicescroll.js"></script>
    <script src="/js/croppie.js"></script>
    <script src="/js/popper.min.js"></script>
    <script src="/js/bootbox.min.js"></script>
    <script src="/js/bootbox.locales.min.js"></script>   
    <script src="/js/emojionearea.min.js"></script>
    <script src="/js/caman.full.js"></script>
    <script src="/js/caman-adapter-jquery.js"></script>
    <script src="/js/image-uris.js"></script>
    <script src="/js/jquery.timeago.js"></script>
    <script src="/js/adapter-latest.js"></script>
    <script src="/js/main.js" async></script>
    <!-- <script src="/js/ga.js"></script> -->
</head>
<body>

    
    <div id="preloader">
      <div id="status">&nbsp;</div>
    </div>
    <div class="content">
        <!---------------------------------------track for new message...starts------------------------------->
        <audio id='notificationTrack'>
          <source src="/sounds/2.ogg" type="audio/ogg">
        </audio>
        <audio id="wheelSound">
            <source src="/sounds/wheel1.mp3" class="wheelSound" type="audio/mp3">
        </audio>  
        <!---------------------------------------track for new message...end ------------------------------->

        <!------------------------context menu for body starts--------------------------->
        <div id='cntnr1'>
          <ul id='itemsForBodyContextMenu'>
            <li>Logout</li>
            <li>Contact Us</li> 
          </ul>
        </div>
        <!------------------------context menu for body ends--------------------------->
        <!--------------------------------------------------------navigation bar starts---------------------------------------------------->
        

        <div class="w3-bar w3-card my-nav" style="background: #e6e6e6;">
            <a href="#" class="w3-bar-item w3-button">
                <span  style="width: 90px;">
                    <img src="/img/logo.png" class="logo pointer" style="width: 100px; max-width: 75%; margin-left: 18%; margin-top: 3.8%;"> 
                </span>
            </a>
            <span class="w3-bar-item w3-button my-nav-items navbar-item-dropdown navWithImage w3-right w3-dropdown-click">
                <div onclick="myFunctionToggleAccount()" style="border-radius: 45px; border: 2px solid #ddd; margin-top: 5px;"> 
                        <span> &nbsp; 
                            <span  style="color: #3388bb !important"><i class="fa fa-caret-down" aria-hidden="true"></i></span>
                        </span>
                        <% for(var userProfile of logedInUserProfile) { %>
                            <% if( userProfile.user_profilepicture == "default") { %>
                                <img src="/img/pink_default_profile_pic2.png" id="myProfilePicture" width="35"  class='img img-circle'>
                            <% } else { %>
                                <img src="/profile_pictures/<%= userId %>_profile.png" width="35" id="myProfilePicture"  class='img img-circle'>
                            <% } %>
                        <% } %>
                </div>
                <ul  id="demo" style="right: 1% !important; top: 60px !important; font-weight: 400; line-height: 25px; border-radius: 11px !important; list-style: none; padding-left: .5%; text-align: left; font-size: 15px;" class="w3-dropdown-content">
                    <li class="viewProfile pointer">
                        Profile <i class="fa fa-user" aria-hidden="true"></i>
                    </li>
                    <li class="logOut pointer">
                        Logout <i class="fa fa-sign-out" aria-hidden="true"></i>
                    </li>
                </ul>
            </span>
            <span class="w3-bar-item w3-button my-nav-items toggleFeedsNotification w3-dropdown-click w3-right">
                <span class="w3-center">
                    <i class="fa fa-bell-o" style="color: #3388bb !important"></i><br>
                    <span class="headingOfLinkItem notificationsheadingOnNav">Notifications</span>
                    <ul id="notificationPlace" class="w3-card w3-ul w3-dropdown-content">
                    </ul>
                </span>
            </span>
            <span class="w3-bar-item w3-button  w3-right my-nav-items showMainDivToggler">
                <span class="w3-center">
                    <i style="color: #3388bb;" class="fa fa-comments-o"></i><br>
                    <span class="headingOfLinkItem">Messaging</span>
                </span>
            </span>
            <span class="w3-bar-item w3-button my-nav-items w3-right  showFeedsToggler">
                <span class="w3-center">
                    <i style="color: #3388bb;" class="fa fa-rss"></i><br>
                    <span class="headingOfLinkItem">Feeds</span>
                </span>
            </span>
        </div>

                <!--------------------------------------------------------navigation ends------------------------------------------------------>

        <!---------------------------------------------------main container starts------------------------------------------------->
        <div class="my-container">
            <div class="limiter">
                <div class="messager-container" >
                    <div class="hidden logedInUserId"><%= userId %></div>
                    <div id="mainDiv" class="mainDiv wrap" style="margin-top: 10px;">
                        <div class="w3-col w3-card left-bar w3-centre" style="width:27%;  ; position: relative; border-radius: 10px;">
                            <div class="row" style="margin: 3.3% 3% .8% 3%; padding-bottom: .5em;">
                                <span class="compose w3-col showModalForSearchingUser" style="width: 20%;">
                                    <img src="/img/Speech Add2.png" style="width: 100%; max-width: 65px; min-height: 40px;"/>
                                </span>
                                <span class="w3-col" style="width: 1%;">&nbsp;</span>
                                <span class="w3-col" style="width: 74%;">
                                        <input type="text" class="form-control searchWithInChatInput" style="border: 2px solid #ddd; border-radius:25px !important; width: 100%;" placeholder="Search chat...">
                                </span>
                                <span class="w3-col" style="width: 1%;">&nbsp;</span>
                                <span class="w3-dropdown-hover w3-col text-center dropdownForMoreOptionsOnChat" style="width: 4%; margin-top: 1.8%;">
                                    <span class="fa fa-ellipsis-v fa-2x"></span>
                                    <div class="w3-dropdown-content w3-bar-block w3-border chatHistoryDropdownContent" style="font-size: 12px; border-radius: 11px !important;">
                                        <span class="w3-bar-item hideLastMessagesButton pointer" id="hideLastMessagesButton">
                                            Last texts 
                                            <i class="lastMessagesToggler">
                                                <i class="fa fa-toggle-on" aria-hidden="true"></i>
                                            </i>
                                        </span>
                                        <span class="w3-bar-item pointer logOut">
                                            Logout 
                                            <i class="fa fa-sign-out" aria-hidden="true"></i>
                                        </span>
                                    </div>
                                </span>
                            </div>
                            <!--------------------------------------------------------CHAT HISTORY------------------------------------------------------>
                            <div class="chatHistory" style="height: calc(100vh - 196px); background: white; margin-right: 2%; margin-left: 2%; box-shadow: inset 0px 12px 8px -10px #CCC, inset 0px 0px 8px -10px #CCC; border: 1px solid #ccc; overflow-x:hidden;">
                                <% function truncate(str){ %>
                                    <% if(str.length < 5) { %>
                                        <% return str.substring(0, 14) %>
                                    <% } else { %>
                                        <% return str.substring(0, 14)+"..." %>                               
                                    <% } %>

                                <%  } %>

                                <% function decodeTheMessage(str){ %>
                                    <% var hh = "<\span style='font-family : Monospace; color: #fc8a9e;'>" %>
                                    <% if(str.includes('uGY8AAAbbb')){ %>
                                        <% str = str.replace("uGY8AAAbbb", hh) %>
                                        <% str = str.replace("uGY8AAAccc", "<\/span>") %>
                                    <% } %>
                                    <% return  str %>
                                <%  }   %>
                                <div id='cntnr'>
                                    <ul id='contextItems'>
                                      <li>Delete <i class="fa fa-trash"></i></li>  
                                    </ul> 
                                  </div>
                                <ul class="w3-ul chatHistoryBlock"> 
                                    <% if (typeof(userChatHistoryListResults) !== 'undefined'){ %>
                                        <% for(var result of userChatHistoryListResults) { %>
                                            <li class="friend"  id="<%= result.msg_user_id %>">
                                                <% if( result.user_profilepicture == 'default') { %>
                                                    <span class="frienOnList pointer meta">
                                                        <span class="noProfile"> 
                                                            <span class="name"><%= result.user_last_name %></span>
                                                        </span> 
                                                        <span class="name"><%= result.user_first_name %></span>

                                                        <span style="color: #b3b3b3; font-size: 80%;" class="statusOnHistory" arial-label="<%=result.msg_user_status%>">
                                                            <small><%=truncate(result.msg_user_status)%></small>
                                                        </span>
                                                        <span class="textNumber_<%= result.msg_user_id %>"></span> 

                                                        <span id="activity_status_<%= result.msg_user_id %>" class="w3-right"><i style='color: red; z-index: +9389; margin-right: -20px;' class='activityStatusClass fa fa-circle' title="Offline"></i></span>
                                                        <i class="w3-right" style="padding-top: 8%;"></i>
                                                        <p class="preview lastMessageOnChatHistory">
                                                            <span  class="chevronsForMessage_<%= result.msg_user_id %>" style="color: #3388bb !important;">
                                                                 
                                                                <% if(result.sender_id_of_message !== userId) { %>
                                                                    <i class="fa fa-chevron-right"></i>
                                                                <% } else { %>
                                                                    <i class="fa fa-chevron-left"></i>
                                                                <% } %>
                                                                <span style="font-weight: bolder; font-size: 16px">|</span>
                                                            </span> 
                                                            <span id="lastMessage_<%= result.msg_user_id %>">
                                                                <%- decodeTheMessage(result.msg_text) %>
                                                            </span> 
                                                        </p>
                                                    </span>
                                                <% } else { %>
                                                    <img id="<%= result.msg_user_id %>_profile_pic" src="/profile_pictures/<%= result.msg_user_id %>_profile.png" class="pp img img-circle" width="36" style="margin-top: 15px">
                                                    <span class="frienOnList pointer meta">
                                                        <span class="name" style="margin-left: 5px;">
                                                            <%= result.user_last_name %> <%= result.user_first_name %> 
                                                            <span style="color: #b3b3b3; font-size:80%;" class="statusOnHistory" arial-label="<%=result.msg_user_status%>">
                                                                <small><%=truncate(result.msg_user_status)%></small>
                                                            </span>
                                                            <span class="textNumber_<%= result.msg_user_id %>"></span>
                                                            <span id="activity_status_<%= result.msg_user_id %>" class="w3-right">
                                                                <i style='color: red; margin-right: -20px;' class='activityStatusClass fa fa-circle'></i>
                                                            </span>
                                                        </span>
                                                        <p class="preview lastMessageOnChatHistory"  style="color: #3388bb !important;">
                                                            <span>
                                                                <span class="chevronsForMessage_<%= result.msg_user_id %>">
                                                                    <% if(result.sender_id_of_message !== userId) { %>
                                                                        <i class="fa fa-chevron-right"></i>
                                                                    <% } else { %>
                                                                        <i class="fa fa-chevron-left"></i>
                                                                    <% } %>
                                                                </span>
                                                                <span style="font-weight: bolder; font-size: 16px">|</span>
                                                            </span> 
                                                            <span  id="lastMessage_<%= result.msg_user_id %>">
                                                                <%- decodeTheMessage(result.msg_text) %>
                                                            </span> 
                                                        </p>
                                                    </span>
                                                <% } %>
                                                <span class="events_<%= result.msg_user_id %>"></span>                                          
                                            </li>
                                        <% } %>
                                        <!-- to insert default pictures -->
                                        <script type="text/javascript">
                                            $('.noProfile').each(function() 
                                            {
                                                var str = $(this).text();
                                                var matches = str.match(/\b(\w)/g);
                                                var acronym = matches.join('').toUpperCase();
                                                var src = Math.floor((Math.random() * 28) + 1);
                                                $(this).prepend("<span  class='no_profile_container'><img src='/profile_pictures/default/pink_default_profile_pic2.png' style='margin-top: 15px'  class='pp_default pp img img-circle' id='"+$(this).parent().parent().attr('id')+"_profile_pic' width='36'><span class='no_profile_centered' >"+acronym+"</span></span>");                
                                            });                               
                                        </script>
                                    <% } %>
                                    <!-----------------------IF NO CHAT HISTORY------------------------------------->
                                    <% if (typeof(noHistoryMessage) !== 'undefined'){ %>
                                       <li class="noHistoryMessage">
                                            <h4>
                                                Click on that &nbsp; <i class='fa fa-long-arrow-up' style="transform: rotateZ(-55deg);"></i> &nbsp;  icon to start chat. 
                                            </h4>
                                        </li>
                                    <% } %>
                                </ul>
                                <!-----------------------------------for searching user to chat with or keyword within messages starts ---------------------->
                                <ul class="searchWithInChatResults w3-ul"></ul>
                                <ul class="searchMessageWithInChatResults w3-ul"></ul>
                                <!-----------------------------------for searching user to chat with or keyword within messages ends ---------------------->
                            </div>
                            <!--------------------------------archive chat and settings for chat----------------------------->  
                            <!-- <div class="w3-row w3-bottom" style="position: absolute;color: #222; bottom: 10px; background-color: transparent; padding: 1%;">
                                <div class="text-center w3-row"> 
                                    <div class="w3-col" style="border-right: 2px solid grey; width: 50%">
                                        <i class="fa fa-archive fa-2x fa-fw pointer"></i>
                                    </div>
                                    <div class="w3-col" style="width: 50%;">
                                        <i class="fa fa-cog fa-2x fa-fw pointer"></i>
                                    </div>
                                </div>
                            </div> -->
                        </div>
                        <!--------------------------------------------------------chat box starts------------------------------------------------------>
                        <div class="w3-col w3-card right-bar" style="width:71%; border-radius: 10px; margin-left: 5px;">
                            <!--------------------------------default chat picture starts--------------------------------------------->
                            <div class="w3-row chatBoxArea text-center" id="parent">
                                <div id="child">
                                    <img src="/img/Untitled-1.png" width="60%;" style="padding-top: 7%;">
                                </div>
                            </div>
                            <!--------------------------------default chat picture ends--------------------------------------------->
                            <div class="chatBox" style="border-radius: 10px;">
                                <div class="w3-row"  style="background: #eee; height: 70px; width: 100%; padding-top: .5em; border-bottom: 1px solid #e6e6e6; border-radius: 10px 10px 0 0;">
                                    <span class="headerProfile "></span> 
                                </div>
                                <div class="chatMessagesBox"  style="">
                                    <div class="clearfix"></div>
                                    <!-------------------------------------------------inputs for attachments starts-------------------------->
                                    <!-- <div class="w3-row" style="margin-right: 10px;">
                                        <i class="fadeIn aa fa fa-map-marker" style="font-size:23px;"></i>
                                        <i class="fadeIn bb fa fa-file-video-o" style="font-size:32px;"></i>
                                        <i class="fadeIn cc fa fa-camera" style="font-size:40px;"></i>
                                        <i class="fadeIn dd fa fa-file-text" style="font-size:50px;"></i>
                                    </div> -->
                                    <!-------------------------------------------------inputs for attachments ends-------------------------->
                                </div>
                                <!-------------------------------modal to show users to forward message to starts---------------------------------------->
                                <div id="modalToShowUsersToForwadMessage" class="w3-modal">
                                    <div class="w3-modal-content">
                                        <header class="w3-container" style="padding: 1.5%;"> 
                                            <span onclick="document.getElementById('modalToShowUsersToForwadMessage').style.display='none'" class="w3-button w3-display-topright" id="modalCloserForForwardMessage">&times;</span>
                                            <input type="text" class="form-control" placeholder="Enter fast look-up key" name="" style="width: 95% !important;">
                                        </header>
                                        <!------------------------------------------message forward to results------------------------------>
                                        <div class="w3-ul w3-hoverable forwardMessageToUserListToPickFrom">                                 
                                        </div>
                                    </div>
                                </div>
                                <!-------------------------------modal to show users to forward message to ends---------------------------------------->
                                <!------------------------------------------------------textarea for message starts-------------------------------------------------->
                                <div class="w3-row" style="width:100%; bottom: 0; border-radius: 0 0 10px 10px;">
                                    <div class="input-group w3-col" style="background-color: #eee; border-top: none; border-radius: 0 0 10px 10px;">
                                        <!--------------------------------------message attachements toggler starts---------------------------------------->
                                        <!-- <span class="input-group-addon showInputButtonForAttachemnts"  style=" border: none; background-color: #eee !important; border-radius: 0 0 0 10px;">
                                            <i class="fa fa-plus" style="color: #ffc0cb;" aria-hidden="true"></i>
                                            <i class="fa fa-paperclip fa-2x" style="color: #000" aria-hidden="true"></i>
                                        </span> -->
                                        <!--------------------------------------message attachements toggler ends---------------------------------------->
                                        <div class="input-group"  style="margin: .9% 0 .9% 0; border: 1px solid #b3b3b3 !important; border-radius: 40px !important;">
                                            <!-----------------------------emoji button----------------------------->
                                            <span class="input-group-addon btnShowEmos" style="height: 30px !important; border: none !important; border-radius: 40px 0px 0px 40px !important; border-right: none !important; background-color: white !important;">
                                                <i class="fa fa-smile-o fa-2x"></i>
                                            </span>
                                            <!-----------------------------message area field------------------------------------------------>
                                            <input type="text"  style="border:none; outline: 0;" class="my-form-control textareaid" id="textareaid" placeholder="Type message...">
                                        </div>
                                        <!-----------------------------------send message button------------------------------------->
                                        <span class="input-group-addon buttonToSendMessage" style="border: none; color: #000; background-color: #eee !important; border-radius: 0 0 10px 0;">
                                            <i class="fa fa-send-o" style="font-size: 23px;"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <!------------------------------------------------------all place  starts-------------------------------------------------->
                            <div class="callDiv" style="display: none; height: calc(100vh - 102px);">  
                                <h2>On Call</h2>
                                <div style="text-align: center; width: 700px;position: relative; left: 0; top: 0;">
                                    <div id="videos">
                                        <video id="localVideo" autoplay muted playsinline  style="position: absolute; right: 0;  bottom: 0px;  border-radius: 25px; border: 5px solid #e6e6e6;width: 200px; height: auto; margin-bottom: -50px;"></video>
                                        <video id="remoteVideo" autoplay playsinline  style="width: 500px; height: auto; border-radius: 25px;"></video>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--------------------------------------------------------chat box ends here(right bar on laptop)--------------------------------------->           
                    <!-----------------------------------------start start chat searcher modal---------------------------------->
                </div>
                <div class="SearchUserModal">
                    <div class="row" style="margin: 10px;">
                        <div class="col-md-4 col-md-offset-4 w3-card" style="background-color: #eee; border-radius: 10px; height: calc(100vh - 90px); ">
                            <i class="fa fa-close w3-right closeSearchUserModal" style="margin-top: .7em; margin-bottom: .7em;"></i>
                            <div class="row" style="">
                                <form>
                                    <div class="input-group" style="width: 100%">
                                        <input type="text" class="searchUser" id="searchUser" placeholder="Search User" style="border-radius: 0 !important; background-color: #3388bb !important; width: 100%; color: #fff; border: none; padding: .8em;">
                                        <span class="input-group-addon" style="padding: .8em; background-color: #3388bb !important; border: none; border-radius: 0 !important; color: #fff;"><i class=" fa fa-search" ></i></span>
                                    </div>
                                </form>
                            </div>
                            <br>
                            <div style="height: 400px;">
                                <div class="row">
                                    <!--------------------------------search results will be displayed here--------------------------->
                                    <ul class="searchUserResults w3-ul w3-hoverable">
                                    </ul>
                                    <!--------------------------------search results ends--------------------------->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-----------------------------------------end start chat searcher---------------------------------->
                <!----------------------------------------profile section goes here--------------------------------->

                <div class="w3-row profileDiv" id="myProfile">
                    <div class="limiter">
                        <div class="profile-container">

                            
                            
                        </div>
                    </div>
                </div>
            </div>


            <div class="singleFeedView">
                <div class="modal fade" id="singleFeedViewModal" role="dialog">
                    <div class="modal-dialog">
                      <!-- Modal content-->
                      <div class="modal-content">
                       
                          <span class="close w3-display-topright closeModalForSinlgeFeed" data-dismiss="modal" style="padding: 1%;">&times;</span>
                          <div class="toShowfeedIn"></div>
                      </div>
                      
                    </div>
                  </div>
            </div>
    
            <!----------------------------------------------FEEDS MODAL START-------------------------------------------------------------->
            <div id="feedsModal" class="" style="color: #686868; padding-top: 0px; display: none;">
                <div class="feedsModalContent" style=" width: 100%;">
                    <div class="newlyCreatedDivForFeeds">
                        <!------------------------------------posts display here----------------------------->
                        <div class="feedsDiv">
                            <div class="limiter">
                                <div class="feedsContainer" style="">
                                    <div class="w3-center">
                                            <span class="viewNewFeedsBox pointer" style="background: #fc8a9e;  z-index: +105; position: absolute; border-radius: 15px; padding: .7%; color: white; top: 30px; display: none;">New feeds, click here to view <i class="fa fa-close pointer closeNewFeedsTeller"></i></span>
                                    </div>
                                    <div class="wrap feedsWillGoHere theScrollH" style="margin-top: .4em; padding: .1em .7em .7em .7em; overflow-x: hidden; height: calc(100vh - 85px);  overflow-y: scroll;">
                                        
                                    </div>
                                </div>
                            </div>
                                
                            <div id="feedsPlusMenu" class="w3-right feedsPlusMenu w3-ul mYPink-color fontWeight700 w3-card" style="display: none; margin-top: 2%; border-radius: 12px; position: absolute; right: 8%; bottom: 200px; z-index: +1; background: white;">
                            
                                
                            </div>  



                            <div class="" style="position: relative;">
                                <i class="fa fa-plus fa-4x mYBlue-color w3-display-bottomright feedsPlusToggler"></i>
                            </div>  
                            <!--------------------mapping feed input image ------------------------------------>
                            <img src="/img/post_btn.png" usemap="#image-map" class="theWheal" style="position: fixed; bottom: 5px; right: 5px; display: none; z-index: +99;">
                            <map name="image-map">
                                <area class="pointer getVideoFromCameraFeeds" coords="18,44,51,63,98,38,96,2,51,16" shape="poly">
                                <area class="pointer localVideo" coords="104,2,103,36,148,66,178,46,149,16" shape="poly">
                                <area class="pointer togglefeedsTextField" coords="44,122,11,142,2,96,17,51,45,69" shape="poly">
                                <area class="pointer getImageFromCameraFeeds"coords="47,129,14,148,43,180,98,195,96,160" shape="poly">
                                <area class="pointer getImagePaint" coords="150,71,182,52,195,91,185,142,153,123" shape="poly">
                                <area class="pointer localImage" coords="104,162,104,198,154,184,182,150,150,128" shape="poly">
                            </map>                  
                        </div> 
                        </div>
                        
                        
                    </div>
                </div>
            </div>  
            <!------------------------------------------------FEEDS MODAL END------------------------------------------------------------->
            <div class="thePlaceForFeedsPostsInput blue-square-container">
                <span class="close w3-display-topright closeModalForInputFeed"  style="padding: 1%;">&times;</span>
                <div class="">
                <!----------------------------------image feed---------------------------------------->
                    <div  class="blue-square">  
                        <div class="containerOne">
                            <div class="containerTwo">
                                <div class="containerThree">
                                    <!-----------------------------------text feed----------------------------------->
                                    <div id="feedsTextField" class="w3-card otherInputFoFeed feedsTextField" style="display: none;">
                                        <% for(var userd of logedInUserProfile) { %>
                                        <textarea class="w3-input  feedContent"  placeholder="<%=userd.user_first_name %>, what do you have in mind?"></textarea>
                                        <% } %>
                                        <span class="w3-right">
                                            <button class="btn" style="font-size: 20px; padding: 0 !important; width: 30px !important; height: 30px !important; background-color: transparent !important;"><i class="fa fa-smile-o" ></i></button>
                                            <button class="btn  btn-default sendFeedContent point" title="Post">POST</button>
                                        </span>
                                    </div>
                                    <!-----------------------------------local image--------------------------------->
                                    <div  class="otherInputFoFeed" id="holderLocalImage" style="display: none;">
                                            <!----------------------local image---------------------->
                                            <div class="row">
                                            <div class="col-sm-12 w3-center">
                                                <div style="text-align: center;">
                                                    <div style="display:inline-block;" class="text-center">
                                                        <div class="custom-file row" style="margin-bottom: 1%;">
                                                            <input type="file" accept="image/*" class="custom-file-input" id="upload-file">
                                                        </div>
                                                        
                                                        <canvas id="canvasForLocalImage" style="width: 600px;"></canvas>


                                                        <p>
                                                            <span class="w3-left my-3"  data-toggle="collapse" data-target="#localImageEffects">Effects</span>
                                                        </p>
                                                        <div id="localImageEffects" class="collapse in">
                                                            <section class="filtersCard">
                                                              <div class="card--content" title="Undo all the effects" id="revert-btn"><img class="pointer" src="/img/effects/original.jpg"/></div>
                                                              <div class="card--content" id="vintage"><img class="pointer filter-btn vintage-add" id="effect1" src="/img/effects/vint.jpg"/></div>
                                                              <div class="card--content" id="lomo"><img class="pointer filter-btn lomo-add" id="effect2" src="/img/effects/lomo.jpg"/></div>
                                                              <div class="card--content" id="clarity"><img class="pointer filter-btn clarity-add" id="effect3" src="/img/effects/clar.jpg"/></div>
                                                              <div class="card--content" id="sinCity"><img class="pointer filter-btn sincity-add" id="effect4" src="/img/effects/sincity.jpg"/></div>
                                                              <!-- <div class="card--content btnTestEffect filter-btn crossprocess-add" id="sunrise"><img class="pointer" id="effect5" src="/img/effects.png"/></div> -->
                                                              <!-- <div class="card--content btnTestEffectfilter-btn crossprocess-add" id="crossProcess"><img class="pointer" id="effect6" src="/img/effects.png"/></div> -->
                                                              <!-- <div class="card--content btnTestEffect" id="orangePeel"><img class="pointer" id="effect7" src="/img/effects.png"/></div> -->
                                                              <!-- <div class="card--content btnTestEffect" id="love"><img class="pointer" id="effect8" src="/img/effects.png"/></div> -->
                                                              <!-- <div class="card--content btnTestEffect" id="grungy"><img class="pointer" id="effect9" src="/img/effects.png"/></div> -->
                                                              <!-- <div class="card--content btnTestEffect" id="jarques"><img class="pointer" id="effect10" src="/img/effects.png"/></div> -->
                                                              <div class="card--content" id="pinhole"><img class="pointer filter-btn pinhole-add" id="effect10" src="/img/effects/pinhole.jpg"/></div>
                                                              <div class="card--content" id="nostalgia"><img class="pointer filter-btn nostalgia-add" id="effect10" src="/img/effects/nostalgia.jpg"/></div>
                                                              <!-- <div class="card--content btnTestEffect" id="glowingSun"><img class="pointer" id="effect10" src="/img/effects.png"/></div> -->
                                                              <!-- <div class="card--content btnTestEffect" id="hazyDays"><img class="pointer" id="effect10" src="/img/effects.png"/></div> -->
                                                              <div class="card--content" id="herMajesty"><img class="pointer filter-btn hermajesty-add" id="effect10" src="/img/effects/hermajesty.jpg"/></div>
                                                              <!-- <div class="card--content btnTestEffect" id="nostalgia"><img class="pointer" id="effect10" src="/img/effects.png"/></div> -->
                                                              <!-- <div class="card--content btnTestEffect" id="hemingway"><img class="pointer" id="effect10" src="/img/effects.png"/></div> -->
                                                              <!-- <div class="card--content btnTestEffect" id="concentrate"><img class="pointer" id="effect10" src="/img/effects.png"/></div> -->
                                                              <!-- <div class="card--content btnTestEffect" id="removeEffectOnPhoto"><img class="pointer" id="effect10" src="/img/effects.png"/></div> -->
                                                            </section>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                            <!--------------------------textarea place---------------------------->
                                        <div class="row">
                                            <div class="col-sm-12" style="width: 600px; margin-top: 1%;">
                                                <div class="input-group">
                                                    <textarea id="localImageCaption"  placeholder="Enter post caption here..." class="commentArea form-control" style="width: 542px;border-radius: 21px; height: 50px; resize: none;  padding: 2%;"></textarea>
                                                    <span class="input-group-addon feedCaptionSendButtonGroup">
                                                        <button  class='btn btn-default commentSendBtn  submitPhotoFeedButton' type='submit' title="Click here to post Feed..."><i class='fa fa-send-o fa-2x pointer' ></i></button>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!---------------------------------local video starts----------------------------->
                                    <div id="holderLocalVideo"  class="otherInputFoFeed text-center" style="display: none;">

                                        <p><span class="inputForLocalVideo"><input type="file" id="uploadVideoInputFile" class="file_multi_video" accept="video/mp4,video/x-m4v,video/*"></span></p>
                                        <video  id="video_here"  src="" controls></video>                                       

                                        <div class="input-group" style="text-align: left;">
                                            <textarea id="localVideoCaption"  placeholder="Enter post caption here..." class="commentArea" style="border-radius: 21px; height: 50px; width: 550px !important; resize: none;  padding: 2%;"></textarea>
                                            <span class="input-group-addon feedCaptionSendButtonGroup">
                                                <button style="margin-left: -10px;"  class='commentSendBtn sendLocalVideo' type='submit' title="Click here to post Feed..."><i class='fa fa-send-o fa-2x pointer' ></i></button>
                                            </span>                                         
                                        </div>
                                        <div style="color: #3388bb" class="uploadStatus"></div>

                                        <hr>
                                    </div>
                                    <!----------------------------------local image captures starts------------------------>
                                    <div id="cameraPlaceContainer" class="otherInputFoFeed" style="display: none;">
                                        
                                        <div class="inputForImage">
                                            <video class="cameraPlace" id="videoForImage" style="width:600px; height:340px;">This is not supported</video>
                                                
                                         
                                            
                                            <div class="row rowForholderForCameraButtonsForTakingPhoto">
                                                <div class="col-sm-12 w3-center holderForCameraButtonsForTakingPhoto">                                                   
                                                    <div class="circleBase"><span id="startbutton" class="takePhotoEventButtons"><i class="fa fa-camera-retro fa-2x"></i></span></div>
                                                    <div class="circleBase"><span id="cancelTakePhoto" class="takePhotoEventButtons"><i class="fa fa-close fa-2x"></i></span></div>
                                                </div>
                                            </div>
                                        </div>
                                        <canvas id="canvasToDrawPhotoTo" style="display: none;"></canvas>
                                        <div class="imageProccessingDiv" style="display: none;">
                                            
                                            <div class="row">
                                                <div class="col-sm-12" style="text-align: left; width:520px;">  <span id="backToTakePicture" data-toggle="collapse"  data-target="#collapsingFiltersBox" class="backToTakePicture pointer" title="Back to camera"><img src="/img/back.png" width="25px;"></span></div>
                                            </div>
                                            <!-----------------------to display image captured on------------------->
                                            <img  id="outputForImage">
                                            <div class="row">
                                                <div class="col-sm-12 w3-center" style="opacity: 0.8;">
                                                    <div style="text-align: center;">
                                                        <div style="display:inline-block;  width: 520px;">
                                                            <span data-toggle="collapse" class="pointer" data-target="#collapsingFiltersBox" style="color: #3388bb; font-style: italic; text-decoration: underline;">filters</span>

                                                            <div id="collapsingFiltersBox" class="collapse">
                                                                <div class="filters-scroll">
                                                                    <section class="filtersCard">
                                                                      <div class="card--content btnTestEffect" id="removeEffectOnPhoto"><img class="pointer" id="effect10" src="/img/effects/original.jpg"/></div>
                                                                      <div class="card--content btnTestEffect" id="vintage"><img class="pointer" id="effect1" src="/img/effects/vint.jpg"/></div>
                                                                      <div class="card--content btnTestEffect" id="lomo"><img class="pointer" id="effect2" src="/img/effects/lomo.jpg"/></div>
                                                                      <div class="card--content btnTestEffect" id="clarity"><img class="pointer" id="effect3" src="/img/effects/clar.jpg"/></div>
                                                                      <div class="card--content btnTestEffect" id="sinCity"><img class="pointer" id="effect4" src="/img/effects/sincity.jpg"/></div>
                                                                      <!-- <div class="card--content btnTestEffect" id="sunrise"><img class="pointer" id="effect5" src="/img/effects/clar.jpg"/></div> -->
                                                                      <div class="card--content btnTestEffect" id="crossProcess"><img class="pointer" id="effect6" src="/img/effects/crossproccess.jpg"/></div><!-- 
                                                                      <div class="card--content btnTestEffect" id="orangePeel"><img class="pointer" id="effect7" src="/img/effects/original.jpg"/></div>
                                                                      <div class="card--content btnTestEffect" id="love"><img class="pointer" id="effect8" src="/img/effects/.jpg"/></div>
                                                                      <div class="card--content btnTestEffect" id="grungy"><img class="pointer" id="effect9" src="/img/effects/original.jpg"/></div>
                                                                      <div class="card--content btnTestEffect" id="jarques"><img class="pointer" id="effect10" src="/img/effects/original.jpg"/></div> -->
                                                                      <div class="card--content btnTestEffect" id="pinhole"><img class="pointer" id="effect10" src="/img/effects/pinhole.jpg"/></div>
                                                                      <!-- <div class="card--content btnTestEffect" id="oldBoot"><img class="pointer" id="effect10" src="/img/effects.png"/></div>
                                                                      <div class="card--content btnTestEffect" id="glowingSun"><img class="pointer" id="effect10" src="/img/effects.png"/></div>
                                                                      <div class="card--content btnTestEffect" id="hazyDays"><img class="pointer" id="effect10" src="/img/effects.png"/></div> -->
                                                                      <div class="card--content btnTestEffect" id="herMajesty"><img class="pointer" id="effect10" src="/img/effects/hermajesty.jpg"/></div>
                                                                      <div class="card--content btnTestEffect" id="nostalgia"><img class="pointer" id="effect10" src="/img/effects/nostalgia.jpg"/></div><!-- 
                                                                      <div class="card--content btnTestEffect" id="hemingway"><img class="pointer" id="effect10" src="/img/effects.png"/></div>
                                                                      <div class="card--content btnTestEffect" id="concentrate"><img class="pointer" id="effect10" src="/img/effects.png"/></div> -->
                                                                    </section>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-sm-12 w3-center">
                                                    <div style="text-align: center;">
                                                        <div style="display:inline-block;" class="text-center">
                                                            <div class="input-group">
                                                                <textarea id="imageCaption"  placeholder="Enter post caption here..." class="commentArea" style="border-radius: 21px; height: 50px; width: 490px; margin-left: 25px; resize: none;  padding: 2%;"></textarea>
                                                                <span class="input-group-addon feedCaptionSendButtonGroup">
                                                                    <button style="margin-left: -25px !important;"  class='btn btn-default commentSendBtn  submitPhotoFeedButton' type='submit' title="Click here to post Feed..."><i class='fa fa-send-o fa-2x pointer' ></i></button>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-----------------------------------video recorder--------------------------->
                                    <div id="videoPlace" class="otherInputFoFeed" style="display: none;">
                                        <div id="container">
                                            <div class="audioPlaceContainer" style="text-align: left;">
                                                <!-- <button id="start" class="videoRecorderBtn">Start camera</button> -->
                                                <button class="videoRecorderBtn btn-file pointer" title="Add custom audio">
                                                    <i class="fa fa-plus"></i> <input id="audioFileInput" type="file" name="" accept="audio/mp3,video/mp4,video/x-m4v,video/*">
                                                </button>
                                                <span class="audioFileName"> No audio file added.</span>
                                                
                                            </div>
                                            <audio id="theAudioPlayerForVideo">
                                              <source src="" id="audio" />
                                            </audio>
                                            


                                            <div class="recordVideoContainer">
                                                <video id="gum" width="520" height="340" style="width:100%; height:340px;" playsinline autoplay muted></video>

                                                <div  class="top-right" style="display: none; top: 25px;" id="recordingTimerAndImage">
                                                    <img src="/img/recordinggif.gif" width="20"><br>
                                                    <span class="countdown" style="color: #e6e6e6;"></span>
                                                </div>
                                            </div>
                                            <video id="recorded" style="width:600px; display: none; height:auto;" playsinline loop></video>
                                            <button id="record" class="videoRecorderBtn" disabled>Start</button>
                                            <button id="play" class="videoRecorderBtn" style="display: none;" disabled>Play</button>
                                            <button id="restartCameraForVideo" class="videoRecorderBtn" style="display: none;">Back</button>
                                            <div class="row  captionPlaceForVideo" style="display: none; background: transparent;">
                                                <div class="input-group">
                                                    <textarea class="form-control" id="videoCaptionInput" placeholder="Enter caption here..." style="margin-left: 13px; border-radius: 25px; height: 50px;resize: none !important
                                                        ; "></textarea>
                                                    <span class="input-group-addon sendVideo" style="margin-left: 10px !important; border: none; color: #000; background: #e6e6e6 !important; border-radius: 0 0 10px 0;"><span id="download"  class="fa fa-send-o fa-2x videoRecorderBtn" disabled></span></span>
                                                </div>
                                            </div>
                                            <div>
                                                <span id="errorMsg"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <!-------------------------------------painting-------------------------------->
                                    <div id="paintingPlace" class="otherInputFoFeed" style="display: none;">
                                        <div class="w3-bar mYBlue-background paintingToolBar">
                                          <span id="colors" class="w3-bar-item w3-button" title="Pick color or insert custom color">Pick Color: <input type="color" value="#fc8a9e" name="myColor" id="myColor"></span>
                                          <span  class="w3-bar-item w3-button" title="Brush size"><span id="range">Current Size: <span id="brushSize">5</span><input type="range" id="myRange" value="5" min="1" max="100">Max: 100</span></span>
                                          <span  class="w3-bar-item w3-button" title="Painter"><span id="brush" class="fa fa-paint-brush fa-2x"></span></span>
                                          <span  class="w3-bar-item w3-button" title="Eraser"><span id="erase" class="fa fa-eraser fa-2x"></span></span>
                                          <span  class="w3-bar-item w3-button" title="Send work" id="saveLink"><span id="save" class="fa fa-paper-plane-o fa-2x"></span></span>
                                          <span  class="w3-bar-item w3-button" title="Reset board"><span id="reset" class="fa fa-undo fa-2x"></span></span>
                                        </div>
                                        <!--------------to be used to check if canvas is blank----------------->
                                        <canvas id='blank'  width="590" height="400" style="display:none; background-color: #e6e6e6;">Your browser does not support this feature.Try updating it or try different broswer!</canvas>
                                        <!---------------for drawing------------------------>
                                        <canvas id="canvas" width="590" height="400" style="background-color: #e6e6e6;">Your browser does not support this feature.Try updating it or try different broswer!</canvas>
                                    </div>
                                </div>
                            </div>
                        </div>                          
                    </div> 
                </div>
            </div>
        </div>
    </div>    
    <script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
    <!--------------------------------------------------------SCRIPTS STARTS------------------------------------------------------>
    <script>
        //preventing back button on browser
        history.pushState(null, null, location.href);
        window.onpopstate = function () {
            history.go(1);
        };
        function myFunctionToggleAccount() 
        {
            var x = document.getElementById("demo");
            if (x.className.indexOf("w3-show") == -1) 
            {
                x.className += " w3-show";
            } 
            else 
            { 
                x.className = x.className.replace(" w3-show", "");
            }
        }
    </script>
    <script src="/js/mo.min.js"></script>
    <script>
        //*******************************************jquery*******************************************//
        $(function()
        {

            var myTimeline = new mojs.Timeline();
            var scaleCurve = mojs.easing.path('M0,100 L25,99.9999983 C26.2328835,75.0708847 19.7847843,0 100,0');

            var myAnimation1 = new mojs.Burst({
                count:          6,
                radius:         {40:90},
                children: 
                {
                    fill:           [ '#988ADE', '#DE8AA0', '#8AAEDE', '#8ADEAD', '#DEC58A', '#8AD1DE' ],
                    opacity:        0.6,
                    scale:          1,
                    radius:     { 7: 0 },
                    duration:   1500,
                    delay:          300,
                    easing:         mojs.easing.bezier(0.1, 1, 0.3, 1)
                }
            });
            var myAnimation2 = new mojs.Transit({
                // duration: 750,
                type: 'circle',
                radius: {0: 45},
                top: 0,
                left: 0,
                // strokeWidth: {15:0},
                opacity: 0.6,
                isRunLess: true,
                easing: mojs.easing.bezier(0, 1, 0.5, 1),
                fill: 'transparent',
                stroke: '#988ADE',
                strokeWidth: {25:0},
                duration:       600,
                // easing: mojs.easing.ease.inout
            });
            myTimeline.add(myAnimation1, myAnimation2);
            function findCenter ($this) 
            {
                var offset = $this.offset();
                var width = $this.width();
                var height = $this.height();
                Pos = {
                    x: offset.left + (width / 2),
                    y: offset.top + (height / 2)
                };
              return Pos;
            }
            var defaultChatBoxArea = "chatHistory";
            var isMobile = 
            {
                Android: function() {
                    return navigator.userAgent.match(/Android/i);
                },
                BlackBerry: function() {
                    return navigator.userAgent.match(/BlackBerry/i);
                },
                iOS: function() {
                    return navigator.userAgent.match(/iPhone|iPad|iPod/i);
                },
                Opera: function() {
                    return navigator.userAgent.match(/Opera Mini/i);
                },
                Windows: function() {
                    return navigator.userAgent.match(/IEMobile/i);
                },
                any: function() {
                    return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
                }
            };
            if(isMobile.any()) 
            {
                $(".right-bar").hide(function()
                {
                    $(".left-bar").css("width","100%");
                });
            }


            $("#status").fadeOut(); // will first fade out the loading animation
            $("#preloader").delay(1000).fadeOut("slow"); // will fade out the white DIV that covers the website.

            $(".my-nav").click(function(e)
            {
                //do something
                if (defaultCheckingId != 0)
                {
                    stopCheckingUp(defaultCheckingId);
                }
            })
            //for colors of events
            function theFunction()
            {
                var rand = getColor();
                $('.the_events').css({
                    "color":rand
                });
            }
            setInterval(theFunction, 500);
            var x=0;
            function getColor() 
            {
                var colorStr = ["#3790c8","#4b9cce","#5fa7d3","#73b2d9","#87bdde","#9bc8e4","#afd3e9","#c3deef"];
                
                length = colorStr.length;
                if (x < length) 
                {
                  x++;
                } else if (x >= length) {
                  x = 0
                }
                return colorStr[x];
            }
            //TO FILL PROFILE OF USER
            populateUserDetails = function(userId, userType)
            {
                $(".theScrollH").getNiceScroll().hide();                
                $("#"+currentWindow).hide();
                currentWindow = "myProfile";
                $('.profileDiv').fadeIn();  
                $.ajax
                ({
                    url : '/user/getUserByTheId',
                    method : 'POST',
                    data :
                    {
                        userToSearch : userId
                    },
                    success : function(data)
                    {
                        function isObject(obj)
                        {
                            return obj != null && obj.constructor.name === "Object"
                        }
                        if(isObject(data))
                        {
                            var locationOfProfilePicture = "";
                            if(data.result[0].user_profilepicture == "default")
                            {
                                locationOfProfilePicture = "/img/pink_default_profile_pic2.png";
                            }
                            else
                            {
                                locationOfProfilePicture = "/profile_pictures/"+userId+"_profile.png"
                            }
                            var uploadButton = "";
                            var editStatusButton = "";
                            if(userType == "me")
                            {
                                uploadButton = "<span class='upload_wrapper' id='up0'><i class='fa fa-image'></i><input type='file' title='Update profile picture' style='width: 100px; height:100px;' id='upload_image' name='upload_image' class='upload'></span>";
                                

                            }


                            $(".profile-container").html("<div class='wrap'> <!-- upload pp --> <div id='uploadimageModal' class='modal my-box-center' role='dialog'> <div class='modal-dialog'> <div class='modal-content' style='max-width:350px; width: 100%; '> <div class='modal-header'><i class='close w3-display-topright' style='margin-top: 5px; margin-right: 5px;' data-dismiss='modal'>&times;</i> </div> <div class='modal-body'> <div class='row'> <div class='col-md-12 text-center image_demo_container' style='width: 300px; max-width: 300px; '> <div id='image_demo'></div> </div> </div> <div class='row'> <div class='col-md-12'> <button class='btn btn-crop-image crop_image'>Save<i class='fa fa-save'></i> </button> </div> </div> </div> </div> </div> </div> <!-- end upload --> <div class='profileContainer w3-card'> <div class='row text-center userProfileKeys'> <h2 style='display: inline' class='headingProfileWithNames'><b><span class='myFirstName'>"+data.result[0].user_first_name+"</span> <span class='myLasstName'>"+data.result[0].user_last_name+"</span></b></h2><small class='pointer my-blue editNames' style='display: inline;'>/edit</small> </div> <br> <div class='row'> <div class='col-sm-12 text-center'> <div class='w3-display-container'><img src='"+locationOfProfilePicture+"' style='width:100%' alt='Profile Picture' class='profilePictureOnUserProfile w3-card img-circle img'><div class='w3-display-bottomright w3-container'>"+uploadButton+"</div> </div> </div> </div> <br> <div class='w3-row text-center'> <div class='w3-col' style='width: 50%;'> <p><span class='userProfileKeys'>Username</span> <br><span class='usernameKey'>@"+data.result[0].msg_user_name+"</span> </p> </div> <div class='w3-col' style='width: 50%;'> <p><span class='userProfileKeys'>Email</span> <br><span class='mYPink-color'>"+data.result[0].user_email+"</span></p> </div> </div> <div class='w3-row text-center'> <div class='w3-col' style='width: 50%;'> <p><span class='userProfileKeys'>Gender</span> <br>Male </p> </div> <div class='w3-col' style='width: 50%;'> <p><span class='userProfileKeys'>Joined: </span><i>" + moment(data.result[0].user_date_created).format('H:mm A | Do MMM') + "</i><br><span class='userProfileKeys'>Updated: </span><i>" + moment(data.result[0].user_date_modified).format('H:mm A | Do MMM') + "</i> </p> </div> </div> <div class='row' style='margin: 1.2%;'> <div class='col-sm-3'><span class='userProfileKeys'>Status-</span> </div> <div class='col-sm-9 user_status_border'><span class='myStatus'>"+data.result[0].msg_user_status+"</span> <br><small class='pointer editStatus my-blue'>/edit</small> </div> </div> </div> </div>");

                            // UPLOAD STARTS
                            $image_crop = $('#image_demo').croppie(
                            {
                                enableExif: true,
                                viewport:
                                {
                                    width: 200,
                                    height: 200,
                                    type: 'square' //circle
                                },
                                boundary:
                                {
                                    width: 300,
                                    height: 300
                                }
                            });
                            $('#upload_image').on('change', function(e)
                            {
                                e.stopPropagation();
                                var reader = new FileReader();
                                reader.onload = function(event)
                                {
                                    $image_crop.croppie('bind',
                                    {
                                        url: event.target.result
                                    }).then(function() {});
                                }
                                reader.readAsDataURL(this.files[0]);
                                $('#uploadimageModal').modal('show');                
                            });
                            $('.crop_image').click(function(event)
                            {
                                $image_crop.croppie('result',
                                {
                                    type: 'canvas',
                                    size: 'viewport'
                                }).then(function(response)
                                {
                                    $.ajax(
                                    {
                                        url: "/user/updateProfilePicture",
                                        type: "POST",
                                        data:
                                        {
                                            image: response
                                        },
                                        success: function(data)
                                        {
                                            $('#uploadimageModal').modal('hide');
                                            if (data != "fail")
                                            {
                                                socket.emit('updateProfilePicture',
                                                {
                                                    profilePictureSetter: uid,
                                                    base64Data: data
                                                });
                                                //update images for profile
                                                $("#myProfilePicture").attr('src', response);
                                                $(".profilePictureOnUserProfile").attr('src', response);                                    
                                            }
                                            else
                                            { 
                                                bootbox.alert("Some problem occured while trying to update profile picture, try again later.");
                                            }
                                        }
                                    });
                                })
                            });
                            /*UPLOAD END*/

                            $(".profilePictureOnUserProfile").click(function(e)
                            {
                                var dialog = bootbox.dialog({
                                    title: "<span class='w3-right'>&nbsp;</span>",
                                    message: "<div class='text-center'><img src="+locationOfProfilePicture+" style='width: 95%; max-width:400px;'></div>"
                                });
                            });
                        }
                        else
                        {
                            bootbox.alert(
                            {
                                message: "Some error occured on server side. Try again later or report to technical team",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    },
                    error : function(data)
                    {
                        bootbox.alert(
                        {
                            message: "Some error occured on client side, check internet and try again",
                            className: 'rubberBand animated',
                            size: 'large'
                        });
                    }
                });  
            }
            //PROFILE VIEW 
            $('.viewProfile').click(function()
            {
                populateUserDetails(uid, 'me');                   
            });
            //end profile edit
            var fadeInWheal = 0; //initialize feeds wheal
            //theWheal feedsPlusToggler
            $(".feedsPlusToggler").click(function()
            {
                document.getElementById('wheelSound').muted = false;
                if(fadeInWheal == 0)
                {
                    document.getElementById('wheelSound').currentTime = 0;
                    document.getElementById('wheelSound').play();
                    document.getElementById('wheelSound').onplay = function()
                    {
                        resetActivity();
                        $(".theWheal").fadeIn("fast");
                        $(".theWheal").css("transform","rotate(360deg)");
                        $(".feedsPlusToggler").css("transform","rotate(45deg)");
                        fadeInWheal = 1;
                    };

                    setTimeout(function()
                    {
                        document.getElementById('wheelSound').pause();
                    }, 150);
                }
                else
                {
                    $(".theWheal").fadeOut("fast");
                    $(".theWheal").css("transform","rotate(-360deg)");
                    $(".feedsPlusToggler").css("transform","rotate(-90deg)");
                    fadeInWheal = 0;
                    //document.getElementById('wheelSound').play();
                }
            });
            var currentWindow = "mainDiv";
            var currentFeedInputWindow = "";
            function togglerForFeeds()
            {
                document.getElementById('wheelSound').muted = true;
                document.getElementById('wheelSound').play();
                //to fade out the feeds input menu
                // $(".feedsPlusMenu").toggle();
                $(".theWheal").fadeOut("fast");
                $(".theWheal").css("transform","rotate(-360deg)");
                $(".feedsPlusToggler").css("transform","rotate(-90deg)");
                fadeInWheal = 0;
                //hide other inputs
                $(".otherInputFoFeed").hide();
                //show the big menu
                $(".thePlaceForFeedsPostsInput").show();
            }           
            //painting
            $(".getImagePaint").click(function(e)
            {
                e.preventDefault();
                e.stopPropagation();
                togglerForFeeds();
                $("#paintingPlace").show();
            
                //1. initializing variable and conditions
                var canvas = document.getElementById("canvas");
                var ctx = canvas.getContext("2d");
                // canvas.width = 520;
                // canvas.height = 400;
                var mouse = false;
                ctx.lineJoin = "round";
                ctx.lineCap = "round";
                var positionX, positionY;

                //Element retrieval 
                var brush = document.getElementById("brush"); //Brush 
                var eraser = document.getElementById("erase"); //Eraser 
                var color = document.getElementById("myColor"); //Color
                var size = document.getElementById("myRange"); //Size
                var reset = document.getElementById("reset"); //reset
                var saveLink = document.getElementById("saveLink"); //saveLink element 

                //Set initial color conditions 
                var myColor = color.value;
                ctx.strokeStyle = myColor;

                //Set initial size conditions
                var mySize = size.value;
                ctx.lineWidth = mySize;

                canvas.style.cursor = "pointer";

                canvas.addEventListener("mousedown", brushDown, false);
                canvas.addEventListener("mousemove", brushMove, false);
                canvas.addEventListener("mouseup", brushUp, false);

                //4. Color change conditions
                function colorChange() {
                    myColor = color.value;
                    ctx.strokeStyle = myColor;
                }

                //5. Size change conditions
                function sizeChange() {
                    mySize = size.value;
                    ctx.lineWidth = mySize;
                    document.getElementById("brushSize").innerHTML = ""+ mySize +"";
                }

                //2.Make brush work
                function getCoordinates(canvas, e) {
                    var rect = canvas.getBoundingClientRect();
                    return {
                        x: e.clientX - rect.left,
                        y: e.clientY - rect.top
                    };
                }

                function brushDraw(canvas, positionX, positionY) {
                    if(mouse) {
                        ctx.lineTo(positionX, positionY);
                        ctx.stroke();
                        canvas.style.cursor = "pointer";
                    }
                }

                function brushDown(e) {
                    mouse = true;
                    var coordinates = getCoordinates(canvas, e);
                    canvas.style.cursor = "pointer";
                    positionX = coordinates.x;
                    positionY = coordinates.y;
                    ctx.beginPath();
                    ctx.moveTo(positionX, positionY);
                    ctx.lineTo(positionX, positionY);
                    ctx.stroke();
                }

                function brushMove(e) {
                    var coordinates = getCoordinates(canvas, e);
                    positionX = coordinates.x;
                    positionY = coordinates.y;
                    brushDraw(canvas, positionX, positionY);
                }

                function brushUp() {
                    mouse = false;
                    canvas.style.cursor = "default";
                }

                function brushClick() {
                    var brushColor = document.getElementById("myColor");
                    ctx.strokeStyle = brushColor.value; 
                    brush.style.border = "2px solid red";
                    eraser.style.border = "none";
                    
                    canvas.addEventListener("mousedown", brushDown, false); //bubble phase
                    canvas.addEventListener("mousemove", brushMove, false);
                    canvas.addEventListener("mouseup", brushUp, false);
                }

                //3. Making the eraser work 
                function eraserClick() {
                    ctx.strokeStyle = "#e6e6e6";
                    eraser.style.border = "2px solid red";
                    brush.style.border = "none";
                    
                    canvas.addEventListener("mousedown", brushDown, false);
                    canvas.addEventListener("mousemove", brushMove, false);
                    canvas.addEventListener("mouseup", brushUp, false);
                }

                //6. Making the reset button work 
                function resetClick() {
                    const context = canvas.getContext('2d');
                    context.clearRect(0, 0, canvas.width, canvas.height);
                }

                //7. Making the save button work 
                function saveClick() 
                {
                    if(canvas.toDataURL() == document.getElementById('blank').toDataURL())
                    {
                        bootbox.alert('No action made, use your pad to draw/mouse.');   
                        return false;           
                    }
                    else
                    {
                        var image = canvas.toDataURL(); //encodes image information into a base 64 format           
                        var privacy = "public";

                        $.ajax(
                        {
                            url: '/feeds/insertFeedImage',
                            type: 'POST',
                            data:
                            {
                                image: image,
                                caption: "",
                                privacy_status: privacy
                            },
                            success: function(data)
                            {
                                $(".closeModalForInputFeed").click(); //closing modal
                                resetClick(); // cleaning painting place

                                if (data.message == "success")
                                {
                                    socket.emit('newFeedEvent',
                                    {
                                        uid: uid
                                    });
                                    lastFeedId =  data.lastInsertedId;
                                    hideNoPostsDiv()
                                    $(".feedsWillGoHere").prepend("<div class='w3-card' id='feed_" + data.lastInsertedId + "'><div class='containFeed' id='" + data.lastInsertedId + "_feedEndBox'>         <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.userDetailsResults[0].user_last_name + " " + data.userDetailsResults[0].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.userDetailsResults[0].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment().format('H:mm A | Do MMM') + "</span></div><div class='w3-row' style='padding-top: 1%;'><div class='mediaHolder'><img src='"+image+"' class='exactPostImage' alt='Image not avaliable, report to technical team'></div>       <p> <i class='fa fa-heart likeFeedClass'  id='" + data.lastInsertedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.lastInsertedId + "'>(<span class='like_value'>0</span>)</sup>  &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.lastInsertedId + "'>(0)</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp; <span class='showViewers w3-right pointer'><span class='numberOfViews pointer'>0</span> Views </span><span class='keepNotificationType' id='1'></span> <div class='input-group'> <textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea> &nbsp; &nbsp; <div class='input-group-btn'> <button id='" + data.lastInsertedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'> <i class='fa fa-send-o fa-2x pointer' ></i> </button> </div> </div> </p></div>                 </div></div><div class='col-md-3'></div></div><div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");                   
                                    forEventsInFeeds(data.lastInsertedId);
                                }
                                else
                                {
                                    bootbox.alert(
                                    {
                                        message: "There was error sending post, please try again later!",
                                        size: 'large'
                                    });
                                }
                            },
                            error: function(data)
                            {
                                bootbox.alert(
                                {
                                    message: "Some problem occured, check your internet connection!",
                                    className: 'rubberBand animated',
                                    size: 'large'
                                });
                            }
                        }); 
                        
                    }
                    
                }

                //Event Listeners for tools 
                brush.addEventListener("click", brushClick); //Brush click event 
                eraser.addEventListener("click", eraserClick); //Eraser click event
                color.addEventListener("change", colorChange); //Color change event 
                size.addEventListener("change", sizeChange); //Size change event 
                reset.addEventListener("click", resetClick); //Reset click event 
                saveLink.addEventListener("click", saveClick); //Save click event
            });
            $(".localVideo").click(function()
            {
                togglerForFeeds();
                $('.file_multi_video').trigger('click');
                var videoUrl = "";
                $(".file_multi_video").change(function(event) 
                {

                    if($('#uploadVideoInputFile').get(0).files.length != 0)
                    {
                        //initialization
                        togglerForFeeds();
                        $("#holderLocalVideo").show();
                        var video = document.getElementById("video_here");
                        video.height = 300;
                        video.width = 700;
                        var file = event.target.files[0];
                        var blobURL = URL.createObjectURL(file);

                        fileName = file.name;

                        var fileExtension = ['mp4'];
                        if ($.inArray(fileName.split('.').pop().toLowerCase(), fileExtension) == -1) 
                        {
                            bootbox.confirm({
                                message: "Only formats are allowed : "+fileExtension.join(', '),
                                buttons: {
                                    confirm: {
                                        label: "<span class='revert-btn'>Retry</span>",
                                        className: 'btn-success'
                                    },
                                    cancel: {
                                        label: "Cancel",
                                        className: 'btn-danger'
                                    }
                                },
                                callback: function (result) 
                                {
                                    if(result == true)
                                    {
                                        $('.file_multi_video').trigger('click');
                                    }
                                    else
                                    {
                                        $(".closeModalForInputFeed").click();
                                    }
                                }
                            });     
                        }
                        else
                        {
                            document.getElementById("video_here").src = blobURL;
                            videoUrl = blobURL;
                            document.getElementById("video_here").muted = true;
                            

                            video.onloadedmetadata = function() 
                            {
                                if(video.duration === Infinity) 
                                {
                                    var thePromise = new Promise(function(resolve, reject)
                                    {
                                        video.currentTime = Number.MAX_SAFE_INTEGER;
                                        video.ontimeupdate = function()
                                        {
                                            this.ontimeupdate = () =>
                                            {
                                                return; // resolve(vid.duration);
                                            }
                                            resolve(video.duration);
                                        }
                                    }, function error(data)
                                    {
                                        bootbox.alert("Some error occured while reading this videos metadata, try again later");
                                    });
                                    thePromise.then(function(data)
                                    {
                                        proccessMoreVideoCheckTime(data);
                                    });
                                }
                                else
                                {
                                    proccessMoreVideoCheckTime(video.duration);
                                }
                                function proccessMoreVideoCheckTime(duration)
                                {
                                    if(duration > 360)
                                    {
                                            bootbox.confirm({
                                            title: "Video file large",
                                            message: "Please upload video of length less than <b>4 minutes 30 minutes</b>",
                                            buttons: {
                                                cancel: {
                                                    label: '<i class="fa fa-times"></i> Cancel'
                                                },
                                                confirm: {
                                                    label: '<i class="fa fa-check"></i> Upload'
                                                }
                                            },
                                            callback: function (result) 
                                            {
                                               // console.log('This was logged in the callback: ' + result);
                                                if(result == false)
                                                {
                                                    $(".closeModalForInputFeed").click();
                                                }
                                                else
                                                {
                                                    $('.file_multi_video').trigger('click');
                                                }
                                            }
                                        });
                                    }
                                    else
                                    {
                                        $('.sendLocalVideo').unbind().click(function(e)
                                        {
                                            var videoCaptionInputValue = $("#localVideoCaption").val();
                                            if (videoCaptionInputValue.replace(/^\s+|\s+$/g, "").length == 0 || videoCaptionInputValue =="") 
                                            {
                                                videoCaptionInputValue = "";
                                            }

                                            $('.uploadStatus').html("Uploading please...")
                                            var reader = new FileReader();
                                            reader.onload = function(event)
                                            {
                                                var fd = {};
                                                fd["fname"] = "test.mp4";
                                                fd["data"] = event.target.result;
                                                $.ajax
                                                ({
                                                    type: 'POST',
                                                    url: '/feeds/insertFeedVideo',
                                                    data:
                                                    {
                                                        fd: fd,
                                                        videoCaptionInputValue: videoCaptionInputValue
                                                    },
                                                    success : function(response)
                                                    {
                                                        $("#holderLocalVideo").show();
                                                        $(".closeModalForInputFeed").click();
                                                        document.getElementById("video_here").pause();

                                                        if(response.message == 'success')
                                                        {
                                                            socket.emit('newFeedEvent',
                                                            {
                                                                uid: uid
                                                            });
                                                            lastFeedId = response.feedIdtoSend;
                                                            hideNoPostsDiv()
                                                            $(".feedsWillGoHere").prepend("<div class='w3-card' id='feed_" + response.feedIdtoSend + "'><div class='containFeed' id='" + response.feedIdtoSend + "_feedEndBox'>         <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + response.userDetailsResults[0].user_last_name + " " + response.userDetailsResults[0].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(response.userDetailsResults[0].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment().format('H:mm A | Do MMM') + "</span></div>           <div class='w3-row' style='padding-top: 1%;'><p>" + videoCaptionInputValue + "</p> <div class='videoOnFeedsContainer'> <video  class='exactVideoFeed' id='video" + response.feedIdtoSend + "' src='"+ videoUrl + "'> Your browser does not support HTML5 video. </video> <span class='togglePlayPause'><i class='fa fa-play fa-2x'></i></span> <div class='custom-seekbar' id='seek" + response.feedIdtoSend + "' style='border-radius: 45px !important;'> <span></span> </div> <span class='dragOnVideoContainer mYPink-color' style='font-style: italic;'> <img src='/img/tv.png' width='40px;'> <br><i class='fa fa-at'></i>" + lowerFirstLetter(response.userDetailsResults[0].msg_user_name) + " </span> </div>  <p> <i class='fa fa-heart likeFeedClass'  id='" + response.feedIdtoSend + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + response.feedIdtoSend + "'>(<span class='like_value'>0</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass'   data-toggle='collapse' data-target='#commentsHolder_"+ response.feedIdtoSend +"' aria-hidden='true'></i> <sup class='numberOfComments pointer'  id='numberOfComments_" + response.feedIdtoSend + "'>(0)</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp;<span class='showViewers w3-right pointer'><span class='numberOfViews pointer'>0</span> Views </span><span class='keepNotificationType' id='3'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + response.feedIdtoSend + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p> </div>     <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ response.feedIdtoSend +"'></div></div> </div> </div> <div class='row'><div class='col-md-3'></div>      <div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                            forEventsInFeeds(response.feedIdtoSend);
                                                            $('.uploadStatus').html("");
                                                        }
                                                        else
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "There was error sending post on server, please try again later!",
                                                                size: 'large'
                                                            });
                                                        }
                                                    },
                                                    error : function(data)
                                                    {
                                                        bootbox.alert(
                                                        {
                                                            message: "There was error  on client, please try again later!",
                                                            size: 'large'
                                                        });
                                                    }
                                                });
                                            };
                                            reader.readAsDataURL(file);
                                        }); 
                                    }
                                }
                            };

                        }
                    }
                    else
                    {
                        $(".closeModalForInputFeed").click();
                    }
                    
                });
            });
            //input local image
            $('.localImage').click(function()
            { 

                togglerForFeeds();
                $('#upload-file').trigger('click');
                const canvas = document.getElementById("canvasForLocalImage");
                const ctx = canvas.getContext("2d");

                let img = new Image();
                let fileName = "";

                const downloadBtn = document.getElementById("download-btn");
                const uploadFile = document.getElementById("upload-file");
                const revertBtn = document.getElementById("revert-btn");

                // Filter & Effect Handlers
                document.addEventListener("click", e => {
                  if (e.target.classList.contains("filter-btn")) {
                    if (e.target.classList.contains("brightness-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.brightness(5).render();
                      });
                    } else if (e.target.classList.contains("brightness-remove")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.brightness(-5).render();
                      });
                    } else if (e.target.classList.contains("contrast-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.contrast(5).render();
                      });
                    } else if (e.target.classList.contains("contrast-remove")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.contrast(-5).render();
                      });
                    } else if (e.target.classList.contains("saturation-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.saturation(5).render();
                      });
                    } else if (e.target.classList.contains("saturation-remove")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.saturation(-5).render();
                      });
                    } else if (e.target.classList.contains("vibrance-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.vibrance(5).render();
                      });
                    } else if (e.target.classList.contains("vibrance-remove")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.vibrance(-5).render();
                      });
                    } else if (e.target.classList.contains("vintage-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.vintage().render();
                      });
                    } else if (e.target.classList.contains("lomo-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.lomo().render();
                      });
                    } else if (e.target.classList.contains("clarity-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.clarity().render();
                      });
                    } else if (e.target.classList.contains("sincity-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.sinCity().render();
                      });
                    } else if (e.target.classList.contains("crossprocess-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.crossProcess().render();
                      });
                    } else if (e.target.classList.contains("pinhole-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.pinhole().render();
                      });
                    } else if (e.target.classList.contains("nostalgia-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.nostalgia().render();
                      });
                    } else if (e.target.classList.contains("hermajesty-add")) {
                      Caman("#canvasForLocalImage", img, function() {
                        this.herMajesty().render();
                      });
                    }
                  }
                });

                // Revert Filters
                revertBtn.addEventListener("click", e => {
                  Caman("#canvasForLocalImage", img, function() {
                    this.revert();
                  });
                });


                function removeEvent(el, type, handler) 
                {
                    if (el.detachEvent) el.detachEvent('on'+type, handler); else el.removeEventListener(type, handler);
                }
                // Upload File
                uploadFile.addEventListener("change", () => {
                //$(".submitPhotoFeedButton").unbind().click(function(e)

                  // Get File
                  const file = document.getElementById("upload-file").files[0];
                  // Init FileReader API
                  const reader = new FileReader();

                  // Check for file
                  if (file) {
                    // Set file name



                    togglerForFeeds();
                    $("#holderLocalImage").show();
                    fileName = file.name;

                    var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
                    if($.inArray(fileName.split('.').pop().toLowerCase(), fileExtension) == -1) 
                    {
                        bootbox.confirm({
                            message: "Only formats are allowed : "+fileExtension.join(', '),
                            buttons: {
                                confirm: {
                                    label: "<span class='revert-btn'>Retry</span>",
                                    className: 'btn-success'
                                },
                                cancel: {
                                    label: "Cancel",
                                    className: 'btn-danger'
                                }
                            },
                            callback: function (result) 
                            {
                                if(result == true)
                                {
                                    $('#upload-file').trigger('click');
                                }
                                else
                                {
                                    // document.getElementById("upload-file").files[0] = null;
                                    $(".closeModalForInputFeed").click();
                                }
                            }
                        });
                    }
                    else
                    {
                        reader.readAsDataURL(file);
                    }                   
                  }

                  // Add image to canvas
                  reader.addEventListener(
                    "load",
                    () => {
                      // Create image
                      img = new Image();
                      // Set image src
                      img.src = reader.result;
                      // On image load add to canvas
                      img.onload = function() {
                        canvas.width = img.width;
                        canvas.height = img.height;
                        ctx.drawImage(img, 0, 0, img.width, img.height);
                        canvas.removeAttribute("data-caman-id");
                      };
                    },
                    false
                  );
                });


                //           //GET SOURCE OF PHOTO
                var getDataUrl = function(img)
                {
                    var canvas = document.createElement('canvas');
                    canvas.width = img.width;
                    canvas.height = img.height;
                    var ctx = canvas.getContext('2d');
                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                    return canvas.toDataURL();
                };
                //send post click
                $(".submitPhotoFeedButton").unbind().click(function(e)
                {
                    
                    e.preventDefault();
                    e.stopPropagation();   
                    var image = getDataUrl(document.getElementById('canvasForLocalImage'));
                    var imgUrl = image;
                    var imageCaption = $("#localImageCaption").val();
                    var privacy = "public";
                    //$('#cancelTakePhoto').click();
                    // $("#imageCaption").val("");
                    
                    $("#localImageCaption").val("");

                    $.ajax(
                    {
                        url: '/feeds/insertFeedImage',
                        type: 'POST',
                        data:
                        {
                            image: image,
                            caption: imageCaption,
                            privacy_status: privacy
                        },
                        success: function(data)
                        {
                            $(".closeModalForInputFeed").click();
                            //document.getElementById('outputForLocalImage').setAttribute('src', null);
                            if (data.message == "success")
                            {
                                socket.emit('newFeedEvent',
                                {
                                    uid: uid
                                });
                                lastFeedId = data.lastInsertedId;
                                hideNoPostsDiv()
                                $(".feedsWillGoHere").prepend("<div class='w3-card' id='feed_" + data.lastInsertedId + "'><div class='containFeed' id='" + data.lastInsertedId + "_feedEndBox'>         <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.userDetailsResults[0].user_last_name + " " + data.userDetailsResults[0].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.userDetailsResults[0].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment().format('H:mm A | Do MMM') + "</span></div><div class='w3-row' style='padding-top: 1%;'><p>" + imageCaption + "</p> <div class='mediaHolder'><img src='" + imgUrl + "' class='exactPostImage' alt='Image not avaliable, report to technical team'></div>      <p> <i class='fa fa-heart likeFeedClass'  id='" + data.lastInsertedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.lastInsertedId + "'>(<span class='like_value'>0</span>)</sup>  &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.lastInsertedId + "'>(0)</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp; <span class='keepNotificationType' id='1'></span> <div class='input-group'> <textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea> &nbsp; &nbsp; <div class='input-group-btn'> <button id='" + data.lastInsertedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'> <i class='fa fa-send-o fa-2x pointer' ></i> </button> </div> </div> </p></div>                  </div></div><div class='col-md-3'></div></div><div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");                   
                                forEventsInFeeds(data.lastInsertedId);
                            }
                            else
                            {

                                bootbox.alert(
                                {
                                    message: "There was error sending post, please try again later. Error: "+data.message+ "!",
                                    size: 'large'
                                });
                            }
                        },
                        error: function(data)
                        {
                            bootbox.alert(
                            {
                                message: "Some problem occured, check your internet connection!",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    });
                });
            });
            //for text post
            $(".togglefeedsTextField").click(function()
            {
                //hide others
                togglerForFeeds();

                stopStreamedVideo();
                //show current
                $("#feedsTextField").fadeIn();
            });
            //CAMERA TO TRAKE PHOTO
            $(".getImageFromCameraFeeds").click(function()
            {
                //hide others
                togglerForFeeds();
                //show current
                $("#cameraPlaceContainer").fadeIn();
                $(".imageProccessingDiv").hide();
                $('.inputForImage').show();

                
                var width = 520; // We will scale the photo width to this   width:520px; height:340px;
                var height = 0; // This will be computed based on the input stream
                var streaming = false;

                var video = document.getElementById('videoForImage');
                var canvas = document.getElementById('canvasToDrawPhotoTo');
                var photo = document.getElementById('outputForImage');
                var stream = null;


                //getting user media
                navigator.mediaDevices.getUserMedia({video: {width: 520}, audio: false})
                .then(function(stream) {
                    video.srcObject = stream;
                    window.localStream = stream;
                    video.play();
                    video.onplay = function()
                    {
                        resetActivity();
                    }
                    video.ontimeupdate = function()
                    {
                        resetActivity();    
                    }
                })
                .catch(function(err) {
                    bootbox.alert("An error occurred:"+ err);
                    return;
                });

                var imgUrl = "";
                //capturing image and proccessing
                $('#startbutton').click(function(e)
                {
                    //ensure no effect to image
                    Caman('#outputForImage', function()
                    {
                        this.revert(false);
                    });
                    
                    var context = canvas.getContext('2d');
                    if (width && height) 
                    {
                        

                        canvas.width = width;
                        canvas.height = height;
                        context.drawImage(video, 0, 0, width, height);
                    
                        var data = canvas.toDataURL('image/png');
                        imgUrl = data;
                        
                        $('.inputForImage').hide(function()
                        {
                            photo.setAttribute('src', data);
                            $(".imageProccessingDiv").show();
                            stopStreamedVideo();
                        });
                        $(".btnTestEffect").click(function()
                        {
                            var effect = $(this).attr('id');
                            Caman('#outputForImage', function()
                            {
                                this.revert();
                                if (effect == "vintage")
                                {
                                    this.vintage();
                                }
                                if (effect == "lomo")
                                {
                                    this.lomo();
                                }
                                if (effect == "clarity")
                                {
                                    this.clarity();
                                }
                                if (effect == "sinCity")
                                {
                                    this.sinCity();
                                }
                                if (effect == "sunrise")
                                {
                                    this.sunrise();
                                }
                                if (effect == "crossProcess")
                                {
                                    this.crossProcess();
                                }
                                if (effect == "orangePeel")
                                {
                                    this.orangePeel();
                                }
                                if (effect == "love")
                                {
                                    this.love();
                                }
                                if (effect == "grungy")
                                {
                                    this.grungy();
                                }
                                if (effect == "jarques")
                                {
                                    this.jarques();
                                }
                                if (effect == "pinhole")
                                {
                                    this.pinhole();
                                }
                                if (effect == "oldBoot")
                                {
                                    this.oldBoot();
                                }
                                if (effect == "glowingSun")
                                {
                                    this.glowingSun();
                                }
                                if (effect == "hazyDays")
                                {
                                    this.hazyDays();
                                }
                                if (effect == "herMajesty")
                                {
                                    this.herMajesty();
                                }
                                if (effect == "nostalgia")
                                {
                                    this.nostalgia();
                                }
                                if (effect == "hemingway")
                                {
                                    this.hemingway();
                                }
                                if (effect == "concentrate")
                                {
                                    this.concentrate();
                                }
                                //this.brightness(10);
                                // this.contrast(30);
                                // this.sepia(60);
                                // this.saturation(-30);
                                this.render();
                            })
                        });

                        
                    }
                })

                $("#cancelTakePhoto").click(function(e)
                {
                    stopStreamedVideo();
                    //hide inputs
                    $(".otherInputFoFeed").hide();
                    //show the big menu
                    $(".thePlaceForFeedsPostsInput").hide();
                });

                //redo/ back button
                $(".backToTakePicture").click(function()
                {
                    stopStreamedVideo();
                    $(".getImageFromCameraFeeds").click();
                })

                //to set width and height
                video.addEventListener('canplay', function(ev){
                    if(!streaming) 
                    {
                        height = video.videoHeight / (video.videoWidth/width);
                  
                        // Firefox currently has a bug where the height can't be read from
                        if (isNaN(height)) {
                          height = width / (4/3);
                        }
                      
                        video.setAttribute('width', width);
                        video.setAttribute('height', height);
                        canvas.setAttribute('width', width);
                        canvas.setAttribute('height', height);
                        streaming = true;
                  }
                }, false);



                //GET SOURCE OF PHOTO
                var getDataUrl = function(img)
                {
                    var canvas = document.createElement('canvas');
                    canvas.width = img.width;
                    canvas.height = img.height;
                    var ctx = canvas.getContext('2d');
                    ctx.drawImage(img, 0, 0);
                    return canvas.toDataURL();
                };


                $(".submitPhotoFeedButton").unbind().click(function(e)
                {
                    var image = getDataUrl(document.getElementById('outputForImage'));
                    var imageCaption = $("#imageCaption").val();
                    var privacy = "public";
                    $('#cancelTakePhoto').click();
                    // $("#imageCaption").val("");
                    // photo.setAttribute('src', null);


                    $.ajax(
                    {
                        url: '/feeds/insertFeedImage',
                        type: 'POST',
                        data:
                        {
                            image: image,
                            caption: imageCaption,
                            privacy_status: privacy
                        },
                        success: function(data)
                        {
                            if (data.message == "success")
                            {
                                socket.emit('newFeedEvent',
                                {
                                    uid: uid
                                });
                                lastFeedId =  data.lastInsertedId;
                                hideNoPostsDiv()
                                $(".feedsWillGoHere").prepend("<div class='w3-card' id='feed_" + data.lastInsertedId + "'><div class='containFeed' id='" + data.lastInsertedId + "_feedEndBox'>         <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.userDetailsResults[0].user_last_name + " " + data.userDetailsResults[0].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.userDetailsResults[0].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment().format('H:mm A | Do MMM') + "</span></div><div class='w3-row' style='padding-top: 1%;'><p>" + imageCaption + "</p> <div class='mediaHolder'><img src='" + imgUrl + "' class='exactPostImage' alt='Image not avaliable, report to technical team'></div>      <p> <i class='fa fa-heart likeFeedClass'  id='" + data.lastInsertedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.lastInsertedId + "'>(<span class='like_value'>0</span>)</sup>  &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.lastInsertedId + "'>(0)</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp; <span class='keepNotificationType' id='1'></span> <div class='input-group'> <textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea> &nbsp; &nbsp; <div class='input-group-btn'> <button id='" + data.lastInsertedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'> <i class='fa fa-send-o fa-2x pointer' ></i> </button> </div> </div> </p></div>                  </div></div><div class='col-md-3'></div></div><div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");                   
                                forEventsInFeeds(data.lastInsertedId);
                            }
                            else
                            {
                                bootbox.alert(
                                {
                                    message: "There was error sending post, please try again later!",
                                    size: 'large'
                                });
                            }
                        },
                        error: function(data)
                        {
                            bootbox.alert(
                            {
                                message: "Some problem occured, check your internet connection!",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    });
                });
            });
            //CAMERA TO TAKE VIDEO
            $(".getVideoFromCameraFeeds").click(function(e)
            {
                e.preventDefault();
                e.stopPropagation();

                //hide others
                togglerForFeeds();
                $("#videoPlace").fadeIn();
                $('.audioPlaceContainer').show();
                // $('#play').hide();

                startMediaStream(); //start stream

                //handles audio input
                var hasAudio = false;

                /*
                    const blob = new Blob([file], {type: 'video/webm'})
                    Blob.slice(start, end, contentType);
                    Blob.mozSlice(), Blob.webkitSlice()
                */

                $("#audioFileInput").on('change', function(e) 
                {
                    e.preventDefault();
                    e.stopPropagation();

                    var file = audioFileInput.files[0];
                    var fileName = e.target.files[0].name;


                    let last_dot = fileName.lastIndexOf('.');
                    let ext = fileName.slice(last_dot + 1);
                    if(ext == "mp3" || ext == "mp4")
                    {
                        $(".audioFileName").html("<span> | "+fileName+"</span>");

                        $("#theAudioPlayerForVideo").attr("src", URL.createObjectURL(audioFileInput.files[0]));

                        document.getElementById("theAudioPlayerForVideo").addEventListener('canplaythrough', function() 
                        { 
                           //document.getElementById("theAudioPlayerForVideo").play();
                           hasAudio = true;

                        }, false);
                        
                    }
                    else
                    {
                        bootbox.alert("Only mp3 or mp4 is allowed for custom audio on video.");
                        audioFileInput.files.length = 0;
                        hasAudio = false;
                        /* handle the error */
                       // $(".getVideoFromCameraFeeds").click();
                    }                   
                });

                //Initialization for media recorder
                const mediaSource = new MediaSource();
                mediaSource.addEventListener('sourceopen', handleSourceOpen, false);
                let mediaRecorder;
                let recordedBlobs;
                let sourceBuffer;
                var isRecording = false;
                var errorMsgElement = document.querySelector('span#errorMsg');
                var recordedVideo = document.querySelector('video#recorded');
                var recordButton = document.querySelector('button#record');


                //sending video  
                $(".sendVideo").unbind().click(function(e)
                {
                    const blob = new Blob(recordedBlobs,
                    {
                        type: 'video/mp4'
                    });

                    var videoCaptionInputValue = $("#videoCaptionInput").val();
                    var videoFeedUrl = window.URL.createObjectURL(blob);
                    $("#videoCaptionInput").val(""); // reseting caption

                    var reader = new FileReader();
                    reader.onload = function(event)
                    {
                        var fd = {};
                        fd["fname"] = "test.mp4";
                        fd["data"] = event.target.result;
                        $.ajax
                        ({
                            type: 'POST',
                            url: '/feeds/insertFeedVideo',
                            data:
                            {
                                fd: fd,
                                videoCaptionInputValue: videoCaptionInputValue
                            },
                            success : function(response)
                            {
                                if(response.message == 'success')
                                {
                                    socket.emit('newFeedEvent',
                                    {
                                        uid: uid
                                    });
                                    lastFeedId = response.feedIdtoSend;
                                    hideNoPostsDiv()
                                    $(".feedsWillGoHere").prepend("<div class='w3-card' id='feed_" + response.feedIdtoSend + "'><div class='containFeed' id='" + response.feedIdtoSend + "_feedEndBox'>         <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + response.userDetailsResults[0].user_last_name + " " + response.userDetailsResults[0].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(response.userDetailsResults[0].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment().format('H:mm A | Do MMM') + "</span></div>           <div class='w3-row' style='padding-top: 1%;'><p>" + videoCaptionInputValue + "</p> <div class='videoOnFeedsContainer'> <video  class='exactVideoFeed' id='video" + response.feedIdtoSend + "' src='"+ videoFeedUrl + "'> Your browser does not support HTML5 video. </video> <span class='togglePlayPause'><i class='fa fa-play fa-2x'></i></span> <div class='custom-seekbar' id='seek" + response.feedIdtoSend + "' style='border-radius: 45px !important;'> <span></span> </div> <span class='dragOnVideoContainer mYPink-color' style='font-style: italic;'> <img src='/img/tv.png' width='40px;'> <br><i class='fa fa-at'></i>" + lowerFirstLetter(response.userDetailsResults[0].msg_user_name) + " </span> </div>  <p> <i class='fa fa-heart likeFeedClass'  id='" + response.feedIdtoSend + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + response.feedIdtoSend + "'>(<span class='like_value'>0</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass'   data-toggle='collapse' data-target='#commentsHolder_"+ response.feedIdtoSend +"' aria-hidden='true'></i> <sup class='numberOfComments pointer'  id='numberOfComments_" + response.feedIdtoSend + "'>(0)</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp;<span class='showViewers pointer'><span class='numberOfViews pointer'>0</span> Views </span><span class='keepNotificationType' id='3'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + response.feedIdtoSend + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p> </div>     <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ response.feedIdtoSend +"'></div></div> </div> </div> <div class='row'><div class='col-md-3'></div>                                                        <div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                    forEventsInFeeds(response.feedIdtoSend);
                                }
                                else
                                {
                                    bootbox.alert(
                                    {
                                        message: "There was error sending post on server, please try again later!",
                                        size: 'large'
                                    });
                                }
                                $(".closeModalForInputFeed").click();
                                $(".feedsInputChanger").hide();
                                $(".feedsWillGoHere").show();
                                $("#videoCaptionInput").val("");
                                videoToTakeStreamFrom.src = null;
                                videoToTakeStreamFrom.srcObject = null;
                                videoToTakeStreamFrom.src = null;
                            },
                            error : function(data)
                            {
                                bootbox.alert(
                                {
                                    message: "There was error  on client, please try again later!",
                                    size: 'large'
                                });
                            }
                        });
                    };
                    reader.readAsDataURL(blob);
                });
                //closing modal
                $('.closeModalForInputFeed').click(function(e)
                {

                    e.preventDefault();
                    e.stopPropagation();
                    recordedVideo.pause();
                    $('#gum').show();
                    $('#recorded').hide();
                    if(isRecording == true)
                    {
                        stopRecording();
                    }
                    isRecording = false;
                    hasAudio = false;
                    $('#record').show();
                    $("#play").hide();
                    
                    $(".audioFileName").html("No audio file added");
                    $("#recordingTimerAndImage").hide();
                    recordButton.textContent = 'Start';
                    handleCloseVideoRecorded();
                })

                //send button
                $('#restartCameraForVideo').unbind().click(function(e) 
                {
                    startMediaStream(); //start stream
                    handleCloseVideoRecorded();
                    // recordButton.disabled = false;
                    // playButton.disabled = false;

                    // document.querySelector('video#recorded').pause();
                    // $('#recorded').hide();
                    $(".countdown").html("");
                    clearInterval(interval);
                    
                    $('.audioPlaceContainer').show();
                    $(".audioFileName").html("No audio file added");
                    $('#gum').show();
                    $('#record').show();
                    $('#play').hide();
                });

                function handleCloseVideoRecorded()
                {
                    // document.querySelector('video#recorded').hide();
                    // document.querySelector('video#recorded').pause();
                    // document.querySelector('video#recorded').hide();

                    document.querySelector('video#recorded').pause();
                    $('#recorded').hide();
                    //$('#recorded').src = null;
                    //$('#recorded').srcObject = null;


                    recordButton.textContent = 'Start';
                    $('.captionPlaceForVideo').hide();
                    $('#restartCameraForVideo').hide();
                    // recordButton.disabled = false;
                    // playButton.disabled = true;
                }

                //counter for video
                var interval;
                function countDownForVideoRecord()
                {
                    var timer2 = "4:30";
                    $(".countdown").html("4:30");
                    interval = setInterval(function() 
                    {
                        var timer = timer2.split(':');
                        //by parsing integer, I avoid all extra string processing
                        var minutes = parseInt(timer[0], 10);
                        var seconds = parseInt(timer[1], 10);
                        --seconds;
                        minutes = (seconds < 0) ? --minutes : minutes;
                        seconds = (seconds < 0) ? 59 : seconds;
                        seconds = (seconds < 10) ? '0' + seconds : seconds;
                        //minutes = (minutes < 10) ?  minutes : minutes;
                        $('.countdown').html(minutes + ':' + seconds);
                        if (minutes < 0) clearInterval(interval);
                        //check if both minutes and seconds are 0
                        if ((seconds <= 0) && (minutes <= 0))
                        {
                            //alert("done")
                            $("#record").click();
                            clearInterval(interval);
                        }
                        timer2 = minutes + ':' + seconds;
                    }, 1000);
                }


                $("#record").unbind().click(function(e) 
                {
                    $('.audioPlaceContainer').hide();
                    if(isRecording === false) 
                    {
                        $('#play').hide();
                        if(hasAudio === true)
                        {
                            //recordButton.disabled = true;
                            var audioFileMedia = document.getElementById("theAudioPlayerForVideo");

                            var videoToTakeStreamFrom = document.getElementById('gum');
                            audioFileMedia.play();
                            audioFileMedia.onplay = function()
                            {
                                resetActivity();
                            }
                            var currentAudioStream = audioFileMedia.captureStream();
                            var videoStreamFromCamera = videoToTakeStreamFrom.captureStream();
                            var currentAudioStreamTrack = currentAudioStream.getAudioTracks();
                            var videoStreamFromCameraAudio = videoStreamFromCamera.getAudioTracks();

                            videoStreamFromCamera.removeTrack(videoStreamFromCameraAudio[0]);
                            videoStreamFromCamera.addTrack(currentAudioStreamTrack[0]);

                            window.stream = videoStreamFromCamera;

                            document.querySelector('video#recorded').style.display = 'none';
                            document.querySelector('video#recorded').pause();
                            document.querySelector('video#gum').style.display = 'block';
                            $("#recordingTimerAndImage").show();
                            $(".captionPlaceForVideo").hide();
                            document.getElementById("recordingTimerAndImage").style.display = 'block';
                            isRecording = true;
                            hasAudio = false;
                            countDownForVideoRecord();
                            startRecording();
                            $(".audioFileName").html("No audio file added");
                        }
                        else
                        {
                            document.querySelector('video#recorded').style.display = 'none';
                            document.querySelector('video#recorded').pause();
                            document.querySelector('video#gum').style.display = 'block';
                            $("#recordingTimerAndImage").show();
                            $(".captionPlaceForVideo").hide();
                            document.getElementById("recordingTimerAndImage").style.display = 'block';
                            isRecording = true;
                            hasAudio = false;
                            startRecording();
                            countDownForVideoRecord()
                            $(".audioFileName").html("No audio file added");                                    
                        }
                    } 
                    else 
                    {
                        $('#record').hide();
                        $('#play').show();
                        document.getElementById("theAudioPlayerForVideo").pause();
                        $(".audioFileName").html("No audio file added");
                        hasAudio = false;
                        $("#recordingTimerAndImage").hide();
                        $(".captionPlaceForVideo").show();
                        stopRecording();
                        isRecording = false;
                        recordButton.textContent = 'Start';
                        playButton.disabled = false;
                        $('#restartCameraForVideo').show();
                        //downloadButton.disabled = false;
                    }
                });

                const playButton = document.querySelector('button#play');
                $("#play").unbind().click(function(e)
                {
                    document.querySelector('video#gum').style.display = 'none';
                    document.querySelector('video#recorded').style.display = 'block';

                    var superBuffer = new Blob(recordedBlobs, {type: 'video/mp4'});


                    // recordedVideo.src = null;
                    // recordedVideo.srcObject = null;
                    document.querySelector('video#recorded').src = URL.createObjectURL(superBuffer);
                    // console.log(window.URL.createObjectURL(superBuffer));
                    // URL.createObjectURL(stream);
                    document.querySelector('video#recorded').controls = true;
                    recordedVideo.play();
                    recordedVideo.ontimeupdate = function()
                    {
                        resetActivity();
                    }
                    recordedVideo.onplay = function()
                    {
                        resetActivity();
                    }
                    recordedVideo.onended = function()
                    {
                        recordedVideo.pause();
                    };
                });

                


                function handleSourceOpen(event) 
                {
                    console.log('MediaSource opened');
                    sourceBuffer = mediaSource.addSourceBuffer('video/webm; codecs="vp8"');
                    console.log('Source buffer: ', sourceBuffer);
                }

                function handleDataAvailable(event) 
                {
                    if (event.data && event.data.size > 0) 
                    {
                      recordedBlobs.push(event.data);
                    }
                }

                function startRecording() 
                {
                    recordedBlobs = [];

                    
                    let options = {mimeType: 'video/webm;codecs=vp9'};
                    if (!MediaRecorder.isTypeSupported(options.mimeType)) 
                    {
                        console.error(`${options.mimeType} is not Supported`);
                        errorMsgElement.innerHTML = `${options.mimeType} is not Supported`;
                        options = {mimeType: 'video/webm;codecs=vp8'};
                        if(!MediaRecorder.isTypeSupported(options.mimeType)) 
                        {
                            console.error(`${options.mimeType} is not Supported`);
                            errorMsgElement.innerHTML = `${options.mimeType} is not Supported`;
                            options = {mimeType: 'video/webm'};
                            if(!MediaRecorder.isTypeSupported(options.mimeType)) 
                            {
                                console.error(`${options.mimeType} is not Supported`);
                                errorMsgElement.innerHTML = `${options.mimeType} is not Supported`;
                                options = {mimeType: ''};
                            }
                        }
                     }

                    try 
                    {
                        mediaRecorder = new MediaRecorder(window.stream, options);
                    } 
                    catch (e) 
                    {
                        console.error('Exception while creating MediaRecorder:', e);
                        errorMsgElement.innerHTML = `Exception while creating MediaRecorder: ${JSON.stringify(e)}`;
                        return;
                    }

                    console.log('Created MediaRecorder', mediaRecorder, 'with options', options);
                    recordButton.textContent = 'Stop';
                    playButton.disabled = true;
                   // downloadButton.disabled = true;
                    mediaRecorder.onstop = (event) => 
                    {
                        console.log('Recorder stopped: ', event);
                    };

                    mediaRecorder.ondataavailable = handleDataAvailable;
                    mediaRecorder.start(10); // collect 10ms of data
                    mediaRecorder.requestData();
                    console.log('MediaRecorder started', mediaRecorder);
                }

                function stopRecording() 
                {
                    mediaRecorder.stop();
                    console.log('Recorded Blobs: ', recordedBlobs);
                }

                function handleSuccess(stream) 
                {
                    recordButton.disabled = false;
                    console.log('getUserMedia() got stream:', stream);
                    window.stream = stream;
                    window.keekOriginalStream = stream;

                    const gumVideo = document.querySelector('video#gum');
                    gumVideo.srcObject = stream;
                }

                async function init(constraints) 
                {
                    try 
                    {
                        const stream = await navigator.mediaDevices.getUserMedia(constraints);
                        handleSuccess(stream);
                    } 
                    catch(e) 
                    {
                        console.error('navigator.getUserMedia error:', e);
                        errorMsgElement.innerHTML = `navigator.getUserMedia error:${e.toString()}`;
                    }
                }

                  //document.querySelector('button#start').addEventListener('click', async () => {
                async function startMediaStream()
                {
                    const constraints = 
                    {
                      audio: 
                      {
                        echoCancellation: {exact: true}
                      },
                      video: 
                      {
                        width: 1280, height: 720
                      }
                    };
                    console.log('Using media constraints:', constraints);
                    await init(constraints);
                }
            });
            //STOP STREAM FOR VIDEO
            function stopTheVideoStreamAndToggleFeeds()
            {
                // document.querySelector('button#record').textContent = 'Start';
                if (typeof window.stream !== 'undefined')
                {
                    window.stream.getTracks().forEach(track => track.stop());
                }
                if (typeof window.localStream !== 'undefined')
                {
                    window.localStream.getTracks().forEach(track => track.stop());
                }
            }
            //STOP STREAM FOR IMAGE
            function stopStreamedVideo()
            {
                if (typeof window.localStream !== 'undefined')
                {
                    window.localStream.getTracks().forEach(track => track.stop());
                }
                if (typeof window.stream !== 'undefined')
                {
                    window.stream.getTracks().forEach(track => track.stop());
                }
            }
            //closeModalModalForInputFeed
            $(".closeModalForInputFeed").click(function()
            {
                $(this).parent().hide();
                stopStreamedVideo();
                stopTheVideoStreamAndToggleFeeds();
            });
            function hideNoPostsDiv()
            {
                $(".no-posts-div").remove();
            }
            function forEventsInFeeds(feed_id)
            {
                $(".theScrollH").niceScroll(
                {
                    cursorcolor: "#fc8a9e",
                    cursorwidth: "9px",
                    cursorborderradius: "0",
                    cursorminheight: 32, // set the minimum cursor height (pixel)
                    cursorfixedheight: 70,
                    autohidemode: false, // only cursor hidden
                    horizrailenabled: false
                });
              /***********************collapsing other div for comments**************************************/
                $('.collapse').on('show.bs.collapse', function () 
                {
                    //$('.collapse').getNiceScroll().remove();
                    $('.collapse.in').each(function()
                    {
                        $(this).collapse('hide');
                    });
                    //$('.collapse').niceScroll();
                });
                /*************************************** VIDEO PLAYER EVENTS **********************************/
                $(".custom-seekbar").on("click", function(e)
                {
                    
                    var thisSeekId = $(this).attr('id');
                    var uniqueId = thisSeekId.replace("seek", "");
                    var vid = document.getElementById("video" + uniqueId + "");


                    if (vid.paused == false)
                    {
                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");                                
                    }
                    else
                    {
                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-pause fa-2x'></i>");
                    }

                    
                    var thePromise = new Promise(function(resolve, reject)
                    {
                        vid.currentTime = Number.MAX_SAFE_INTEGER;
                        vid.ontimeupdate = function()
                        {
                            this.ontimeupdate = () =>
                            {
                                return; // resolve(vid.duration);
                            }
                            resolve(vid.duration);
                        }
                    }, function error(data)
                    {
                        console.error(data);
                    });
                    thePromise.then(function(data)
                    {
                        var durr = data;
                        var thisSeekOffset = $("#seek" + uniqueId).offset();
                        var left = (e.pageX - thisSeekOffset.left);
                        var totalWidth = 569;
                        var percentage = (left / totalWidth);
                        var vidTime = durr * percentage;
                        vid.currentTime = vidTime;
                        document.getElementById("video" + uniqueId + "").play();


                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-pause fa-2x'></i>");
                        vid.muted = false;
                        vid.ontimeupdate = function()
                        {
                            resetActivity();
                            var percentage = (vid.currentTime / durr) * 100;
                            $("#" + thisSeekId + " span").css("width", percentage + "%");
                            vid.onended = function() 
                            {
                                if(durr == vid.currentTime)
                                {
                                    vid.currentTime = 0;
                                    $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");
                                }
                               
                            };
                        }
                    });

                    $.ajax
                    ({
                        url : '/feeds/viewFeed',
                        method : 'POST',
                        data :
                        {
                            feedIdViewing : uniqueId
                        },
                        success : function(data)
                        {
                            if(data == 'success')
                            {
                                var numberN = parseInt($("#numberOfViewsId_"+uniqueId).text());
                                $("#numberOfViewsId_"+uniqueId).text(numberN + 1);
                            }   
                        }
                    });
                    
                });
                $(".togglePlayPause").click(function()
                {
                    var mY_video_id = $(this).siblings("video").attr('id');
                    var uniqueId = mY_video_id.replace("video", "");
                    var vid = document.getElementById("" + mY_video_id + "");

                    vid.muted = true;

                    if (vid.paused == false)
                    {
                        $(this).html("<i class='fa fa-play fa-2x'></i>");
                        vid.pause();
                    }
                    else
                    {
                        $(this).html("<i class='fa fa-pause fa-2x'></i>");
                        var thePromise = new Promise(function(resolve, reject)
                        {
                            vid.currentTime = Number.MAX_SAFE_INTEGER;
                            vid.ontimeupdate = function()
                            {
                                this.ontimeupdate = () =>
                                {
                                    return; // resolve(vid.duration);
                                }
                                resolve(vid.duration);
                            }
                        })

                        thePromise.then(function(data)
                        {
                            var durr = data;
                            var thisSeekOffset = $("#seek" + uniqueId).position();

                            var left = ($("#seek" + uniqueId + " span").width() - thisSeekOffset.left);
                            var totalWidth = 587;
                            var percentage = (left / totalWidth);
                            var vidTime = durr * percentage;
                            vid.play();
                            vid.muted = false;
                            vid.currentTime = vidTime;

                            vid.ontimeupdate = function(e)
                            {
                                resetActivity();
                                var percentage = (vid.currentTime / durr) * 100;
                                $("#seek" + uniqueId + " span").css("width", percentage + "%");
                                vid.onended = function() {
                                    if(durr == vid.currentTime)
                                    {
                                        vid.currentTime = 0;
                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");
                                    }
                                   
                                };
                            }

                        });
                    }
                    $.ajax
                    ({
                        url : '/feeds/viewFeed',
                        method : 'POST',
                        data :
                        {
                            feedIdViewing : uniqueId
                        },
                        success : function(data)
                        {   
                            if(data == 'success')
                            {
                                var numberN = parseInt($("#numberOfViewsId_"+uniqueId).text());
                                $("#numberOfViewsId_"+uniqueId).text(numberN + 1);
                            }
                        }
                    });
                });
                /*  VIDEO PLAYER ENDS HERE */
                $('.showViewers').click(function(e)
                {
                    var feedId = $(this).siblings('.postCommentButton').attr('id');
                    if ($(this).children().text() == 0)
                    {
                        return;
                    }
                    else
                    {
                        $.ajax(
                        {
                            url: "/feeds/showViewers",
                            method: "POST",
                            data:
                            {
                                thisFeedId: feedId
                            },
                            success: function(response)
                            {
                                if (response == 'empty')
                                {
                                    return;
                                }
                                else if (response == 'error')
                                {
                                    bootbox.alert(
                                    {
                                        message: "Some error occured, try again",
                                        className: 'rubberBand animated',
                                        size: 'large'
                                    });
                                }
                                else if (response.viewersResults.length)
                                {
                                    var viewersListResults = "";
                                    for (var i = 0; i < response.viewersResults.length; i++)
                                    {
                                        viewersListResults = viewersListResults + "<p id='" + response.viewersResults[i].msg_user_id + "'>" + response.viewersResults[i].user_first_name + " " + response.viewersResults[i].user_last_name + " viewed this post on " + moment(response.viewersResults[i].date_viewed).format('H:mm Do MMM') + "</p>";
                                    }
                                    bootbox.alert(
                                    {
                                        message: viewersListResults,
                                        size: 'medium'
                                    });
                                }
                            },
                            error: function(data)
                            {
                                bootbox.alert(
                                {
                                    message: "Some problem occured, check internet connection.",
                                    className: 'rubberBand animated',
                                    size: 'large'
                                });
                            }
                        });
                    }
                });
                $('.likesNumber').click(function(e)
                {
                    e.stopPropagation();
                    var thisFeedId = $(this).siblings('.likeFeedClass').attr('id');
                    $.ajax(
                    {
                        url: "/feeds/showFeedsLikes",
                        method: "POST",
                        data:
                        {
                            thisFeedId: thisFeedId
                        },
                        success: function(response)
                        {
                            if (response == 'empty')
                            {
                                return;
                            }
                            else if (response == 'error')
                            {
                                bootbox.alert(
                                {
                                    message: "Some error occured, try again",
                                    className: 'rubberBand animated',
                                    size: 'large'
                                });
                            }
                            else if (response.likersResults.length)
                            {
                                var likersListResults = "";
                                for (var i = 0; i < response.likersResults.length; i++)
                                {
                                    likersListResults = likersListResults + "<p id='" + response.likersResults[i].msg_user_id + "'>" + response.likersResults[i].user_first_name + " " + response.likersResults[i].user_last_name + " liked this post on " + moment(response.likersResults[i].date_liked).format('H:mm Do MMM') + "</p>";
                                }
                                bootbox.alert(
                                {
                                    message: likersListResults,
                                    size: 'medium'
                                });
                            }
                        },
                        error: function(data)
                        {
                            bootbox.alert(
                            {
                                message: "Some problem occured, check internet connection.",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    });
                });
                
                $(".closeNewFeedsTeller").click(function(e)
                {
                    e.stopPropagation();
                    $(".viewNewFeedsBox").hide();
                })
                $(".viewNewFeedsBox").click(function(e)
                {
                    e.stopPropagation();
                    $(".viewNewFeedsBox").hide();
                    $.ajax(
                    {
                        url: "/feeds/showNewFeeds",
                        method: "POST",
                        data:
                        {
                            lastFeedId: lastFeedId
                        },
                        success: function(data)
                        {
                            if (data == 'empty')
                            {
                                return;
                            }
                            else if (data == 'error')
                            {
                                bootbox.alert(
                                {
                                    message: "Some error occured, try again",
                                    className: 'rubberBand animated',
                                    size: 'large'
                                });
                            }
                            else if (data.newFeedsList.length)
                            {
                                lastFeedId = data.newFeedsList[0].thisFeedId;
                                for (var i = 0; i < data.newFeedsList.length; i++)
                                {
                                    if (data.newFeedsList[i].numberOfLikes == null)
                                    {
                                        data.newFeedsList[i].numberOfLikes = 0;
                                    }
                                    if (data.newFeedsList[i].numberOfComments == null)
                                    {
                                        data.newFeedsList[i].numberOfComments = 0;
                                    }
                                    if (data.newFeedsList[i].numberOfViews == null)
                                    {
                                        data.newFeedsList[i].numberOfViews = 0;
                                    }
                                    if (data.newFeedsList[i].story_type == 1)
                                    {
                                        if (data.newFeedsList[i].caption_content == null)
                                        {
                                            data.newFeedsList[i].caption_content = "";
                                        }
                                        $(".feedsWillGoHere").prepend("<div class='row' id='feed_" + data.newFeedsList[i].thisFeedId + "'><div class='col-md-3'></div><div class='col-md-6 w3-card'><div class='containFeed' id='" + data.newFeedsList[i].thisFeedId + "_feedEndBox'>           <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.newFeedsList[i].user_last_name + " " + data.newFeedsList[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.newFeedsList[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.newFeedsList[i].date_created).format('H:mm A | Do MMM') + "</span></div><div class='w3-row' style='padding-top: 1%;'><p>" + data.newFeedsList[i].caption_content + "</p> <div class='mediaHolder'><img src='/feeds_images/" + data.newFeedsList[i].media_name + "'  class='exactPostImage' alt='Image not avaliable, report to technical team'></div>       <p><span class='wrapper my-absolute'><span class='my-button'> <span class='send-icon like-icon fa fa-heart likes_icon_" + data.newFeedsList[i].thisFeedId+"' id='" + data.newFeedsList[i].thisFeedId + "'></span></span></span><sup class='likesNumber pointer' id='likes_" + data.newFeedsList[i].thisFeedId + "'>(<span class='like_value'>" + data.newFeedsList[i].numberOfLikes + "</span>)</sup>  &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.newFeedsList[i].thisFeedId + "'>(" + data.newFeedsList[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp; <span class='keepNotificationType' id='1'></span> <textarea placeholder='Enter your comment here...' class='form-control feedCommentInput' style='border-radius: 25px; margin-top: .6%;height: 40px'></textarea> <i id='" + data.newFeedsList[i].thisFeedId + "' class='postCommentButton fa fa-send pointer'></i> </p></div>                  </div></div><div class='col-md-3'></div></div><div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                    }
                                    else if (data.newFeedsList[i].story_type == 2)
                                    {
                                        //TEXT FEED
                                        $(".feedsWillGoHere").prepend("<div class='row'  id='feed_" + data.newFeedsList[i].thisFeedId + "'><div class='col-md-3'></div><div class='col-md-6 w3-card'><div class='containFeed' id='" + data.newFeedsList[i].thisFeedId + "_feedEndBox'>          <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.newFeedsList[i].user_last_name + " " + data.newFeedsList[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.newFeedsList[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.newFeedsList[i].date_created).format('H:mm A | Do MMM') + "</span></div>            <div class='w3-row' style='padding-top: 1%;'><p>" + data.newFeedsList[i].feed_postcontent + "</p></div>     <p> <span class='wrapper my-absolute'><span class='my-button'> <span class='send-icon like-icon fa fa-heart likes_icon_" + data.newFeedsList[i].thisFeedId+"' id='" + data.newFeedsList[i].thisFeedId + "'></span></span></span> <sup class='likesNumber pointer' id='likes_" + data.newFeedsList[i].thisFeedId + "'>(<span class='like_value'>" + data.newFeedsList[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.newFeedsList[i].thisFeedId + "'>(" + data.newFeedsList[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>    &nbsp; &nbsp;<span class='keepNotificationType' id='2'></span> <textarea placeholder='Enter your comment here...' class='form-control feedCommentInput' style='border-radius: 25px; margin-top: .6%;height: 40px'></textarea> <i id='" + data.newFeedsList[i].thisFeedId + "' class='postCommentButton fa fa-send pointer'></i></p>                   </div></div><div class='col-md-3'></div></div><div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                    }
                                    else if (data.newFeedsList[i].story_type == 3)
                                    {
                                        //VIDEO FEED
                                        if (data.newFeedsList[i].caption_content == null)
                                        {
                                            data.newFeedsList[i].caption_content = "";
                                        }
                                        $(".feedsWillGoHere").prepend("<div class='row' id='feed_" + data.newFeedsList[i].thisFeedId + "'><div class='col-md-3'></div><div class='col-md-6 w3-card'><div class='containFeed' id='" + data.newFeedsList[i].thisFeedId + "_feedEndBox'>           <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.newFeedsList[i].user_last_name + " " + data.newFeedsList[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.newFeedsList[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.newFeedsList[i].date_created).format('H:mm A | Do MMM') + "</span></div>            <div class='w3-row' style='padding-top: 1%;'><p>" + data.newFeedsList[i].caption_content + "</p> <div class='videoOnFeedsContainer'><video src='/feeds_video/" + data.newFeedsList[i].media_name + "'  style='width: 587px !important; height: auto; margin-bottom: 0px;' class='exactVideoFeed' id='" + data.newFeedsList[i].thisFeedId + "'> Your browser does not support HTML5 video. </video>          <span class='dragOnVideoContainer mYPink-color' style='font-style: italic;'><img src='/img/logo.png' width='80px;'><br><i class='fa fa-at'></i>" + lowerFirstLetter(data.newFeedsList[i].msg_user_name) + "</span></div>        <p> <span class='wrapper my-absolute'><span class='my-button'> <span class='send-icon like-icon fa fa-heart likes_icon_" + data.newFeedsList[i].thisFeedId+"' id='" + data.newFeedsList[i].thisFeedId + "'></span></span></span> <sup class='likesNumber pointer' id='likes_" + data.newFeedsList[i].thisFeedId + "'>(<span class='like_value'>" + data.newFeedsList[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.newFeedsList[i].thisFeedId + "'>(" + data.newFeedsList[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp;<span class='showViewers w3-right pointer'><span class='numberOfViews pointer' id='numberOfViewsId_"+data.postsListResults[i].thisFeedId+"'>" + data.newFeedsList[i].numberOfViews + "</span> Views </span><span class='keepNotificationType' id='3'></span> <textarea placeholder='Enter your comment here...' class='form-control feedCommentInput' style='border-radius: 25px; margin-top: .6%;height: 40px'></textarea> <i id='" + data.newFeedsList[i].thisFeedId + "' class='postCommentButton fa fa-send pointer'></i> </p>                 </div></div><div class='col-md-3'></div></div><div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                    }
                                    if (data.newFeedsList[i].checkIfLiked > 0)
                                    {
                                        // $("#likes_" + data.newFeedsList[i].thisFeedId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                        $(".likes_icon_" + data.newFeedsList[i].thisFeedId).css("color", "#fc8a9e");
                                    }
                                }
                                //HANDLE LIKING OF VIDEO
                                $( ".my-button" ).on( "click", function() 
                                {
                                    var thisId = $(this).find(".like-icon").attr('id');
                                    $.ajax(
                                    {
                                        url: "/feeds/likeFeed",
                                        method: "POST",
                                        data:
                                        {
                                            feedIdLiking: thisId
                                        },
                                        success: function(response)
                                        {
                                            // $(this).prop("disabled",false);
                                            function isObject(obj)
                                            {
                                                return obj != null && obj.constructor.name === "Object"
                                            }
                                            if (response.message == 'liked')
                                            {
                                                // $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                $("#likes_" + thisId).children('.like_value').text(numberN + 1);
                                                //update other who liked same photo
                                                socket.emit('updateFeedLiked',
                                                {
                                                    userLiked: uid,
                                                    thisId: thisId,
                                                    ownerId : response.feedsOwnerId
                                                });
                                            }
                                            else if (response.message == 'like_deleted')
                                            {
                                                // $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#686868");
                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                $("#likes_" + thisId).children('.like_value').text(numberN - 1);




                                                socket.emit('updateFeedUnliked',
                                                {
                                                    userLiked: uid,
                                                    thisId: thisId,
                                                    ownerId : response.feedsOwnerId
                                                });

                                            }
                                            else if (response == 'error')
                                            {
                                                bootbox.alert(
                                                {
                                                    message: "Some problem occured, maybe the post is no longer existing",
                                                    className: 'rubberBand animated',
                                                    size: 'large'
                                                });
                                            }
                                        },
                                        error: function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Some problem occured, check internet connection.",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                    });
                                    if($(this).find("span").css("color") == "rgb(104, 104, 104)")
                                    {

                                      elSpan = this.querySelector('span')
                                      aniPos = findCenter($(this));
                                      myAnimation1.tune({ top: aniPos.y, left: aniPos.x });
                                      myAnimation2.tune({ top: aniPos.y, left: aniPos.x });
                                      myTimeline.replay();

                                      new mojs.Tween({
                                            duration : 900,
                                            onUpdate: function(progress) {
                                                if(progress > 0.3) {
                                                    var scaleProgress = scaleCurve(progress);
                                                    elSpan.style.WebkitTransform = elSpan.style.transform = 'scale3d(' + scaleProgress + ',' + scaleProgress + ',1)';
                                                    elSpan.style.WebkitTransform = elSpan.style.color = '#fc8a9e';
                                                } else {
                                                    elSpan.style.WebkitTransform = elSpan.style.transform = 'scale3d(0,0,1)';
                                                    elSpan.style.WebkitTransform = elSpan.style.color = 'rgba(0,0,0,0.3)';
                                                }
                                            }
                                        }).play();
                                    }
                                    else
                                    {
                                        $(this).find("span").css("color","rgb(104, 104, 104)");
                                    }
                                }); 
                                //HANCLE SENDING COMMENT
                                $('.postCommentButton').click(function()
                                {
                                    var theCommentContent = $(this).parent().siblings('.feedCommentInput').val();
                                    $(this).parent().siblings('.feedCommentInput').val("");
                                    var thisFeedId = $(this).attr('id');
                                    if(theCommentContent == "" || theCommentContent == null)
                                    {
                                        return;
                                    }
                                    else
                                    {
                           
                                        $.ajax(
                                        {
                                            url: "/feeds/sendFeedComment",
                                            method: "POST",
                                            data:
                                            {
                                                theCommentContent: theCommentContent,
                                                thisFeedId: thisFeedId
                                            },
                                            success: function(response)
                                            {
                                                function isObject(obj)
                                                {
                                                    return obj != null && obj.constructor.name === "Object"
                                                }
                                                if (isObject(response))
                                                {
                                                    //REMOVE FEED OWNER FROM NORMAL COMMENTERS
                                                    //TELL OTHER USERS THAT                     
                                                    var removeOwnerFromNotifyAboutNewComment = new Promise(function(resolve, reject) 
                                                    {
                                                        var indexOfFeedOwner = response.usersToNotify.indexOf(response.thisOwnerId);
                                                        if(indexOfFeedOwner > -1)
                                                        {
                                                            response.usersToNotify.splice(indexOfFeedOwner, 1);
                                                        }
                                                        resolve(response.usersToNotify);
                                                    });

                                                    removeOwnerFromNotifyAboutNewComment.then(function(data) 
                                                    {
                                                        socket.emit('tellOtherCommentersOnFeed', 
                                                        {
                                                            usersToNotifyIds : data,
                                                            commentId: response.commentId,
                                                            thisFeedId : thisFeedId,
                                                            commenter : response.commenter_id
                                                        });
                                                    });

                                                    if(response.thisOwnerId != response.commenter_id)
                                                    {
                                                        socket.emit('someoneCommentedOnYourfeed', 
                                                        {
                                                            thisOwnerId : response.thisOwnerId,
                                                            commenter_id : response.commenter_id,
                                                            commentId: response.commentId,
                                                            thisFeedId : thisFeedId
                                                        });
                                                    }

                                                    var numberN = parseInt($("#numberOfComments_" + thisFeedId).text().replace('(', '').replace(')', ''));
                                                    $("#numberOfComments_" + thisFeedId).text(numberN + 1);
                                                    //id='numberOfComments_"+data.newFeedsList[i].thisFeedId+"'
                                                }
                                                
                                            },
                                            error: function(data)
                                            {
                                                bootbox.alert(
                                                {
                                                    message: "Some problem occured, check internet connection.",
                                                    className: 'rubberBand animated',
                                                    size: 'large'
                                                });
                                            }
                                        });
                                    }
                                });
                                //FETCH COMMENTS
                                var thefeedToHoldItsIdForComment;
                                $('.toggleFeedCommentClass').click(function(e)
                                {
                                    var thisFeedId = $(this).siblings('.likesNumber').attr('id').replace(/likes_/g, "");;
                                    thefeedToHoldItsIdForComment = thisFeedId;
                                    $.ajax(
                                    {
                                        url: "/feeds/getFeedComments",
                                        method: "POST",
                                        data:
                                        {
                                            thisFeedId: thisFeedId
                                        },
                                        success: function(response)
                                        {
                                            if (response === 'empty')
                                            {
                                                return;
                                            }
                                            else
                                            {
                                                //console.log(response.comments);
                                                $('.comentsPlace').html("");
                                                $('#' + thisFeedId + "_feedEndBox").append("<div id='commentsForThisFeed_" + thisFeedId + "' class='comentsPlace'></div>");
                                                for (var i = 0; i < response.comments.length; i++)
                                                {
                                                    $('#commentsForThisFeed_' + thisFeedId).append("<div class=''><h5 class='mYBlue-color'>" + response.comments[i].user_first_name + " " + response.comments[i].user_last_name + " <small>@" + response.comments[i].msg_user_name + " (" + moment(response.comments[i].date_commented).format('H:mm A | Do MMM') + ")</small><h5><p style='padding-left: 4%;'>" + response.comments[i].comment_content + "</p></div>");
                                                }
                                            }
                                        },
                                        error: function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Some problem occured, check internet connection.",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                    });
                                })
                                //SHOW TAGS
                                $('.showTagsForFeed').click(function(e)
                                {
                                    var thisFeed_id = $(this).siblings('.likeFeedClass').attr('id');
                                    var notificationType = $(this).siblings('.keepNotificationType').attr('id');
                                    $.ajax(
                                    {
                                        url: "/feeds/getFriendsToTag",
                                        method: "POST",
                                        data:
                                        {
                                            thisFeedId: thisFeed_id
                                        },
                                        success: function(data)
                                        {
                                            if (data === 'empty')
                                            {
                                                return;
                                            }
                                            else
                                            {
                                                var results = "";
                                                data.tagFriendsList.forEach(function(element)
                                                {
                                                    results = results + "<h5 class='pointer friend' id='" + element.msg_user_id + "'>" + element.user_first_name + " " + element.user_last_name + "<small>@" + element.msg_user_name + "</small></h5>";
                                                });
                                            }
                                            var dialog = bootbox.dialog(
                                            {
                                                title: '<h2><b>Tag a friend</b></h2>',
                                                message: results,
                                            });
                                            $('.friend').click(function()
                                            {
                                                //alert("taged"+);
                                                //var 
                                                $.ajax(
                                                {
                                                    url: "/feeds/tagFriend",
                                                    method: "POST",
                                                    data:
                                                    {
                                                        thisFeedId: thisFeed_id,
                                                        notificationType: notificationType,
                                                        friendId: $(this).attr('id')
                                                    },
                                                    success: function(data)
                                                    {
                                                        if (data == 'error')
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Request could not be completed, retry",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    },
                                                    error: function(data)
                                                    {
                                                        bootbox.alert(
                                                        {
                                                            message: "Request could not be completed, retry",
                                                            className: 'rubberBand animated',
                                                            size: 'large'
                                                        });
                                                    }
                                                })
                                            })
                                        },
                                        error: function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Request could not be completed, retry",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                    });
                                });
                            }
                        },
                        error: function(data)
                        {
                            bootbox.alert(
                            {
                                message: "Some error occured, check internet connection try again",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    });
                });
                //HANDLE LIKING OF VIDEO
                $('.likeFeedClass').click(function()
                {
                    var thisId = feed_id;
                    $.ajax(
                    {
                        url: "/feeds/likeFeed",
                        method: "POST",
                        data:
                        {
                            feedIdLiking: $(this).attr('id')
                        },
                        success: function(response)
                        {
                            function isObject(obj)
                            {
                                return obj != null && obj.constructor.name === "Object"
                            }
                            if (response.message == 'liked')
                            {
                                $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                $("#likes_" + thisId).children('.like_value').text(numberN + 1);
                                //update other who liked same photo
                                socket.emit('updateFeedLiked',
                                {
                                    userLiked: uid,
                                    thisId: thisId,
                                    ownerId : response.feedsOwnerId
                                });
                            }
                            else if (response.message == 'like_deleted')
                            {
                                $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#686868");
                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                $("#likes_" + thisId).children('.like_value').text(numberN - 1);




                                socket.emit('updateFeedUnliked',
                                {
                                    userLiked: uid,
                                    thisId: thisId,
                                    ownerId : response.feedsOwnerId
                                });

                            }
                            else if (response == 'error')
                            {
                                bootbox.alert(
                                {
                                    message: "Some problem occured, maybe the post is no longer existing",
                                    className: 'rubberBand animated',
                                    size: 'large'
                                });
                            }
                        },
                        error: function(data)
                        {
                            bootbox.alert(
                            {
                                message: "Some problem occured, check internet connection.",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    });
                });
                //HANCLE SENDING COMMENT
                $('.postCommentButton').click(function()
                {
                    var theCommentContent = $(this).parent().siblings('.feedCommentInput').val();
                    $(this).parent().siblings('.feedCommentInput').val("");
                    var thisFeedId = $(this).attr('id');

                    if(theCommentContent == "" || theCommentContent == null)
                    {
                        return;
                    }
                    else
                    {
                        $.ajax(
                        {
                            url: "/feeds/sendFeedComment",
                            method: "POST",
                            data:
                            {
                                theCommentContent: theCommentContent,
                                thisFeedId: thisFeedId
                            },
                            success: function(response)
                            {
                                //  console.log(response);
                                function isObject(obj)
                                {
                                    return obj != null && obj.constructor.name === "Object"
                                }
                                if (isObject(response))
                                {
                                    
                                    //REMOVE FEED OWNER FROM NORMAL COMMENTERS
                                    //TELL OTHER USERS THAT                     
                                    var removeOwnerFromNotifyAboutNewComment = new Promise(function(resolve, reject) 
                                    {
                                        var indexOfFeedOwner = response.usersToNotify.indexOf(response.thisOwnerId);
                                        if(indexOfFeedOwner > -1)
                                        {
                                            response.usersToNotify.splice(indexOfFeedOwner, 1);
                                        }
                                        resolve(response.usersToNotify);
                                    });

                                    removeOwnerFromNotifyAboutNewComment.then(function(data) 
                                    {
                                        socket.emit('tellOtherCommentersOnFeed', 
                                        {
                                            usersToNotifyIds : data,
                                            commentId: response.commentId,
                                            thisFeedId : thisFeedId,
                                            commenter : response.commenter_id
                                        });
                                    });

                                    if(response.thisOwnerId != response.commenter_id)
                                    {
                                        socket.emit('someoneCommentedOnYourfeed', 
                                        {
                                            thisOwnerId : response.thisOwnerId,
                                            commenter_id : response.commenter_id,
                                            commentId: response.commentId,
                                            thisFeedId : thisFeedId
                                        });
                                    }

                                    var numberN = parseInt($("#numberOfComments_" + thisFeedId).text().replace('(', '').replace(')', ''));
                                    $("#numberOfComments_" + thisFeedId).text(numberN + 1);
                                    //id='numberOfComments_"+data.newFeedsList[i].thisFeedId+"'
                                }
                                $(this).siblings('.feedCommentInput').val("");
                            },
                            error: function(data)
                            {
                                bootbox.alert(
                                {
                                    message: "Some problem occured, check internet connection.",
                                    className: 'rubberBand animated',
                                    size: 'large'
                                });
                            }
                        });
                    }
                });
                //FETCH COMMENTS
                var thefeedToHoldItsIdForComment;
                $('.toggleFeedCommentClass').click(function(e)
                {
                    var thisFeedId = $(this).siblings('.likesNumber').attr('id').replace(/likes_/g, "");;
                    //adding nicescoll
                    $(".theFeedCommentsPlace").niceScroll(
                    {
                        cursorcolor: "#2c74a0",
                        cursorwidth: "9px",
                        cursorborderradius: "5px", 
                        cursorminheight: 32, // set the minimum cursor height (pixel)
                        cursorfixedheight: 40,
                        autohidemode: false, // only cursor hidden
                        horizrailenabled: false
                    });

                    //fecth comments
                    $.ajax(
                    {
                        url: "/feeds/getFeedComments",
                        method: "POST",
                        data:
                        {
                            thisFeedId: thisFeedId
                        },
                        success: function(response)
                        {
                            if (response === 'empty')
                            {
                                return;
                            }
                            else
                            {
                                //console.log(response.comments);
                                $('#commentsHolder_'+ thisFeedId).html("");


                                for (var i = 0; i < response.comments.length; i++)
                                {
                                    $('#commentsHolder_'+ thisFeedId).append("<div class='row'> <div class='col-sm-5'> <h5 class=''>" + response.comments[i].user_first_name + " " + response.comments[i].user_last_name + " <small class='pointer my-pink-2'>@" + lowerFirstLetter(response.comments[i].user_last_name) + "</small><h5> <p class='commentTimeParagraph'><small>On " + moment(response.comments[i].date_commented).format('H:mm A | Do MMM') + "</small></p> </div> <div class='col-sm-7'> <div class='commentContentPlace'> <p> " + response.comments[i].comment_content + " </p> </div> <hr class='new2'><div> </div>");
                                }
                            }
                        },
                        error: function(data)
                        {
                            bootbox.alert(
                            {
                                message: "Some problem occured, check internet connection.",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    });
                })
                //SHOW TAGS
                $('.showTagsForFeed').click(function(e)
                {
                    var thisFeed_id = $(this).siblings('.likeFeedClass').attr('id');
                    var notificationType = $(this).siblings('.keepNotificationType').attr('id');
                    $.ajax(
                    {
                        url: "/feeds/getFriendsToTag",
                        method: "POST",
                        data:
                        {
                            thisFeedId: thisFeed_id
                        },
                        success: function(data)
                        {
                            if (data === 'empty')
                            {
                                return;
                            }
                            else
                            {
                                var results = "";
                                data.tagFriendsList.forEach(function(element)
                                {
                                    results = results + "<h5 class='pointer friend' id='" + element.msg_user_id + "'>" + element.user_first_name + " " + element.user_last_name + "<small>@" + element.msg_user_name + "</small></h5>";
                                });
                            }
                            var dialog = bootbox.dialog(
                            {
                                title: '<h2><b>Tag a friend</b></h2>',
                                message: results,
                            });
                            $('.friend').click(function()
                            {
                                var thisFriendId = $(this).attr('id');
                                $.ajax(
                                {
                                    url: "/feeds/tagFriend",
                                    method: "POST",
                                    data:
                                    {
                                        thisFeedId: thisFeed_id,
                                        notificationType: notificationType,
                                        friendId: $(this).attr('id')
                                    },
                                    success: function(data)
                                    {
                                        if (data == 'success')
                                        {
                                            //send socekt tell user that they are tagged
                                            socket.emit('youAreTaggedNotifier',
                                            {
                                                personTagged: thisFriendId,
                                                tagger: uid,
                                                thisFeedId: thisFeed_id
                                            });
                                        }
                                        else if (data == 'error')
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Request could not be completed, retry",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                        else if (data == 'already_tagged')
                                        {
                                            return;
                                        }
                                    },
                                    error: function(data)
                                    {
                                        bootbox.alert(
                                        {
                                            message: "Request could not be completed, retry",
                                            className: 'rubberBand animated',
                                            size: 'large'
                                        });
                                    }
                                })
                            })
                        },
                        error: function(data)
                        {
                            bootbox.alert(
                            {
                                message: "Request could not be completed, retry",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    });
                });
            }
            //SEND FEED POST
            $('.sendFeedContent').click(function()
            {
                var feedContent = $(".feedContent").val();
                $(".feedContent").val("");
                if (feedContent.replace(/^\s+|\s+$/g, "").length == 0 || feedContent == "")
                {
                    return;
                }
                else
                {
                    var cleanFeedPostInput = $.trim(feedContent);
                    var p_status = "protected";
                    $.ajax(
                    {
                        url: "/feeds/sendPostFeed",
                        type: "POST",
                        data:
                        {
                            feedContent: cleanFeedPostInput,
                            privacy_status: p_status
                        },
                        success: function(data)
                        {
                            //$(".feedContent").val("");
                            $(".thePlaceForFeedsPostsInput").fadeOut();
                            $('.closeFeedsPostBox').hide();
                            if (data.message == "success")
                            {
                                socket.emit('newFeedEvent',
                                {
                                    uid: uid
                                });
                                hideNoPostsDiv();
                                //append feed
                                $(".feedsWillGoHere").prepend("<div class='w3-card'  id='feed_" + data.lastInsertedId + "'><div class='containFeed' id='" + data.lastInsertedId + "_feedEndBox'>            <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>"+data.userDetailsResults[0].user_first_name+" "+data.userDetailsResults[0].user_last_name+"</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.userDetailsResults[0].msg_user_name) + "</small>   </div><span  class='w3-right'> </span></div><div class='w3-row' style='padding-top: 1%;'><p>" + feedContent + "</p></div><p> <i class='fa fa-heart likeFeedClass'  id='" + data.lastInsertedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.lastInsertedId + "'>(<span class='like_value'>0</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' data-toggle='collapse' data-target='#commentsHolder_"+ data.lastInsertedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.lastInsertedId + "'>(0)</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>    &nbsp; &nbsp; <span class='keepNotificationType' id='2'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.lastInsertedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p></div>             <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ data.lastInsertedId +"'></div></div> </div> </div> <div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                forEventsInFeeds(data.lastInsertedId);
                              
                            }
                            else
                            {
                                bootbox.alert(
                                {
                                    message: "There was error sending post, please try again later!",
                                    size: 'large'
                                });
                            }
                        },
                        error: function(data)
                        {
                            bootbox.alert(
                            {
                                message: "Some problem occured, check your internet connection!",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    });
                    //function showFeedsTextFieldFunction(id) 
                    // {
                    //   document.getElementById("feedsPlusMenu").style.display = "none";
                    //   var x = document.getElementById(id);
                    //   if (x.className.indexOf("w3-show") == -1) 
                    //   {
                    //     x.className += " w3-show";
                    //    // document.getElementById("closeFeedsPostBox").style.display = 'block'; 
                    //   } 
                    //   else 
                    //   { 
                    //     x.className = x.className.replace(" w3-show", "");
                    //   //  document.getElementById("closeFeedsPostBox").style.display = 'none';
                    //   }
                    // }
                }
            });
            $(".feedsPlusToggler").click(function()
            {
                $(".feedsPlusMenu").toggle();
            });
            //ADDING NICESCROLL
            $(".chatHistory").niceScroll(
            {
                cursorcolor: "#fc8a9e",
                cursorwidth: "9px",
                cursorborderradius: "0",
                cursorminheight: 32, // set the minimum cursor height (pixel)
                cursorfixedheight: 70,
                autohidemode: true, // only cursor hidden
                horizrailenabled: false
            });
            $(".theScrollH").niceScroll(
            {
                cursorcolor: "#fc8a9e",
                cursorwidth: "9px",
                cursorborderradius: "0",
                cursorminheight: 32, // set the minimum cursor height (pixel)
                cursorfixedheight: 70,
                autohidemode: false, // only cursor hidden
                horizrailenabled: false
            });
            $('#notificationPlace').niceScroll(
            {
                cursorcolor: "#3388bb",
                cursorwidth: "9px",
                cursorborderradius: "25px",
                cursorminheight: 20, // set the minimum cursor height (pixel)
                cursorfixedheight: 40,
                autohidemode: false, // only cursor hidden
                oneaxismousemode: "auto",
            });
            $(".filtersCard").niceScroll(
            {
                cursorcolor: "#3388bb",
                cursorwidth: "4px",
                cursorborderradius: "0",
                cursorminheight: 20, // set the minimum cursor height (pixel)
                cursorfixedheight: 40,
                autohidemode: false, // only cursor hidden
                rtlmode: "auto",
                railvalign: "bottom",
                horizrailenabled: true,
                oneaxismousemode: "auto",
            });
            //$('#ascrail2000').show();
            //REFRESH WHOLE PAGE
            $('.logo').click(function()
            {
               window.location = window.location;
            });
            //HIDING LAST MESSAGES
            var isLastMessagesHidden = 0;
            $('.hideLastMessagesButton').click(function()
            {
                if (isLastMessagesHidden == 0)
                {
                    $(".lastMessagesToggler").html("<i class='fa fa-toggle-off' aria-hidden='true'></i>");
                    $(".lastMessageOnChatHistory").hide();
                    //$(".name").css("margin-top", "90px"); HERE WE SHOULD BRING DOWN THE NAMES
                    isLastMessagesHidden = 1;
                }
                else
                {
                    $(".lastMessagesToggler").html("<i class='fa fa-toggle-on' aria-hidden='true'></i>");
                    $(".lastMessageOnChatHistory").show();
                    //$(".name").css("margin-top", "90px"); HERE WE SHOULD BRING DOWN THE NAMES
                    isLastMessagesHidden = 0;
                }
            });
            //LOWER FIRST CHARRACTER
            function lowerFirstLetter(str)
            {
                return str.charAt(0).toLowerCase() + str.slice(1);
            } 

            //to get the selected element when clicked(to be used on blur events)
            var currElem = null;
            $(document).mousedown(function(e) 
            {
                currElem = e.target;
            });
            //for reseting activity on using mouse
            $(document).mousemove(function()
            {
                resetActivity();
            });
            //search with chat
            $('.searchWithInChatInput').focus(function(e)
            {
                $('.chatHistoryBlock').show();
                $('.searchWithInChatInput').keyup(function(e)
                {
                    $('.searchWithInChatResults').empty();
                    $('.searchMessageWithInChatResults').empty();
                    var searchWithInChatInputKey = $(this).val();
                    if (searchWithInChatInputKey.length > 1)
                    {
                        $.ajax(
                        {
                            url: "/messaging/searchUserOnCat",
                            method: "POST",
                            data:
                            {
                                searchWithInChatInputKey: searchWithInChatInputKey
                            },
                            success: function(response)
                            {
                                console.log(response)
                                $('.searchWithInChatResults').empty();
                                $('.searchMessageWithInChatResults').empty();
                                if (response.messageSearchResultsResponse)
                                {
                                    $('.chatHistoryBlock').hide();
                                    if (typeof response.messageSearchResultsResponse !== "undefined")
                                    {
                                        for (var i = 0; i < response.messageSearchResultsResponse.length; i++)
                                        {
                                            $('.searchMessageWithInChatResults').append("<li class='w3-row messageFriend pointer' id='" + response.messageSearchResultsResponse[i].msg_user_id + "'><span class='messageId' id='" + response.messageSearchResultsResponse[i].text_message_id + "'><i><b>" + response.messageSearchResultsResponse[i].user_first_name + " " + response.messageSearchResultsResponse[i].user_last_name + "</b></i> " + decodeString(response.messageSearchResultsResponse[i].text_message) + "</span></li>");
                                        }
                                        // $('.friend').click(function()
                                        // {
                                        //  alert("hi");
                                        // });

                                        $('.messageFriend').click(function()
                                        {
                                            //alert('will scroll')

                                            var id = $(this).attr('id');

                                            

                                            var idForMessage = $(this).children(".messageId").attr('id');

                                            // a hack for executing one function before other
                                            function dealOne(id)
                                            {
                                                startChatWith(id);
                                            }

                                            $.ajax
                                            ({
                                                url : dealOne(id),
                                                success : function()
                                                {
                                                    var elmnt = document.getElementById("message_content_"+idForMessage+"");
                                                    elmnt.scrollIntoView();
                                                }
                                            })

                                            $('.searchWithInChatInput').val("");
                                            
                                           
                                            $('.chatHistoryBlock').fadeIn("fast", function()
                                            {
                                                $('.searchWithInChatResults').empty();
                                                $('.searchMessageWithInChatResults').empty();                                               
                                            });
                                            resetActivity();
                                            //CHECK IF THE LOGE IN USER WAS CHECKING ON ANY OTHER USER, IF TRUE CALL FUNCTION TO STOP THAT
                                            if(defaultCheckingId != 0)
                                            {
                                                stopCheckingUp(defaultCheckingId);
                                            }
                                            defaultCheckingId = id; //SET DEFAULT CHECKING UP TO FRIEND CLICKED ON 
                                            $('.textNumber_' + id).html("");

                                             

                                        });
                                    }
                                }
                                if (response.userSearchResultsResponse)
                                {
                                    $('.chatHistoryBlock').hide();
                                    if (typeof response.userSearchResultsResponse !== "undefined")
                                    {
                                        for (var i = 0; i < response.userSearchResultsResponse.length; i++)
                                        {
                                            if (response.userSearchResultsResponse[i].user_profilepicture === 'default')
                                            {
                                                $('.searchWithInChatResults').append("<li class='w3-row friend pointer' id='" + response.userSearchResultsResponse[i].msg_user_id + "'>" + response.userSearchResultsResponse[i].user_first_name + " " + response.userSearchResultsResponse[i].user_last_name + " <i class='usernameOnSearch'><i class='fa fa-at' aria-hidden='true'></i>" + response.userSearchResultsResponse[i].msg_user_name.toLowerCase() + "</i> <span class='w3-right'><img src=''/></span></li>");
                                            }
                                            else
                                            {
                                                $('.searchWithInChatResults').append("<li class='w3-row friend pointer' id='" + response.userSearchResultsResponse[i].msg_user_id + "'>" + response.userSearchResultsResponse[i].user_first_name + " " + response.userSearchResultsResponse[i].user_last_name + " <i class='usernameOnSearch'><i class='fa fa-at' aria-hidden='true'></i>" + response.userSearchResultsResponse[i].msg_user_name.toLowerCase() + "</i> <span class='w3-right'><img src=''/></span></li>");
                                            }
                                        }
                                        $('.friend').click(function(e)
                                        {
                                            e.stopPropagation(); 

                                            var id = $(this).attr('id');
                                            $('.searchWithInChatInput').val("");
                                            //$('.chatHistoryBlock').fadeIn();
                                            
                                            startChatWith(id);
                                            $('.chatHistoryBlock').fadeIn("fast", function()
                                            {
                                                $('.searchWithInChatResults').empty();
                                                $('.searchMessageWithInChatResults').empty();                                               
                                            });
                                            resetActivity();
                                            //CHECK IF THE LOGE IN USER WAS CHECKING ON ANY OTHER USER, IF TRUE CALL FUNCTION TO STOP THAT
                                            if(defaultCheckingId != 0)
                                            {
                                                stopCheckingUp(defaultCheckingId);
                                            }
                                            defaultCheckingId = id; //SET DEFAULT CHECKING UP TO FRIEND CLICKED ON 
                                            $('.textNumber_' + id).html("");  

                                        });
                                    }
                                }
                            },
                            error: function(response)
                            {
                                alert("Error, check internet connection and try again");
                            }
                        });
                    }
                    else
                    {
                        $('.chatHistoryBlock').show();
                    }
                });            
            });
            $("body > *").not('.chatHistoryBlock').bind("contextmenu",function(e)
            {
                //prevent context menu
                e.preventDefault();
                return false;     
            });
            //context menu for friend on history bar starts
            var idForUserInChatHistoryForContextMenu = 0;
            $(".chatHistoryBlock .friend").bind("contextmenu",function(e)
            {
                e.preventDefault();
                idForUserInChatHistoryForContextMenu = $(this).attr("id");
                //console.log(e.pageX + "," + e.pageY);
                $("#cntnr").css("left",e.pageX);
                $("#cntnr").css("top",e.pageY);
                $("#cntnr").fadeIn(200,startFocusOut());      
            });
            function startFocusOut()
            {
                $(".chatHistoryBlock .friend").on("click",function()
                {
                    $("#cntnr").hide();        
                });
            }
            $("#contextItems > li").click(function()
            {
                $("#cntnr").hide(function()
                {
                    $.ajax
                    ({
                        url : '/messaging/deleteChatWith',
                        method : 'DELETE',
                        data : 
                        {
                            userIdToDeleteChatWith : idForUserInChatHistoryForContextMenu
                        },
                        success : function(data)
                        {
                            if(data == 'success')
                            {
                                $(".chatHistoryBlock #"+idForUserInChatHistoryForContextMenu).remove();
                            }
                            else
                            {
                                alert(data)
                            }
                        },
                        error : function(data)
                        {
                            bootbox.alert(
                            {
                                message: "Some error occured on client side. Check Internet connection and Try again later",
                                className: 'rubberBand animated',
                                size: 'large'
                            });
                        }
                    })
                });
            });
            //context menu for friend on history bar ends
            //INTIALIZATIONS 
            var defaultCheckingId = 0;
            var userIdStopedChecking;
            var socket = io.connect();
            var friendId;
            var defaultChatBox = 0;
            var uid;
            var counterFOrActivity = 0;
            var counterToAutomaticalyLogOut = 0;
            var activityTimer;

            $('.modal').on('hidden.bs.modal', function () 
            {
                $('.exactVideoFeed').each(function() {
                  this.pause();
                });
            })
            //SHOW NOTIFICATIONS
            $('.toggleFeedsNotification').click(function()
            {
                $(".notificationsheadingOnNav").css("text-decoration","none");
                var x = document.getElementById("notificationPlace");
                if (x.className.indexOf("w3-show") == -1)
                {
                    x.className += " w3-show";

                    $("#notificationPlace").html("");
                    $.ajax(
                    {
                        url: "/feeds/getMyNotifications",
                        method: "POST",
                        data:
                        {
                            uid: uid
                        },
                        success: function(data)
                        {
                            
                            if (data === "empty")
                            {
                                $("#notificationPlace").append("<li style='font-weight: 400;'>You have no notification</li>");
                            }
                            else
                            {
                                // id, update_type, by_user_id, to_user_id, feed_id, date_created, msg_user_id, user_first_name, user_last_name
                                // msg_user_name, feed_comm_upd_id, feed_comm_the_update_id, feed_comm_comment_id
                                //
                                var feedIcon = "";
                                $("#notificationPlace").html("");
                                for (var i = 0; i < data.resultNotificationList.length; i++)
                                {
                                    if (data.resultNotificationList[i].story_type == 1)
                                    {
                                        feedIcon = "<i class='fa fa-picture-o notificationIcons'></i>";
                                    }
                                    else if (data.resultNotificationList[i].story_type == 2)
                                    {
                                        feedIcon = "<i class='fa fa-newspaper-o notificationIcons'></i>";
                                    }
                                    else if (data.resultNotificationList[i].story_type == 3)
                                    {
                                        feedIcon = "<i class='fa fa-video-camera notificationIcons'></i>";
                                    }

                                    //populate notification
                                    if (data.resultNotificationList[i].update_type == 1)
                                    {
                                        $("#notificationPlace").append("<li class='notificationItemForComment pointer' data-toggle='modal' data-target='#singleFeedViewModal'  id='" + data.resultNotificationList[i].feed_id + "'><span class='feedId' id='"+data.resultNotificationList[i].feed_id+"'></span><span class='commentId' id='"+data.resultNotificationList[i].feed_comm_comment_id+"'></span> " + feedIcon + " <b>" + data.resultNotificationList[i].user_first_name + " " + data.resultNotificationList[i].user_last_name + "</b> has commented on this <a class='notificationLinkToFeed'>post</a> <i id='"+data.resultNotificationList[i].id+"' class='w3-right deleteNotofication fa fa-times'></i></li>");
                                    }
                                    else if (data.resultNotificationList[i].update_type == 2)
                                    {
                                        $("#notificationPlace").append("<li class='notificationItem pointer' data-toggle='modal' data-target='#singleFeedViewModal'  id='" + data.resultNotificationList[i].feed_id + "'> " + feedIcon + " <b>" + data.resultNotificationList[i].user_first_name + " " + data.resultNotificationList[i].user_last_name + "</b> has liked this <a class='notificationLinkToFeed'>post</a> <i id='"+data.resultNotificationList[i].id+"' class='w3-right deleteNotofication fa fa-times'></i></li>");
                                    }
                                    else if (data.resultNotificationList[i].update_type == 3)
                                    {
                                        $("#notificationPlace").append("<li class='notificationItem pointer' data-toggle='modal' data-target='#singleFeedViewModal' id='" + data.resultNotificationList[i].feed_id + "'> " + feedIcon + " <b>" + data.resultNotificationList[i].user_first_name + " " + data.resultNotificationList[i].user_last_name + "</b> has tagged you to watch this <a class='notificationLinkToFeed'>video</a> <i id='"+data.resultNotificationList[i].id+"' class='w3-right deleteNotofication fa fa-times'></i></li>");
                                    }
                                }

                                $(".deleteNotofication").click(function(e)
                                {
                                    e.preventDefault();
                                    e.stopPropagation();

                                    var thisUpdateId = $(this).attr('id');
                                    var thisParentId = $(this).parent().attr('id');
                                    $.ajax
                                    ({
                                        url : '/feeds/deleteFeedNotification',
                                        method : 'POST',
                                        data :
                                        {
                                            thisUpdateId : thisUpdateId
                                        },
                                        success : function(data)
                                        {
                                            if(data.message == "success")
                                            {
                                                $("#"+thisParentId).remove();
                                                if($('#notificationPlace li').length == 0)
                                                {
                                                    $("#notificationPlace").html("<li>All notifications are read</li>");
                                                }
                                            }
                                            else
                                            {
                                                bootbox.alert("Request could not be accomplished, try again later");
                                            }
                                        },
                                        error : function(data)
                                        {
                                            bootbox.alert("Request could not be sent, check your internet connection!");
                                        }
                                    });
                                });
                                //clicking on notification for like or tag

                                $(".notificationItem").click(function()
                                {
                                    var feedId = $(this).attr('id');
                                    $.ajax
                                    ({
                                        url : '/feeds/getTheSingleFeed',
                                        method : 'POST',
                                        data :
                                        {
                                            feedId : feedId
                                        },
                                        success : function(data)
                                        {
                                            $('.toShowfeedIn').html("");
                                            function isObject(obj)
                                            {
                                                return obj != null && obj.constructor.name === "Object"
                                            }
                                            if(isObject(data))
                                            {
                                                for (var i = 0; i < data.postsListResults.length; i++)
                                                {
                                                    if (data.postsListResults[i].numberOfLikes == null)
                                                    {
                                                        data.postsListResults[i].numberOfLikes = 0;
                                                    }
                                                    if (data.postsListResults[i].numberOfComments == null)
                                                    {
                                                        data.postsListResults[i].numberOfComments = 0;
                                                    }
                                                    if (data.postsListResults[i].numberOfViews == null)
                                                    {
                                                        data.postsListResults[i].numberOfViews = 0;
                                                    }
                                                    if (data.postsListResults[i].story_type == 1)
                                                    {
                                                        if (data.postsListResults[i].caption_content == null)
                                                        {
                                                            data.postsListResults[i].caption_content = "";
                                                        }
                                                        //  picture
                                                        modalContainsVideo = 0;
                                                        $(".toShowfeedIn").append("<div class='' id='feed_" + data.postsListResults[i].thisFeedId + "'> <div class='containFeed' id='" + data.postsListResults[i].thisFeedId + "_feedEndBox'> <div class='w3-row PostHeader'> <div class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.postsListResults[i].user_last_name + " " + data.postsListResults[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'> <i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + " </small> </div> <span class='w3-right'> " + moment(data.postsListResults[i].date_created).format('H:mm A | Do MMM') + "</span> </div> <div class='w3-row' style='padding-top: 1%;'> <p>" + data.postsListResults[i].caption_content + "</p> <div class='mediaHolder'> <img src='/feeds_images/" + data.postsListResults[i].media_name + "' alt='Image not avaliable, report to technical team' class='exactPostImage imgOnModalFeed'> </div> <p> <i class='fa fa-heart likeFeedClass' id='" + data.postsListResults[i].thisFeedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.postsListResults[i].thisFeedId + "'>( <span class='like_value'>" + data.postsListResults[i].numberOfLikes + "</span>) </sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' data-toggle='collapse' data-target='#commentsHolder_"+ data.postsListResults[i].thisFeedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.postsListResults[i].thisFeedId + "'>(" + data.postsListResults[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i> &nbsp; &nbsp;  <span class='keepNotificationType' id='1'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.postsListResults[i].thisFeedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p></div>          <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ data.postsListResults[i].thisFeedId +"'></div></div>                 </div> </div> <div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                    }
                                                    else if (data.postsListResults[i].story_type == 2)
                                                    {
                                                        //  text
                                                        modalContainsVideo = 0;
                                                        $(".toShowfeedIn").append("<div class=''  id='feed_" + data.postsListResults[i].thisFeedId + "'><div class='containFeed' id='" + data.postsListResults[i].thisFeedId + "_feedEndBox'>           <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.postsListResults[i].user_last_name + " " + data.postsListResults[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.postsListResults[i].date_created).format('H:mm A | Do MMM') + "</span></div>            <div class='w3-row' style='padding-top: 1%;'><p>" + data.postsListResults[i].feed_postcontent + "</p></div>     <p> <i class='fa fa-heart likeFeedClass'  id='" + data.postsListResults[i].thisFeedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.postsListResults[i].thisFeedId + "'>(<span class='like_value'>" + data.postsListResults[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' data-toggle='collapse' data-target='#commentsHolder_"+ data.postsListResults[i].thisFeedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.postsListResults[i].thisFeedId + "'>(" + data.postsListResults[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>    &nbsp; &nbsp; <span class='keepNotificationType' id='2'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.postsListResults[i].thisFeedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p></div>             <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ data.postsListResults[i].thisFeedId +"'></div></div> </div> </div> <div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                    }
                                                    else if (data.postsListResults[i].story_type == 3)
                                                    {
                                                        //video
                                                        modalContainsVideo = 1;
                                                        if (data.postsListResults[i].caption_content == null)
                                                        {
                                                            data.postsListResults[i].caption_content = "";
                                                        }
                                                        $(".toShowfeedIn").append("<div class='' id='feed_" + data.postsListResults[i].thisFeedId + "'><div class='containFeed' id='" + data.postsListResults[i].thisFeedId + "_feedEndBox'>            <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.postsListResults[i].user_last_name + " " + data.postsListResults[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.postsListResults[i].date_created).format('H:mm A | Do MMM') + "</span></div>            <div class='w3-row' style='padding-top: 1%;'><p>" + data.postsListResults[i].caption_content + "</p> <div class='videoOnFeedsContainer'> <video   class='exactVideoFeed exactVideoFeedOnModal' id='video" + data.postsListResults[i].thisFeedId + "' src='/feeds_video/" + data.postsListResults[i].media_name + "'> Your browser does not support HTML5 video. </video> <span class='togglePlayPause'><i class='fa fa-play fa-2x'></i></span> <div class='custom-seekbar' id='seek" + data.postsListResults[i].thisFeedId + "' style='border-radius: 45px !important;'> <span></span> </div> <span class='dragOnVideoContainer mYPink-color' style='font-style: italic;'> <img src='/img/tv.png' width='40px;'> <br><i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + " </span> </div>  <p> <i class='fa fa-heart likeFeedClass'  id='" + data.postsListResults[i].thisFeedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.postsListResults[i].thisFeedId + "'>(<span class='like_value'>" + data.postsListResults[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass'   data-toggle='collapse' data-target='#commentsHolder_"+ data.postsListResults[i].thisFeedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer'  id='numberOfComments_" + data.postsListResults[i].thisFeedId + "'>(" + data.postsListResults[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp;<span class='showViewers w3-right pointer'><span id='numberOfViewsId_"+data.postsListResults[i].thisFeedId+"' class='numberOfViews pointer'>" + data.postsListResults[i].numberOfViews + "</span> Views </span><span class='keepNotificationType' id='3'></span> <div class='input-group'><textarea placeholder='Enter your comment here...'  class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.postsListResults[i].thisFeedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p> </div>     <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ data.postsListResults[i].thisFeedId +"'></div></div> </div> </div> <div class='row'><div class='col-md-3'></div>                                                        <div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                    }
                                                    if (data.postsListResults[i].checkIfLiked > 0)
                                                    {
                                                        $("#likes_" + data.postsListResults[i].thisFeedId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                                    }
                                                }
                                                var modalContainsVideo = 0;
                                                $(".closeModalForSinlgeFeed").click(function()
                                                {
                                                    if(modalContainsVideo == 1)
                                                    {
                                                        $(".exactVideoFeed").pause();
                                                    }                                                   
                                                });
                                                $(".custom-seekbar").on("click", function(e)
                                                {
                                                    
                                                    var thisSeekId = $(this).attr('id');
                                                    var uniqueId = thisSeekId.replace("seek", "");
                                                    var vid = document.getElementById("video" + uniqueId + "");


                                                    if (vid.paused == false)
                                                    {
                                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");                                
                                                    }
                                                    else
                                                    {
                                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-pause fa-2x'></i>");
                                                    }

                                                    
                                                    var thePromise = new Promise(function(resolve, reject)
                                                    {
                                                        vid.currentTime = Number.MAX_SAFE_INTEGER;
                                                        vid.ontimeupdate = function()
                                                        {
                                                            this.ontimeupdate = () =>
                                                            {
                                                                return; // resolve(vid.duration);
                                                            }
                                                            resolve(vid.duration);
                                                        }
                                                    }, function error(data)
                                                    {
                                                        console.error(data);
                                                    });
                                                    thePromise.then(function(data)
                                                    {
                                                        var durr = data;
                                                        var thisSeekOffset = $("#seek" + uniqueId).offset();
                                                        var left = (e.pageX - thisSeekOffset.left);
                                                        var totalWidth = 569;
                                                        var percentage = (left / totalWidth);
                                                        var vidTime = durr * percentage;
                                                        vid.currentTime = vidTime;
                                                        document.getElementById("video" + uniqueId + "").play();
                                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-pause fa-2x'></i>");
                                                        vid.muted = false;
                                                        vid.ontimeupdate = function()
                                                        {
                                                            resetActivity();
                                                            var percentage = (vid.currentTime / durr) * 100;
                                                            $("#" + thisSeekId + " span").css("width", percentage + "%");
                                                            vid.onended = function() 
                                                            {
                                                                if(durr == vid.currentTime)
                                                                {
                                                                    vid.currentTime = 0;
                                                                    $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");
                                                                }
                                                               
                                                            };
                                                        }
                                                    });

                                                    $.ajax
                                                    ({
                                                        url : '/feeds/viewFeed',
                                                        method : 'POST',
                                                        data :
                                                        {
                                                            feedIdViewing : uniqueId
                                                        },
                                                        success : function(data)
                                                        {
                                                            if(data == 'success')
                                                            {
                                                                var numberN = parseInt($("#numberOfViewsId_"+uniqueId).text());
                                                                $("#numberOfViewsId_"+uniqueId).text(numberN + 1);
                                                            }
                                                        }
                                                    });
                                                    
                                                });
                                                $(".togglePlayPause").click(function()
                                                {
                                                    var mY_video_id = $(this).siblings("video").attr('id');
                                                    var uniqueId = mY_video_id.replace("video", "");
                                                    var vid = document.getElementById("" + mY_video_id + "");

                                                    vid.muted = true;

                                                    if (vid.paused == false)
                                                    {
                                                        $(this).html("<i class='fa fa-play fa-2x'></i>");
                                                        vid.pause();
                                                    }
                                                    else
                                                    {
                                                        $(this).html("<i class='fa fa-pause fa-2x'></i>");
                                                        var thePromise = new Promise(function(resolve, reject)
                                                        {
                                                            vid.currentTime = Number.MAX_SAFE_INTEGER;
                                                            vid.ontimeupdate = function()
                                                            {
                                                                this.ontimeupdate = () =>
                                                                {
                                                                    return; // resolve(vid.duration);
                                                                }
                                                                resolve(vid.duration);
                                                            }
                                                        })

                                                        thePromise.then(function(data)
                                                        {
                                                            var durr = data;
                                                            var thisSeekOffset = $("#seek" + uniqueId).position();

                                                            var left = ($("#seek" + uniqueId + " span").width() - thisSeekOffset.left);
                                                            var totalWidth = 587;
                                                            var percentage = (left / totalWidth);
                                                            var vidTime = durr * percentage;
                                                            vid.play();
                                                            vid.muted = false;
                                                            vid.currentTime = vidTime;

                                                            vid.ontimeupdate = function(e)
                                                            {
                                                                resetActivity();
                                                                var percentage = (vid.currentTime / durr) * 100;
                                                                $("#seek" + uniqueId + " span").css("width", percentage + "%");
                                                                vid.onended = function() {
                                                                    if(durr == vid.currentTime)
                                                                    {
                                                                        vid.currentTime = 0;
                                                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");
                                                                    }
                                                                   
                                                                };
                                                            }

                                                        });
                                                    }
                                                    $.ajax
                                                    ({
                                                        url : '/feeds/viewFeed',
                                                        method : 'POST',
                                                        data :
                                                        {
                                                            feedIdViewing : uniqueId
                                                        },
                                                        success : function(data)
                                                        {
                                                            if(data == 'success')
                                                            {
                                                                var numberN = parseInt($("#numberOfViewsId_"+uniqueId).text());
                                                                $("#numberOfViewsId_"+uniqueId).text(numberN + 1);
                                                            }
                                                        }
                                                    });
                                                });
                                     
                                                /*  VIDEO PLAYER ENDS HERE */
                                                $('.showViewers').click(function(e)
                                                {
                                                    var feedId = $(this).siblings('.postCommentButton').attr('id');
                                                    if ($(this).children().text() == 0)
                                                    {
                                                        return;
                                                    }
                                                    else
                                                    {
                                                        $.ajax(
                                                        {
                                                            url: "/feeds/showViewers",
                                                            method: "POST",
                                                            data:
                                                            {
                                                                thisFeedId: feedId
                                                            },
                                                            success: function(response)
                                                            {
                                                                if (response == 'empty')
                                                                {
                                                                    return;
                                                                }
                                                                else if (response == 'error')
                                                                {
                                                                    bootbox.alert(
                                                                    {
                                                                        message: "Some error occured, try again",
                                                                        className: 'rubberBand animated',
                                                                        size: 'large'
                                                                    });
                                                                }
                                                                else if (response.viewersResults.length)
                                                                {
                                                                    var viewersListResults = "";
                                                                    for (var i = 0; i < response.viewersResults.length; i++)
                                                                    {
                                                                        viewersListResults = viewersListResults + "<p id='" + response.viewersResults[i].msg_user_id + "'>" + response.viewersResults[i].user_first_name + " " + response.viewersResults[i].user_last_name + " viewed this post on " + moment(response.viewersResults[i].date_viewed).format('H:mm Do MMM') + "</p>";
                                                                    }
                                                                    bootbox.alert(
                                                                    {
                                                                        message: viewersListResults,
                                                                        size: 'medium'
                                                                    });
                                                                }
                                                            },
                                                            error: function(data)
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some problem occured, check internet connection.",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                        });
                                                    }
                                                });
                                                $('.likesNumber').click(function(e)
                                                {
                                                    e.stopPropagation();
                                                    var thisFeedId = $(this).siblings('.likeFeedClass').attr('id');
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/showFeedsLikes",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            thisFeedId: thisFeedId
                                                        },
                                                        success: function(response)
                                                        {
                                                            if (response == 'empty')
                                                            {
                                                                return;
                                                            }
                                                            else if (response == 'error')
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some error occured, try again",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                            else if (response.likersResults.length)
                                                            {
                                                                var likersListResults = "";
                                                                for (var i = 0; i < response.likersResults.length; i++)
                                                                {
                                                                    likersListResults = likersListResults + "<p id='" + response.likersResults[i].msg_user_id + "'>" + response.likersResults[i].user_first_name + " " + response.likersResults[i].user_last_name + " liked this post on " + moment(response.likersResults[i].date_liked).format('H:mm Do MMM') + "</p>";
                                                                }
                                                                bootbox.alert(
                                                                {
                                                                    message: likersListResults,
                                                                    size: 'medium'
                                                                });
                                                            }
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Some problem occured, check internet connection.",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                });
                                                
                                                //HANDLE LIKING OF VIDEO
                                                $('.likeFeedClass').click(function()
                                                {
                                                    var thisId = $(this).attr('id');
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/likeFeed",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            feedIdLiking: $(this).attr('id')
                                                        },
                                                        success: function(response)
                                                        {
                                                            function isObject(obj)
                                                            {
                                                                return obj != null && obj.constructor.name === "Object"
                                                            }
                                                            if (response.message == 'liked')
                                                            {
                                                                $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                                $("#likes_" + thisId).children('.like_value').text(numberN + 1);
                                                                //update other who liked 
                                                                socket.emit('updateFeedLiked',
                                                                {
                                                                    userLiked: uid,
                                                                    thisId: thisId,
                                                                    ownerId : response.feedsOwnerId
                                                                });
                                                            }
                                                            else if (response.message == 'like_deleted')
                                                            {
                                                                $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#686868");
                                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                                $("#likes_" + thisId).children('.like_value').text(numberN - 1);
                                                                socket.emit('updateFeedUnliked',
                                                                {
                                                                    userLiked: uid,
                                                                    thisId: thisId,
                                                                    ownerId : response.feedsOwnerId
                                                                });
                                                            }
                                                            else if (response == 'error')
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some problem occured, maybe the post is no longer existing",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Some problem occured, check internet connection.",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                });
                                                //HANCLE SENDING COMMENT
                                                $('.postCommentButton').click(function()
                                                {
                                                    var theCommentContent = $(this).parent().siblings('.feedCommentInput').val();
                                                    $(this).parent().siblings('.feedCommentInput').val("");
                                                    var thisFeedId = $(this).attr('id');

                                                    if(theCommentContent == "" || theCommentContent == null)
                                                    {
                                                        return;
                                                    }
                                                    else
                                                    {
                                                        $.ajax(
                                                        {
                                                            url: "/feeds/sendFeedComment",
                                                            method: "POST",
                                                            data:
                                                            {
                                                                theCommentContent: theCommentContent,
                                                                thisFeedId: thisFeedId
                                                            },
                                                            success: function(response)
                                                            {
                                                                //  console.log(response);
                                                                function isObject(obj)
                                                                {
                                                                    return obj != null && obj.constructor.name === "Object"
                                                                }
                                                                if (isObject(response))
                                                                {
                                                                    
                                                                    //REMOVE FEED OWNER FROM NORMAL COMMENTERS
                                                                    //TELL OTHER USERS THAT                     
                                                                    var removeOwnerFromNotifyAboutNewComment = new Promise(function(resolve, reject) 
                                                                    {
                                                                        var indexOfFeedOwner = response.usersToNotify.indexOf(response.thisOwnerId);
                                                                        if(indexOfFeedOwner > -1)
                                                                        {
                                                                            response.usersToNotify.splice(indexOfFeedOwner, 1);
                                                                        }
                                                                        resolve(response.usersToNotify);
                                                                    });

                                                                    removeOwnerFromNotifyAboutNewComment.then(function(data) 
                                                                    {
                                                                        socket.emit('tellOtherCommentersOnFeed', 
                                                                        {
                                                                            usersToNotifyIds : data,
                                                                            commentId: response.commentId,
                                                                            thisFeedId : thisFeedId,
                                                                            commenter : response.commenter_id
                                                                        });
                                                                    });

                                                                    if(response.thisOwnerId != response.commenter_id)
                                                                    {
                                                                        socket.emit('someoneCommentedOnYourfeed', 
                                                                        {
                                                                            thisOwnerId : response.thisOwnerId,
                                                                            commenter_id : response.commenter_id,
                                                                            commentId: response.commentId,
                                                                            thisFeedId : thisFeedId
                                                                        });
                                                                    }

                                                                    var numberN = parseInt($("#numberOfComments_" + thisFeedId).text().replace('(', '').replace(')', ''));
                                                                    $("#numberOfComments_" + thisFeedId).text(numberN + 1);
                                                                    //id='numberOfComments_"+data.newFeedsList[i].thisFeedId+"'
                                                                }
                                                                $(this).siblings('.feedCommentInput').val("");
                                                            },
                                                            error: function(data)
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some problem occured, check internet connection.",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                        });
                                                    }
                                                });
                                                //FETCH COMMENTS
                                                var thefeedToHoldItsIdForComment;
                                                $('.toggleFeedCommentClass').click(function(e)
                                                {
                                                    var thisFeedId = $(this).siblings('.likesNumber').attr('id').replace(/likes_/g, "");
                                                    //adding nicescoll
                                                    $(".theFeedCommentsPlace").niceScroll(
                                                    {
                                                        cursorcolor: "#2c74a0",
                                                        cursorwidth: "9px",
                                                        cursorborderradius: "5px", 
                                                        cursorminheight: 32, // set the minimum cursor height (pixel)
                                                        cursorfixedheight: 40,
                                                        autohidemode: false, // only cursor hidden
                                                        horizrailenabled: false
                                                    });

                                                    //fecth comments
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/getFeedComments",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            thisFeedId: thisFeedId
                                                        },
                                                        success: function(response)
                                                        {
                                                            if (response === 'empty')
                                                            {
                                                                return;
                                                            }
                                                            else
                                                            {
                                                                //console.log(response.comments);
                                                                $('#commentsHolder_'+ thisFeedId).html("");


                                                                for (var i = 0; i < response.comments.length; i++)
                                                                {
                                                                    $('#commentsHolder_'+ thisFeedId).append("<div class='row'> <div class='col-sm-5'> <h5 class=''>" + response.comments[i].user_first_name + " " + response.comments[i].user_last_name + " <small class='pointer my-pink-2'>@" + lowerFirstLetter(response.comments[i].user_last_name) + "</small><h5> <p class='commentTimeParagraph'><small>On " + moment(response.comments[i].date_commented).format('H:mm A | Do MMM') + "</small></p> </div> <div class='col-sm-7'> <div class='commentContentPlace'> <p> " + response.comments[i].comment_content + " </p> </div> <hr class='new2'><div> </div>");
                                                                }
                                                            }
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Some problem occured, check internet connection.",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                })
                                                //SHOW TAGS
                                                $('.showTagsForFeed').click(function(e)
                                                {
                                                    var thisFeed_id = $(this).siblings('.likeFeedClass').attr('id');
                                                    var notificationType = $(this).siblings('.keepNotificationType').attr('id');
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/getFriendsToTag",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            thisFeedId: thisFeed_id
                                                        },
                                                        success: function(data)
                                                        {
                                                            if (data === 'empty')
                                                            {
                                                                return;
                                                            }
                                                            else
                                                            {
                                                                var results = "";
                                                                data.tagFriendsList.forEach(function(element)
                                                                {
                                                                    results = results + "<h5 class='pointer friend' id='" + element.msg_user_id + "'>" + element.user_first_name + " " + element.user_last_name + "<small>@" + element.msg_user_name + "</small></h5>";
                                                                });
                                                            }
                                                            var dialog = bootbox.dialog(
                                                            {
                                                                title: '<h2><b>Tag a friend</b></h2>',
                                                                message: results,
                                                            });
                                                            $('.friend').click(function()
                                                            {
                                                                var thisFriendId = $(this).attr('id');
                                                                $.ajax(
                                                                {
                                                                    url: "/feeds/tagFriend",
                                                                    method: "POST",
                                                                    data:
                                                                    {
                                                                        thisFeedId: thisFeed_id,
                                                                        notificationType: notificationType,
                                                                        friendId: $(this).attr('id')
                                                                    },
                                                                    success: function(data)
                                                                    {
                                                                        if (data == 'success')
                                                                        {
                                                                            //send socekt tell user that they are tagged
                                                                            socket.emit('youAreTaggedNotifier',
                                                                            {
                                                                                personTagged: thisFriendId,
                                                                                tagger: uid,
                                                                                thisFeedId: thisFeed_id
                                                                            });
                                                                        }
                                                                        else if (data == 'error')
                                                                        {
                                                                            bootbox.alert(
                                                                            {
                                                                                message: "Request could not be completed, retry",
                                                                                className: 'rubberBand animated',
                                                                                size: 'large'
                                                                            });
                                                                        }
                                                                        else if (data == 'already_tagged')
                                                                        {
                                                                            return;
                                                                        }
                                                                    },
                                                                    error: function(data)
                                                                    {
                                                                        bootbox.alert(
                                                                        {
                                                                            message: "Request could not be completed, retry",
                                                                            className: 'rubberBand animated',
                                                                            size: 'large'
                                                                        });
                                                                    }
                                                                })
                                                            })
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Request could not be completed, retry",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                });
                                            }
                                            else
                                            {
                                                if(data == 'error')
                                                {
                                                    bootbox.alert("Error occured, on server try again!");
                                                }
                                                else if(data == 'post_no_longer_exist')
                                                {
                                                    bootbox.alert("Error occured, feed no longer exist");
                                                }
                                            }                                           
                                        },
                                        error : function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Request could not e proccesed: Check your internet connection, try again!",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }

                                    });
                                });
                                //for clicking on notification for comment
                                $('.notificationItemForComment').click(function()
                                {
                                    var feedUpdateId = $(this).attr('id');
                                    var feedId = $(this).children('.feedId').attr('id');
                                    var commentId = $(this).children('.commentId').attr('id');
                                   // $(".toShowfeedIn").html("Feed id: "+feedId+ " Feed Update id: "+feedUpdateId + " Comment id: "+commentId)
                                    $.ajax
                                    ({
                                        url : '/feeds/getSingleWIthComments',
                                        method : 'POST',
                                        data : 
                                        {
                                            feedUpdateId : feedUpdateId, feedId : feedId, commentId : commentId
                                        },
                                        success : function(data)
                                        {
                                            $('.toShowfeedIn').html("");
                                            function isObject(obj)
                                            {
                                                return obj != null && obj.constructor.name === "Object"
                                            }
                                            if(isObject(data))
                                            {
                                                for (var i = 0; i < data.postsListResults.length; i++)
                                                {
                                                    if (data.postsListResults[i].numberOfLikes == null)
                                                    {
                                                        data.postsListResults[i].numberOfLikes = 0;
                                                    }
                                                    if (data.postsListResults[i].numberOfComments == null)
                                                    {
                                                        data.postsListResults[i].numberOfComments = 0;
                                                    }
                                                    if (data.postsListResults[i].numberOfViews == null)
                                                    {
                                                        data.postsListResults[i].numberOfViews = 0;
                                                    }
                                                    if (data.postsListResults[i].story_type == 1)
                                                    {
                                                        if (data.postsListResults[i].caption_content == null)
                                                        {
                                                            data.postsListResults[i].caption_content = "";
                                                        }
                                                        //  picture
                                                        $(".toShowfeedIn").append("<div class='' id='feed_" + data.postsListResults[i].thisFeedId + "'> <div class='containFeed' id='" + data.postsListResults[i].thisFeedId + "_feedEndBox'> <div class='w3-row PostHeader'> <div class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.postsListResults[i].user_last_name + " " + data.postsListResults[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'> <i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + " </small> </div> <span class='w3-right'> " + moment(data.postsListResults[i].date_created).format('H:mm A | Do MMM') + "</span> </div> <div class='w3-row' style='padding-top: 1%;'> <p>" + data.postsListResults[i].caption_content + "</p> <div class='mediaHolder'> <img src='/feeds_images/" + data.postsListResults[i].media_name + "'  class='exactPostImage' alt='Image not avaliable, report to technical team'> </div> <p> <i class='fa fa-heart likeFeedClass' id='" + data.postsListResults[i].thisFeedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.postsListResults[i].thisFeedId + "'>( <span class='like_value'>" + data.postsListResults[i].numberOfLikes + "</span>) </sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' data-toggle='collapse' data-target='#commentsHolder_"+ data.postsListResults[i].thisFeedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.postsListResults[i].thisFeedId + "'>(" + data.postsListResults[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i> &nbsp; &nbsp; <span class='keepNotificationType' id='1'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.postsListResults[i].thisFeedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p></div>          <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ data.postsListResults[i].thisFeedId +"'></div></div>                 </div> </div> <div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                    }
                                                    else if (data.postsListResults[i].story_type == 2)
                                                    {
                                                        //  text
                                                        $(".toShowfeedIn").append("<div class=''  id='feed_" + data.postsListResults[i].thisFeedId + "'><div class='containFeed' id='" + data.postsListResults[i].thisFeedId + "_feedEndBox'>           <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.postsListResults[i].user_last_name + " " + data.postsListResults[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.postsListResults[i].date_created).format('H:mm A | Do MMM') + "</span></div>            <div class='w3-row' style='padding-top: 1%;'><p>" + data.postsListResults[i].feed_postcontent + "</p></div>     <p> <i class='fa fa-heart likeFeedClass'  id='" + data.postsListResults[i].thisFeedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.postsListResults[i].thisFeedId + "'>(<span class='like_value'>" + data.postsListResults[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' data-toggle='collapse' data-target='#commentsHolder_"+ data.postsListResults[i].thisFeedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.postsListResults[i].thisFeedId + "'>(" + data.postsListResults[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>    &nbsp; &nbsp; <span class='keepNotificationType' id='2'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.postsListResults[i].thisFeedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p></div>             <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ data.postsListResults[i].thisFeedId +"'></div></div> </div> </div> <div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                    }
                                                    else if (data.postsListResults[i].story_type == 3)
                                                    {
                                                        //video
                                                        if (data.postsListResults[i].caption_content == null)
                                                        {
                                                            data.postsListResults[i].caption_content = "";
                                                        }
                                                        $(".toShowfeedIn").append("<div class='' id='feed_" + data.postsListResults[i].thisFeedId + "'><div class='containFeed' id='" + data.postsListResults[i].thisFeedId + "_feedEndBox'>            <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.postsListResults[i].user_last_name + " " + data.postsListResults[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.postsListResults[i].date_created).format('H:mm A | Do MMM') + "</span></div>            <div class='w3-row' style='padding-top: 1%;'><p>" + data.postsListResults[i].caption_content + "</p> <div class='videoOnFeedsContainer'> <video style='width: 587px !important; height: auto; margin-bottom: 0px;' class='exactVideoFeed' id='video" + data.postsListResults[i].thisFeedId + "' src='/feeds_video/" + data.postsListResults[i].media_name + "'> Your browser does not support HTML5 video. </video> <span class='togglePlayPause'><i class='fa fa-play fa-2x'></i></span> <div class='custom-seekbar' id='seek" + data.postsListResults[i].thisFeedId + "' style='border-radius: 45px !important;'> <span></span> </div> <span class='dragOnVideoContainer mYPink-color' style='font-style: italic;'> <img src='/img/tv.png' width='40px;'> <br><i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + " </span> </div>   <p> <i class='fa fa-heart likeFeedClass'  id='" + data.postsListResults[i].thisFeedId + "' style='font-size: 150%;'></i> <sup class='likesNumber pointer' id='likes_" + data.postsListResults[i].thisFeedId + "'>(<span class='like_value'>" + data.postsListResults[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass'   data-toggle='collapse' data-target='#commentsHolder_"+ data.postsListResults[i].thisFeedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer'  id='numberOfComments_" + data.postsListResults[i].thisFeedId + "'>(" + data.postsListResults[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp;<span class='showViewers w3-right pointer'><span id='numberOfViewsId_"+data.postsListResults[i].thisFeedId+"' class='numberOfViews pointer'>" + data.postsListResults[i].numberOfViews + "</span> Views </span><span class='keepNotificationType' id='3'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.postsListResults[i].thisFeedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p> </div>     <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace in' id='commentsHolder_"+ data.postsListResults[i].thisFeedId +"'></div></div> </div> </div> <div class='row'><div class='col-md-3'></div>                                                        <div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                    }
                                                    if (data.postsListResults[i].checkIfLiked > 0)
                                                    {
                                                        $("#likes_" + data.postsListResults[i].thisFeedId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                                    }
                                                }
                                                $('#commentsHolder_'+ feedId).html("");
                                  
                                                for (var i = 0; i < data.comments.length; i++)
                                                {
                                                    $('#commentsHolder_'+ feedId).append("<div class='row' id='theCommentToGoTo_"+data.comments[i].id+"'> <div class='col-sm-5'> <h5 class=''>" + data.comments[i].user_first_name + " " + data.comments[i].user_last_name + " <small class='pointer my-pink-2'>@" + lowerFirstLetter(data.comments[i].user_last_name) + "</small><h5> <p class='commentTimeParagraph'><small>On " + moment(data.comments[i].date_commented).format('H:mm A | Do MMM') + "</small></p> </div> <div class='col-sm-7'> <div class='commentContentPlace'> <p> " + data.comments[i].comment_content + " </p> </div> <hr class='new2'><div> </div>");
                                                }



                                                //scrolling to element
                                                // As soon as the modal is shown
                                                $('#singleFeedViewModal').on('shown.bs.modal', function() 
                                                {
                                                    // Get the right offset
                                                    var positionOfComment = $("#theCommentToGoTo_"+commentId).position();
                                                    var elmnt = document.getElementById("theCommentToGoTo_"+commentId);
                                                    elmnt.scrollIntoView();
                                                });

                                                $(".custom-seekbar").on("click", function(e)
                                                {
                                                    
                                                    var thisSeekId = $(this).attr('id');
                                                    var uniqueId = thisSeekId.replace("seek", "");
                                                    var vid = document.getElementById("video" + uniqueId + "");


                                                    if (vid.paused == false)
                                                    {
                                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");                                
                                                    }
                                                    else
                                                    {
                                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-pause fa-2x'></i>");
                                                    }

                                                    
                                                    var thePromise = new Promise(function(resolve, reject)
                                                    {
                                                        vid.currentTime = Number.MAX_SAFE_INTEGER;
                                                        vid.ontimeupdate = function()
                                                        {
                                                            this.ontimeupdate = () =>
                                                            {
                                                                return; // resolve(vid.duration);
                                                            }
                                                            resolve(vid.duration);
                                                        }
                                                    }, function error(data)
                                                    {
                                                        console.error(data);
                                                    });
                                                    thePromise.then(function(data)
                                                    {
                                                        var durr = data;
                                                        var thisSeekOffset = $("#seek" + uniqueId).offset();
                                                        var left = (e.pageX - thisSeekOffset.left);
                                                        var totalWidth = 569;
                                                        var percentage = (left / totalWidth);
                                                        var vidTime = durr * percentage;
                                                        vid.currentTime = vidTime;
                                                        document.getElementById("video" + uniqueId + "").play();
                                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-pause fa-2x'></i>");
                                                        vid.muted = false;
                                                        vid.ontimeupdate = function()
                                                        {
                                                            resetActivity();
                                                            var percentage = (vid.currentTime / durr) * 100;
                                                            $("#" + thisSeekId + " span").css("width", percentage + "%");
                                                            vid.onended = function() 
                                                            {
                                                                if(durr == vid.currentTime)
                                                                {
                                                                    vid.currentTime = 0;
                                                                    $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");
                                                                }
                                                               
                                                            };
                                                        }
                                                    });

                                                    $.ajax
                                                    ({
                                                        url : '/feeds/viewFeed',
                                                        method : 'POST',
                                                        data :
                                                        {
                                                            feedIdViewing : uniqueId
                                                        },
                                                        success : function(data)
                                                        {
                                                            if(data == 'success')
                                                            {
                                                                var numberN = parseInt($("#numberOfViewsId_"+uniqueId).text());
                                                                $("#numberOfViewsId_"+uniqueId).text(numberN + 1);
                                                            }
                                                        }
                                                    });
                                                    
                                                });
                                                $(".togglePlayPause").click(function()
                                                {
                                                    var mY_video_id = $(this).siblings("video").attr('id');
                                                    var uniqueId = mY_video_id.replace("video", "");
                                                    var vid = document.getElementById("" + mY_video_id + "");

                                                    vid.muted = true;

                                                    if (vid.paused == false)
                                                    {
                                                        $(this).html("<i class='fa fa-play fa-2x'></i>");
                                                        vid.pause();
                                                    }
                                                    else
                                                    {
                                                        $(this).html("<i class='fa fa-pause fa-2x'></i>");
                                                        var thePromise = new Promise(function(resolve, reject)
                                                        {
                                                            vid.currentTime = Number.MAX_SAFE_INTEGER;
                                                            vid.ontimeupdate = function()
                                                            {
                                                                this.ontimeupdate = () =>
                                                                {
                                                                    return; // resolve(vid.duration);
                                                                }
                                                                resolve(vid.duration);
                                                            }
                                                        })

                                                        thePromise.then(function(data)
                                                        {
                                                            var durr = data;
                                                            var thisSeekOffset = $("#seek" + uniqueId).position();

                                                            var left = ($("#seek" + uniqueId + " span").width() - thisSeekOffset.left);
                                                            var totalWidth = 587;
                                                            var percentage = (left / totalWidth);
                                                            var vidTime = durr * percentage;
                                                            vid.play();
                                                            vid.muted = false;
                                                            vid.currentTime = vidTime;

                                                            vid.ontimeupdate = function(e)
                                                            {
                                                                resetActivity();
                                                                var percentage = (vid.currentTime / durr) * 100;
                                                                $("#seek" + uniqueId + " span").css("width", percentage + "%");
                                                                vid.onended = function() {
                                                                    if(durr == vid.currentTime)
                                                                    {
                                                                        vid.currentTime = 0;
                                                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");
                                                                    }
                                                                   
                                                                };
                                                            }

                                                        });
                                                    }
                                                    $.ajax
                                                    ({
                                                        url : '/feeds/viewFeed',
                                                        method : 'POST',
                                                        data :
                                                        {
                                                            feedIdViewing : uniqueId
                                                        },
                                                        success : function(data)
                                                        {
                                                            if(data == 'success')
                                                            {
                                                                var numberN = parseInt($("#numberOfViewsId_"+uniqueId).text());
                                                                $("#numberOfViewsId_"+uniqueId).text(numberN + 1);
                                                            }
                                                        }
                                                    });
                                                });
                                                /*  VIDEO PLAYER ENDS HERE */
                                                $('.showViewers').click(function(e)
                                                {
                                                    var feedId = $(this).siblings('.postCommentButton').attr('id');
                                                    if ($(this).children().text() == 0)
                                                    {
                                                        return;
                                                    }
                                                    else
                                                    {
                                                        $.ajax(
                                                        {
                                                            url: "/feeds/showViewers",
                                                            method: "POST",
                                                            data:
                                                            {
                                                                thisFeedId: feedId
                                                            },
                                                            success: function(response)
                                                            {
                                                                if (response == 'empty')
                                                                {
                                                                    return;
                                                                }
                                                                else if (response == 'error')
                                                                {
                                                                    bootbox.alert(
                                                                    {
                                                                        message: "Some error occured, try again",
                                                                        className: 'rubberBand animated',
                                                                        size: 'large'
                                                                    });
                                                                }
                                                                else if (response.viewersResults.length)
                                                                {
                                                                    var viewersListResults = "";
                                                                    for (var i = 0; i < response.viewersResults.length; i++)
                                                                    {
                                                                        viewersListResults = viewersListResults + "<p id='" + response.viewersResults[i].msg_user_id + "'>" + response.viewersResults[i].user_first_name + " " + response.viewersResults[i].user_last_name + " viewed this post on " + moment(response.viewersResults[i].date_viewed).format('H:mm Do MMM') + "</p>";
                                                                    }
                                                                    bootbox.alert(
                                                                    {
                                                                        message: viewersListResults,
                                                                        size: 'medium'
                                                                    });
                                                                }
                                                            },
                                                            error: function(data)
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some problem occured, check internet connection.",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                        });
                                                    }
                                                });
                                                $('.likesNumber').click(function(e)
                                                {
                                                    e.stopPropagation();
                                                    var thisFeedId = $(this).siblings('.likeFeedClass').attr('id');
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/showFeedsLikes",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            thisFeedId: thisFeedId
                                                        },
                                                        success: function(response)
                                                        {
                                                            if (response == 'empty')
                                                            {
                                                                return;
                                                            }
                                                            else if (response == 'error')
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some error occured, try again",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                            else if (response.likersResults.length)
                                                            {
                                                                var likersListResults = "";
                                                                for (var i = 0; i < response.likersResults.length; i++)
                                                                {
                                                                    likersListResults = likersListResults + "<p id='" + response.likersResults[i].msg_user_id + "'>" + response.likersResults[i].user_first_name + " " + response.likersResults[i].user_last_name + " liked this post on " + moment(response.likersResults[i].date_liked).format('H:mm Do MMM') + "</p>";
                                                                }
                                                                bootbox.alert(
                                                                {
                                                                    message: likersListResults,
                                                                    size: 'medium'
                                                                });
                                                            }
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Some problem occured, check internet connection.",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                });
                                                
                                                //HANDLE LIKING OF VIDEO
                                                $('.likeFeedClass').click(function()
                                                {
                                                    var thisId = $(this).attr('id');
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/likeFeed",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            feedIdLiking: $(this).attr('id')
                                                        },
                                                        success: function(response)
                                                        {
                                                            function isObject(obj)
                                                            {
                                                                return obj != null && obj.constructor.name === "Object"
                                                            }
                                                            if (response.message == 'liked')
                                                            {
                                                                $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                                $("#likes_" + thisId).children('.like_value').text(numberN + 1);
                                                                //update other who liked
                                                                socket.emit('updateFeedLiked',
                                                                {
                                                                    userLiked: uid,
                                                                    thisId: thisId,
                                                                    ownerId : response.feedsOwnerId
                                                                });
                                                            }
                                                            else if (response.message == 'like_deleted')
                                                            {
                                                                $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#686868");
                                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                                $("#likes_" + thisId).children('.like_value').text(numberN - 1);
                                                                socket.emit('updateFeedUnliked',
                                                                {
                                                                    userLiked: uid,
                                                                    thisId: thisId,
                                                                    ownerId : response.feedsOwnerId
                                                                });
                                                            }
                                                            else if (response == 'error')
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some problem occured, maybe the post is no longer existing",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Some problem occured, check internet connection.",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                });
                                                //HANCLE SENDING COMMENT
                                                $('.postCommentButton').click(function()
                                                {
                                                    var theCommentContent = $(this).parent().siblings('.feedCommentInput').val();
                                                    $(this).parent().siblings('.feedCommentInput').val("");
                                                    var thisFeedId = $(this).attr('id');

                                                    if(theCommentContent == "" || theCommentContent == null)
                                                    {
                                                        return;
                                                    }
                                                    else
                                                    {
                                                        $.ajax(
                                                        {
                                                            url: "/feeds/sendFeedComment",
                                                            method: "POST",
                                                            data:
                                                            {
                                                                theCommentContent: theCommentContent,
                                                                thisFeedId: thisFeedId
                                                            },
                                                            success: function(response)
                                                            {
                                                                //  console.log(response);
                                                                function isObject(obj)
                                                                {
                                                                    return obj != null && obj.constructor.name === "Object"
                                                                }
                                                                if (isObject(response))
                                                                {
                                                                    
                                                                    //REMOVE FEED OWNER FROM NORMAL COMMENTERS
                                                                    //TELL OTHER USERS THAT                     
                                                                    var removeOwnerFromNotifyAboutNewComment = new Promise(function(resolve, reject) 
                                                                    {
                                                                        var indexOfFeedOwner = response.usersToNotify.indexOf(response.thisOwnerId);
                                                                        if(indexOfFeedOwner > -1)
                                                                        {
                                                                            response.usersToNotify.splice(indexOfFeedOwner, 1);
                                                                        }
                                                                        resolve(response.usersToNotify);
                                                                    });

                                                                    removeOwnerFromNotifyAboutNewComment.then(function(data) 
                                                                    {
                                                                        socket.emit('tellOtherCommentersOnFeed', 
                                                                        {
                                                                            usersToNotifyIds : data,
                                                                            commentId: response.commentId,
                                                                            thisFeedId : thisFeedId,
                                                                            commenter : response.commenter_id
                                                                        });
                                                                    });

                                                                    if(response.thisOwnerId != response.commenter_id)
                                                                    {
                                                                        socket.emit('someoneCommentedOnYourfeed', 
                                                                        {
                                                                            thisOwnerId : response.thisOwnerId,
                                                                            commenter_id : response.commenter_id,
                                                                            commentId: response.commentId,
                                                                            thisFeedId : thisFeedId
                                                                        });
                                                                    }

                                                                    var numberN = parseInt($("#numberOfComments_" + thisFeedId).text().replace('(', '').replace(')', ''));
                                                                    $("#numberOfComments_" + thisFeedId).text(numberN + 1);
                                                                    //id='numberOfComments_"+data.newFeedsList[i].thisFeedId+"'
                                                                }
                                                                $(this).siblings('.feedCommentInput').val("");
                                                            },
                                                            error: function(data)
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some problem occured, check internet connection.",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                        });
                                                    }
                                                });
                                                //FETCH COMMENTS
                                                var thefeedToHoldItsIdForComment;
                                                $('.toggleFeedCommentClass').click(function(e)
                                                {
                                                    var thisFeedId = $(this).siblings('.likesNumber').attr('id').replace(/likes_/g, "");
                                                    //adding nicescoll
                                                    $(".theFeedCommentsPlace").niceScroll(
                                                    {
                                                        cursorcolor: "#2c74a0",
                                                        cursorwidth: "9px",
                                                        cursorborderradius: "5px", 
                                                        cursorminheight: 32, // set the minimum cursor height (pixel)
                                                        cursorfixedheight: 40,
                                                        autohidemode: false, // only cursor hidden
                                                        horizrailenabled: false
                                                    });

                                                    //fecth comments
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/getFeedComments",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            thisFeedId: thisFeedId
                                                        },
                                                        success: function(response)
                                                        {
                                                            if (response === 'empty')
                                                            {
                                                                return;
                                                            }
                                                            else
                                                            {
                                                                //console.log(response.comments);
                                                                $('#commentsHolder_'+ thisFeedId).html("");


                                                                for (var i = 0; i < response.comments.length; i++)
                                                                {
                                                                    $('#commentsHolder_'+ thisFeedId).append("<div class='row'> <div class='col-sm-5'> <h5 class=''>" + response.comments[i].user_first_name + " " + response.comments[i].user_last_name + " <small class='pointer my-pink-2'>@" + lowerFirstLetter(response.comments[i].user_last_name) + "</small><h5> <p class='commentTimeParagraph'><small>On " + moment(response.comments[i].date_commented).format('H:mm A | Do MMM') + "</small></p> </div> <div class='col-sm-7'> <div class='commentContentPlace'> <p> " + response.comments[i].comment_content + " </p> </div> <hr class='new2'><div> </div>");
                                                                }
                                                            }
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Some problem occured, check internet connection.",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                })
                                                //SHOW TAGS
                                                $('.showTagsForFeed').click(function(e)
                                                {
                                                    var thisFeed_id = $(this).siblings('.likeFeedClass').attr('id');
                                                    var notificationType = $(this).siblings('.keepNotificationType').attr('id');
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/getFriendsToTag",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            thisFeedId: thisFeed_id
                                                        },
                                                        success: function(data)
                                                        {
                                                            if (data === 'empty')
                                                            {
                                                                return;
                                                            }
                                                            else
                                                            {
                                                                var results = "";
                                                                data.tagFriendsList.forEach(function(element)
                                                                {
                                                                    results = results + "<h5 class='pointer friend' id='" + element.msg_user_id + "'>" + element.user_first_name + " " + element.user_last_name + "<small>@" + element.msg_user_name + "</small></h5>";
                                                                });
                                                            }
                                                            var dialog = bootbox.dialog(
                                                            {
                                                                title: '<h2><b>Tag a friend</b></h2>',
                                                                message: results,
                                                            });
                                                            $('.friend').click(function()
                                                            {
                                                                var thisFriendId = $(this).attr('id');
                                                                $.ajax(
                                                                {
                                                                    url: "/feeds/tagFriend",
                                                                    method: "POST",
                                                                    data:
                                                                    {
                                                                        thisFeedId: thisFeed_id,
                                                                        notificationType: notificationType,
                                                                        friendId: $(this).attr('id')
                                                                    },
                                                                    success: function(data)
                                                                    {
                                                                        if (data == 'success')
                                                                        {
                                                                            //send socekt tell user that they are tagged
                                                                            socket.emit('youAreTaggedNotifier',
                                                                            {
                                                                                personTagged: thisFriendId,
                                                                                tagger: uid,
                                                                                thisFeedId: thisFeed_id
                                                                            });
                                                                        }
                                                                        else if (data == 'error')
                                                                        {
                                                                            bootbox.alert(
                                                                            {
                                                                                message: "Request could not be completed, retry",
                                                                                className: 'rubberBand animated',
                                                                                size: 'large'
                                                                            });
                                                                        }
                                                                        else if (data == 'already_tagged')
                                                                        {
                                                                            return;
                                                                        }
                                                                    },
                                                                    error: function(data)
                                                                    {
                                                                        bootbox.alert(
                                                                        {
                                                                            message: "Request could not be completed, retry",
                                                                            className: 'rubberBand animated',
                                                                            size: 'large'
                                                                        });
                                                                    }
                                                                })
                                                            })
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Request could not be completed, retry",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                });
                                            }
                                            else
                                            {
                                                if(data == 'error')
                                                {
                                                    bootbox.alert(
                                                    {
                                                        message: "Problem occured on server side when fetching the Feed, contact technical team!",
                                                        className: 'rubberBand animated',
                                                        size: 'large'
                                                    });
                                                }
                                                else if(data == 'empty')
                                                {
                                                    bootbox.alert(
                                                    {
                                                        message: "Feed no longer exist!",
                                                        className: 'rubberBand animated',
                                                        size: 'large'
                                                    });
                                                }
                                            }
                                        },
                                        error: function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Check your internet connection, try again!",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                    })
                                });

                            }
                        },
                        error: function(data) {}
                    });
                }
                else
                {
                    x.className = x.className.replace(" w3-show", "");
                }
            });
            //MAIN CHAT TOGGLER
            $(".showMainDivToggler").click(function()
            {
                $("#"+currentWindow).hide();
                currentWindow = "mainDiv";
                $("#mainDiv").fadeIn();
                $(".chatMessagesBox").getNiceScroll().show()
                $(".theScrollH").getNiceScroll().hide();
            });            
            //TO GET THE FEEDS
            var lastFeedId;
            $('.showFeedsToggler').click(function()
            {
                $("#"+currentWindow).hide();                
                currentWindow = "feedsModal";
                $(".chatMessagesBox").getNiceScroll().hide();
                $(".theScrollH").getNiceScroll().show();
                $("#feedsModal").fadeIn(function()
                {
                    $.ajax(
                    {
                        url: '/feeds/getThePosts',
                        method: 'POST',
                        data:
                        {
                            action: "getPostsByMyFriends"
                        },
                        success: function(data)
                        {
                            //console.log(data);
                            if (data.postsListResults === "no posts, 444 code")
                            {
                                $(".feedsWillGoHere").html("<div class='text-center no-posts-div'><h4>No posts yet to show. Press plus to start posting</h4></div>");
                            }
                            else
                            {
                                $(".feedsWillGoHere").html("");
                                lastFeedId = data.postsListResults[0].thisFeedId;
                                for (var i = 0; i < data.postsListResults.length; i++)
                                {
                                    if (data.postsListResults[i].numberOfLikes == null)
                                    {
                                        data.postsListResults[i].numberOfLikes = 0;
                                    }
                                    if (data.postsListResults[i].numberOfComments == null)
                                    {
                                        data.postsListResults[i].numberOfComments = 0;
                                    }
                                    if (data.postsListResults[i].numberOfViews == null)
                                    {
                                        data.postsListResults[i].numberOfViews = 0;
                                    }
                                    if (data.postsListResults[i].story_type == 1)
                                    {
                                        if (data.postsListResults[i].caption_content == null)
                                        {
                                            data.postsListResults[i].caption_content = "";
                                        }
                                        //  picture
                                        $(".feedsWillGoHere").append("<div class='w3-card' id='feed_" + data.postsListResults[i].thisFeedId + "'> <div class='containFeed' id='" + data.postsListResults[i].thisFeedId + "_feedEndBox'> <div class='w3-row PostHeader'> <div class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.postsListResults[i].user_last_name + " " + data.postsListResults[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'> <i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + " </small> </div> <span class='w3-right'> " + moment(data.postsListResults[i].date_created).format('H:mm A | Do MMM') + "</span> </div> <div class='w3-row' style='padding-top: 1%;'> <p>" + data.postsListResults[i].caption_content + "</p> <div class='mediaHolder'> <img src='/feeds_images/" + data.postsListResults[i].media_name + "' alt='Image not avaliable, report to technical team' class='exactPostImage'> </div> <p><span class='wrapper my-absolute'><span class='my-button'> <span class='send-icon like-icon fa fa-heart likes_icon_" + data.postsListResults[i].thisFeedId+"' id='" + data.postsListResults[i].thisFeedId + "'></span></span></span><sup class='likesNumber pointer my-absolute' id='likes_" + data.postsListResults[i].thisFeedId + "'>(<span class='like_value'>" + data.postsListResults[i].numberOfLikes + "</span>) </sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' data-toggle='collapse' data-target='#commentsHolder_"+ data.postsListResults[i].thisFeedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.postsListResults[i].thisFeedId + "'>(" + data.postsListResults[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i> &nbsp; &nbsp;  <span class='keepNotificationType' id='1'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.postsListResults[i].thisFeedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p></div>          <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ data.postsListResults[i].thisFeedId +"'></div></div>                 </div> </div> <div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                    }
                                    else if (data.postsListResults[i].story_type == 2)
                                    {
                                        //  text
                                        $(".feedsWillGoHere").append("<div class='w3-card'  id='feed_" + data.postsListResults[i].thisFeedId + "'><div class='containFeed' id='" + data.postsListResults[i].thisFeedId + "_feedEndBox'>         <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.postsListResults[i].user_last_name + " " + data.postsListResults[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.postsListResults[i].date_created).format('H:mm A | Do MMM') + "</span></div>            <div class='w3-row' style='padding-top: 1%;'><p>" + data.postsListResults[i].feed_postcontent + "</p></div><p><span class='wrapper my-absolute'><span class='my-button'> <span class='send-icon like-icon fa fa-heart likes_icon_" + data.postsListResults[i].thisFeedId+"' id='" + data.postsListResults[i].thisFeedId + "'></span></span></span><sup class='likesNumber pointer' id='likes_" + data.postsListResults[i].thisFeedId + "'>(<span class='like_value'>" + data.postsListResults[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' data-toggle='collapse' data-target='#commentsHolder_"+ data.postsListResults[i].thisFeedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.postsListResults[i].thisFeedId + "'>(" + data.postsListResults[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>    &nbsp; &nbsp; <span class='keepNotificationType' id='2'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.postsListResults[i].thisFeedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p></div>             <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ data.postsListResults[i].thisFeedId +"'></div></div> </div> </div> <div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                    }
                                    else if (data.postsListResults[i].story_type == 3)
                                    {
                                        //video
                                        if (data.postsListResults[i].caption_content == null)
                                        {
                                            data.postsListResults[i].caption_content = "";
                                        }
                                        $(".feedsWillGoHere").append("<div class='w3-card' id='feed_" + data.postsListResults[i].thisFeedId + "'><div class='containFeed' id='" + data.postsListResults[i].thisFeedId + "_feedEndBox'>          <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.postsListResults[i].user_last_name + " " + data.postsListResults[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.postsListResults[i].date_created).format('H:mm A | Do MMM') + "</span></div>            <div class='w3-row' style='padding-top: 1%;'><p>" + data.postsListResults[i].caption_content + "</p> <div class='videoOnFeedsContainer'> <video  class='exactVideoFeed' id='video" + data.postsListResults[i].thisFeedId + "' src='/feeds_video/" + data.postsListResults[i].media_name + "'> Your browser does not support HTML5 video. </video> <span class='togglePlayPause'><i class='fa fa-play fa-2x'></i></span> <div class='custom-seekbar' id='seek" + data.postsListResults[i].thisFeedId + "' style='border-radius: 45px !important;'> <span></span> </div> <span class='dragOnVideoContainer mYPink-color' style='font-style: italic;'> <img src='/img/tv.png' width='40px;'> <br><i class='fa fa-at'></i>" + lowerFirstLetter(data.postsListResults[i].msg_user_name) + " </span> </div> <p><span class='wrapper my-absolute'><span class='my-button'> <span class='send-icon like-icon fa fa-heart likes_icon_" + data.postsListResults[i].thisFeedId+"' id='" + data.postsListResults[i].thisFeedId + "'></span></span></span><sup class='likesNumber pointer' id='likes_" + data.postsListResults[i].thisFeedId + "'>(<span class='like_value'>" + data.postsListResults[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass'   data-toggle='collapse' data-target='#commentsHolder_"+ data.postsListResults[i].thisFeedId +"' aria-hidden='true'></i> <sup class='numberOfComments pointer'  id='numberOfComments_" + data.postsListResults[i].thisFeedId + "'>(" + data.postsListResults[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp;<span class='showViewers w3-right pointer w3-right'><span id='numberOfViewsId_"+data.postsListResults[i].thisFeedId+"' class='numberOfViews pointer'>" + data.postsListResults[i].numberOfViews + "</span> Views </span><span class='keepNotificationType' id='3'></span> <div class='input-group'><textarea placeholder='Enter your comment here...' class='commentArea feedCommentInput' ></textarea>&nbsp; &nbsp; <div class='input-group-btn'><button id='" + data.postsListResults[i].thisFeedId + "' class='btn btn-default commentSendBtn postCommentButton' type='submit'><i class='fa fa-send-o fa-2x pointer' ></i></button> </div> </div></p> </div>     <div class='w3-row' style='width: 99.999%;'><div class='col-md-12 collapse theFeedCommentsPlace' id='commentsHolder_"+ data.postsListResults[i].thisFeedId +"'></div></div> </div> </div> <div class='row'><div class='col-md-3'></div>                                                        <div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                    }
                                    if (data.postsListResults[i].checkIfLiked > 0)
                                    {
                                        // $("#likes_" + data.postsListResults[i].thisFeedId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                        $(".likes_icon_" + data.postsListResults[i].thisFeedId).css("color", "#fc8a9e");
                                    }
                                }

                                

                                /***********************collapsing other div for comments**************************************/
                                $('.collapse').on('show.bs.collapse', function () 
                                {
                                    //$('.collapse').getNiceScroll().remove();
                                    $('.collapse.in').each(function()
                                    {
                                        $(this).collapse('hide');
                                    });
                                    //$('.collapse').niceScroll();
                                });
                                /*************************************** VIDEO PLAYER EVENTS **********************************/
                                $(".custom-seekbar").on("click", function(e)
                                {
                                    
                                    var thisSeekId = $(this).attr('id');
                                    var uniqueId = thisSeekId.replace("seek", "");
                                    var vid = document.getElementById("video" + uniqueId + "");


                                    if (vid.paused == false)
                                    {
                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");                                
                                    }
                                    else
                                    {
                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-pause fa-2x'></i>");
                                    }

                                    
                                    var thePromise = new Promise(function(resolve, reject)
                                    {
                                        vid.currentTime = Number.MAX_SAFE_INTEGER;
                                        vid.ontimeupdate = function()
                                        {
                                            this.ontimeupdate = () =>
                                            {
                                                return; // resolve(vid.duration);
                                            }
                                            resolve(vid.duration);
                                        }
                                    }, function error(data)
                                    {
                                        console.error(data);
                                    });
                                    thePromise.then(function(data)
                                    {
                                        var durr = data;
                                        var thisSeekOffset = $("#seek" + uniqueId).offset();
                                        var left = (e.pageX - thisSeekOffset.left);
                                        var totalWidth = 569;
                                        var percentage = (left / totalWidth);
                                        var vidTime = durr * percentage;
                                        vid.currentTime = vidTime;
                                        document.getElementById("video" + uniqueId + "").play();
                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-pause fa-2x'></i>");
                                        vid.muted = false;
                                        vid.ontimeupdate = function()
                                        {
                                            resetActivity();
                                            var percentage = (vid.currentTime / durr) * 100;
                                            $("#" + thisSeekId + " span").css("width", percentage + "%");
                                            vid.onended = function() 
                                            {
                                                if(durr == vid.currentTime)
                                                {
                                                    vid.currentTime = 0;
                                                    $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");
                                                }
                                               
                                            };
                                        }
                                    });

                                    $.ajax
                                    ({
                                        url : '/feeds/viewFeed',
                                        method : 'POST',
                                        data :
                                        {
                                            feedIdViewing : uniqueId
                                        },
                                        success : function(data)
                                        {
                                            if(data == 'success')
                                            {
                                                var numberN = parseInt($("#numberOfViewsId_"+uniqueId).text());
                                                $("#numberOfViewsId_"+uniqueId).text(numberN + 1);
                                            }
                                        }
                                    });
                                    
                                });
                                $(".togglePlayPause").click(function()
                                {
                                    var mY_video_id = $(this).siblings("video").attr('id');
                                    var uniqueId = mY_video_id.replace("video", "");
                                    var vid = document.getElementById("" + mY_video_id + "");

                                    vid.muted = true;

                                    if (vid.paused == false)
                                    {
                                        $(this).html("<i class='fa fa-play fa-2x'></i>");
                                        vid.pause();
                                    }
                                    else
                                    {
                                        $(this).html("<i class='fa fa-pause fa-2x'></i>");
                                        var thePromise = new Promise(function(resolve, reject)
                                        {
                                            vid.currentTime = Number.MAX_SAFE_INTEGER;
                                            vid.ontimeupdate = function()
                                            {
                                                this.ontimeupdate = () =>
                                                {
                                                    return; // resolve(vid.duration);
                                                }
                                                resolve(vid.duration);
                                            }
                                        })

                                        thePromise.then(function(data)
                                        {
                                            var durr = data;
                                            var thisSeekOffset = $("#seek" + uniqueId).position();

                                            var left = ($("#seek" + uniqueId + " span").width() - thisSeekOffset.left);
                                            var totalWidth = 587;
                                            var percentage = (left / totalWidth);
                                            var vidTime = durr * percentage;
                                            vid.play();
                                            vid.muted = false;
                                            vid.currentTime = vidTime;

                                            vid.ontimeupdate = function(e)
                                            {
                                                resetActivity();
                                                var percentage = (vid.currentTime / durr) * 100;
                                                $("#seek" + uniqueId + " span").css("width", percentage + "%");
                                                vid.onended = function() {
                                                    if(durr == vid.currentTime)
                                                    {
                                                        vid.currentTime = 0;
                                                        $("#video"+ uniqueId).siblings(".togglePlayPause").html("<i class='fa fa-play fa-2x'></i>");
                                                    }
                                                   
                                                };
                                            }

                                        });
                                    }
                                    $.ajax
                                    ({
                                        url : '/feeds/viewFeed',
                                        method : 'POST',
                                        data :
                                        {
                                            feedIdViewing : uniqueId
                                        },
                                        success : function(data)
                                        {
                                            if(data == 'success')
                                            {
                                                var numberN = parseInt($("#numberOfViewsId_"+uniqueId).text());
                                                $("#numberOfViewsId_"+uniqueId).text(numberN + 1);
                                            }   
                                        }
                                    });
                                });
                                /*  VIDEO PLAYER ENDS HERE */
                                $('.showViewers').click(function(e)
                                {
                                    var feedId = $(this).siblings('.postCommentButton').attr('id');
                                    if ($(this).children().text() == 0)
                                    {
                                        return;
                                    }
                                    else
                                    {
                                        $.ajax(
                                        {
                                            url: "/feeds/showViewers",
                                            method: "POST",
                                            data:
                                            {
                                                thisFeedId: feedId
                                            },
                                            success: function(response)
                                            {
                                                if (response == 'empty')
                                                {
                                                    return;
                                                }
                                                else if (response == 'error')
                                                {
                                                    bootbox.alert(
                                                    {
                                                        message: "Some error occured, try again",
                                                        className: 'rubberBand animated',
                                                        size: 'large'
                                                    });
                                                }
                                                else if (response.viewersResults.length)
                                                {
                                                    var viewersListResults = "";
                                                    for (var i = 0; i < response.viewersResults.length; i++)
                                                    {
                                                        viewersListResults = viewersListResults + "<p id='" + response.viewersResults[i].msg_user_id + "'>" + response.viewersResults[i].user_first_name + " " + response.viewersResults[i].user_last_name + " viewed this post on " + moment(response.viewersResults[i].date_viewed).format('H:mm Do MMM') + "</p>";
                                                    }
                                                    bootbox.alert(
                                                    {
                                                        message: viewersListResults,
                                                        size: 'medium'
                                                    });
                                                }
                                            },
                                            error: function(data)
                                            {
                                                bootbox.alert(
                                                {
                                                    message: "Some problem occured, check internet connection.",
                                                    className: 'rubberBand animated',
                                                    size: 'large'
                                                });
                                            }
                                        });
                                    }
                                });
                                $('.likesNumber').click(function(e)
                                {
                                    e.stopPropagation();
                                    var thisFeedId = $(this).siblings('.likeFeedClass').attr('id');
                                    $.ajax(
                                    {
                                        url: "/feeds/showFeedsLikes",
                                        method: "POST",
                                        data:
                                        {
                                            thisFeedId: thisFeedId
                                        },
                                        success: function(response)
                                        {
                                            if (response == 'empty')
                                            {
                                                return;
                                            }
                                            else if (response == 'error')
                                            {
                                                bootbox.alert(
                                                {
                                                    message: "Some error occured, try again",
                                                    className: 'rubberBand animated',
                                                    size: 'large'
                                                });
                                            }
                                            else if (response.likersResults.length)
                                            {
                                                var likersListResults = "";
                                                for (var i = 0; i < response.likersResults.length; i++)
                                                {
                                                    likersListResults = likersListResults + "<p id='" + response.likersResults[i].msg_user_id + "'>" + response.likersResults[i].user_first_name + " " + response.likersResults[i].user_last_name + " liked this post on " + moment(response.likersResults[i].date_liked).format('H:mm Do MMM') + "</p>";
                                                }
                                                bootbox.alert(
                                                {
                                                    message: likersListResults,
                                                    size: 'medium'
                                                });
                                            }
                                        },
                                        error: function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Some problem occured, check internet connection.",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                    });
                                });
                                
                                $(".closeNewFeedsTeller").click(function(e)
                                {
                                    e.stopPropagation();
                                    $(".viewNewFeedsBox").hide();
                                })
                                $(".viewNewFeedsBox").click(function(e)
                                {
                                    e.stopPropagation();
                                    $(".viewNewFeedsBox").hide();
                                    $.ajax(
                                    {
                                        url: "/feeds/showNewFeeds",
                                        method: "POST",
                                        data:
                                        {
                                            lastFeedId: lastFeedId
                                        },
                                        success: function(data)
                                        {
                                            if (data == 'empty')
                                            {
                                                return;
                                            }
                                            else if (data == 'error')
                                            {
                                                bootbox.alert(
                                                {
                                                    message: "Some error occured, try again",
                                                    className: 'rubberBand animated',
                                                    size: 'large'
                                                });
                                            }
                                            else if (data.newFeedsList.length)
                                            {
                                                lastFeedId = data.newFeedsList[0].thisFeedId;
                                                for (var i = 0; i < data.newFeedsList.length; i++)
                                                {
                                                    if (data.newFeedsList[i].numberOfLikes == null)
                                                    {
                                                        data.newFeedsList[i].numberOfLikes = 0;
                                                    }
                                                    if (data.newFeedsList[i].numberOfComments == null)
                                                    {
                                                        data.newFeedsList[i].numberOfComments = 0;
                                                    }
                                                    if (data.newFeedsList[i].numberOfViews == null)
                                                    {
                                                        data.newFeedsList[i].numberOfViews = 0;
                                                    }
                                                    if (data.newFeedsList[i].story_type == 1)
                                                    {
                                                        if (data.newFeedsList[i].caption_content == null)
                                                        {
                                                            data.newFeedsList[i].caption_content = "";
                                                        }
                                                        $(".feedsWillGoHere").prepend("<div class='row' id='feed_" + data.newFeedsList[i].thisFeedId + "'><div class='col-md-3'></div><div class='col-md-6 w3-card'><div class='containFeed' id='" + data.newFeedsList[i].thisFeedId + "_feedEndBox'>           <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.newFeedsList[i].user_last_name + " " + data.newFeedsList[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.newFeedsList[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.newFeedsList[i].date_created).format('H:mm A | Do MMM') + "</span></div><div class='w3-row' style='padding-top: 1%;'><p>" + data.newFeedsList[i].caption_content + "</p> <div class='mediaHolder'><img src='/feeds_images/" + data.newFeedsList[i].media_name + "'  class='exactPostImage' alt='Image not avaliable, report to technical team'></div>       <p><span class='wrapper my-absolute'><span class='my-button'> <span class='send-icon like-icon fa fa-heart likes_icon_" + data.newFeedsList[i].thisFeedId+"' id='" + data.newFeedsList[i].thisFeedId + "'></span></span></span><sup class='likesNumber pointer' id='likes_" + data.newFeedsList[i].thisFeedId + "'>(<span class='like_value'>" + data.newFeedsList[i].numberOfLikes + "</span>)</sup>  &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.newFeedsList[i].thisFeedId + "'>(" + data.newFeedsList[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp; <span class='keepNotificationType' id='1'></span> <textarea placeholder='Enter your comment here...' class='form-control feedCommentInput' style='border-radius: 25px; margin-top: .6%;height: 40px'></textarea> <i id='" + data.newFeedsList[i].thisFeedId + "' class='postCommentButton fa fa-send pointer'></i> </p></div>                  </div></div><div class='col-md-3'></div></div><div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                    }
                                                    else if (data.newFeedsList[i].story_type == 2)
                                                    {
                                                        //TEXT FEED
                                                        $(".feedsWillGoHere").prepend("<div class='row'  id='feed_" + data.newFeedsList[i].thisFeedId + "'><div class='col-md-3'></div><div class='col-md-6 w3-card'><div class='containFeed' id='" + data.newFeedsList[i].thisFeedId + "_feedEndBox'>          <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.newFeedsList[i].user_last_name + " " + data.newFeedsList[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.newFeedsList[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.newFeedsList[i].date_created).format('H:mm A | Do MMM') + "</span></div><div class='w3-row' style='padding-top: 1%;'><p>" + data.newFeedsList[i].feed_postcontent + "</p></div>     <p> <span class='wrapper my-absolute'><span class='my-button'> <span class='send-icon like-icon fa fa-heart likes_icon_" + data.newFeedsList[i].thisFeedId+"' id='" + data.newFeedsList[i].thisFeedId + "'></span></span></span><sup class='likesNumber pointer' id='likes_" + data.newFeedsList[i].thisFeedId + "'>(<span class='like_value'>" + data.newFeedsList[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.newFeedsList[i].thisFeedId + "'>(" + data.newFeedsList[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>    &nbsp; &nbsp; <span class='keepNotificationType' id='2'></span> <textarea placeholder='Enter your comment here...' class='form-control feedCommentInput' style='border-radius: 25px; margin-top: .6%;height: 40px'></textarea> <i id='" + data.newFeedsList[i].thisFeedId + "' class='postCommentButton fa fa-send pointer'></i></p>                   </div></div><div class='col-md-3'></div></div><div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                    }
                                                    else if (data.newFeedsList[i].story_type == 3)
                                                    {
                                                        //VIDEO FEED
                                                        if (data.newFeedsList[i].caption_content == null)
                                                        {
                                                            data.newFeedsList[i].caption_content = "";
                                                        }
                                                        $(".feedsWillGoHere").prepend("<div class='row' id='feed_" + data.newFeedsList[i].thisFeedId + "'><div class='col-md-3'></div><div class='col-md-6 w3-card'><div class='containFeed' id='" + data.newFeedsList[i].thisFeedId + "_feedEndBox'>           <div class='w3-row PostHeader'>  <div  class='w3-col' style='position: relative;'> <span class='fontWeight700'>" + data.newFeedsList[i].user_last_name + " " + data.newFeedsList[i].user_first_name + "</span> <small class='pointer' style='color: #fc8a9e; text-decoration-line: underline !important;'><i class='fa fa-at'></i>" + lowerFirstLetter(data.newFeedsList[i].msg_user_name) + "</small>   </div><span  class='w3-right'> " + moment(data.newFeedsList[i].date_created).format('H:mm A | Do MMM') + "</span></div>            <div class='w3-row' style='padding-top: 1%;'><p>" + data.newFeedsList[i].caption_content + "</p> <div class='videoOnFeedsContainer'><video src='/feeds_video/" + data.newFeedsList[i].media_name + "'  style='width: 587px !important; height: auto; margin-bottom: 0px;' class='exactVideoFeed' id='" + data.newFeedsList[i].thisFeedId + "'> Your browser does not support HTML5 video. </video>          <span class='dragOnVideoContainer mYPink-color' style='font-style: italic;'><img src='/img/logo.png' width='80px;'><br><i class='fa fa-at'></i>" + lowerFirstLetter(data.newFeedsList[i].msg_user_name) + "</span></div>        <p><span class='wrapper my-absolute'><span class='my-button'> <span class='send-icon like-icon fa fa-heart likes_icon_" + data.newFeedsList[i].thisFeedId+"' id='" + data.newFeedsList[i].thisFeedId + "'></span></span></span><sup class='likesNumber pointer' id='likes_" + data.newFeedsList[i].thisFeedId + "'>(<span class='like_value'>" + data.newFeedsList[i].numberOfLikes + "</span>)</sup> &nbsp; &nbsp; <i style='font-size: 150%;' class='fa fa-comments-o toggleFeedCommentClass' aria-hidden='true'></i> <sup class='numberOfComments pointer' id='numberOfComments_" + data.newFeedsList[i].thisFeedId + "'>(" + data.newFeedsList[i].numberOfComments + ")</sup> &nbsp; &nbsp; <i style='font-size: 120%;' class='glyphicon glyphicon-tags showTagsForFeed' aria-hidden='true'></i>  &nbsp; &nbsp;<span class='showViewers w3-right pointer'><span class='numberOfViews pointer' id='numberOfViewsId_"+data.postsListResults[i].thisFeedId+"'>" + data.newFeedsList[i].numberOfViews + "</span> Views </span><span class='keepNotificationType' id='3'></span> <textarea placeholder='Enter your comment here...' class='form-control feedCommentInput' style='border-radius: 25px; margin-top: .6%;height: 40px'></textarea> <i id='" + data.newFeedsList[i].thisFeedId + "' class='postCommentButton fa fa-send pointer'></i> </p>                   </div></div><div class='col-md-3'></div></div><div class='row'><div class='col-md-3'></div><div class='col-md-6'><hr class='new1'></div><div class='col-md-3'></div></div>");
                                                    }
                                                    if (data.newFeedsList[i].checkIfLiked > 0)
                                                    {
                                                       $(".likes_icon_" + data.postsListResults[i].thisFeedId).css("color", "#fc8a9e");
                                                    }
                                                }
                                                //HANDLE LIKING OF VIDEO
                                                $( ".my-button" ).on( "click", function() 
                                                {
                                                    var thisId = $(this).find(".like-icon").attr('id');
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/likeFeed",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            feedIdLiking: thisId
                                                        },
                                                        success: function(response)
                                                        {
                                                            // $(this).prop("disabled",false);
                                                            function isObject(obj)
                                                            {
                                                                return obj != null && obj.constructor.name === "Object"
                                                            }
                                                            if (response.message == 'liked')
                                                            {
                                                                // $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                                $("#likes_" + thisId).children('.like_value').text(numberN + 1);
                                                                //update other who liked same photo
                                                                socket.emit('updateFeedLiked',
                                                                {
                                                                    userLiked: uid,
                                                                    thisId: thisId,
                                                                    ownerId : response.feedsOwnerId
                                                                });
                                                            }
                                                            else if (response.message == 'like_deleted')
                                                            {
                                                                // $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#686868");
                                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                                $("#likes_" + thisId).children('.like_value').text(numberN - 1);




                                                                socket.emit('updateFeedUnliked',
                                                                {
                                                                    userLiked: uid,
                                                                    thisId: thisId,
                                                                    ownerId : response.feedsOwnerId
                                                                });

                                                            }
                                                            else if (response == 'error')
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some problem occured, maybe the post is no longer existing",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Some problem occured, check internet connection.",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                    if($(this).find("span").css("color") == "rgb(104, 104, 104)")
                                                    {

                                                      elSpan = this.querySelector('span')
                                                      aniPos = findCenter($(this));
                                                      myAnimation1.tune({ top: aniPos.y, left: aniPos.x });
                                                      myAnimation2.tune({ top: aniPos.y, left: aniPos.x });
                                                      myTimeline.replay();

                                                      new mojs.Tween({
                                                            duration : 900,
                                                            onUpdate: function(progress) {
                                                                if(progress > 0.3) {
                                                                    var scaleProgress = scaleCurve(progress);
                                                                    elSpan.style.WebkitTransform = elSpan.style.transform = 'scale3d(' + scaleProgress + ',' + scaleProgress + ',1)';
                                                                    elSpan.style.WebkitTransform = elSpan.style.color = '#fc8a9e';
                                                                } else {
                                                                    elSpan.style.WebkitTransform = elSpan.style.transform = 'scale3d(0,0,1)';
                                                                    elSpan.style.WebkitTransform = elSpan.style.color = 'rgba(0,0,0,0.3)';
                                                                }
                                                            }
                                                        }).play();
                                                    }
                                                    else
                                                    {
                                                        $(this).find("span").css("color","rgb(104, 104, 104)");
                                                    }
                                                }); 
                                                //HANCLE SENDING COMMENT
                                                $('.postCommentButton').click(function()
                                                {
                                                    var theCommentContent = $(this).parent().siblings('.feedCommentInput').val();
                                                    $(this).parent().siblings('.feedCommentInput').val("");
                                                    var thisFeedId = $(this).attr('id');
                                                    if(theCommentContent == "" || theCommentContent == null)
                                                    {
                                                        return;
                                                    }
                                                    else
                                                    {
                                           
                                                        $.ajax(
                                                        {
                                                            url: "/feeds/sendFeedComment",
                                                            method: "POST",
                                                            data:
                                                            {
                                                                theCommentContent: theCommentContent,
                                                                thisFeedId: thisFeedId
                                                            },
                                                            success: function(response)
                                                            {
                                                                function isObject(obj)
                                                                {
                                                                    return obj != null && obj.constructor.name === "Object"
                                                                }
                                                                if (isObject(response))
                                                                {
                                                                    //REMOVE FEED OWNER FROM NORMAL COMMENTERS
                                                                    //TELL OTHER USERS THAT                     
                                                                    var removeOwnerFromNotifyAboutNewComment = new Promise(function(resolve, reject) 
                                                                    {
                                                                        var indexOfFeedOwner = response.usersToNotify.indexOf(response.thisOwnerId);
                                                                        if(indexOfFeedOwner > -1)
                                                                        {
                                                                            response.usersToNotify.splice(indexOfFeedOwner, 1);
                                                                        }
                                                                        resolve(response.usersToNotify);
                                                                    });

                                                                    removeOwnerFromNotifyAboutNewComment.then(function(data) 
                                                                    {
                                                                        socket.emit('tellOtherCommentersOnFeed', 
                                                                        {
                                                                            usersToNotifyIds : data,
                                                                            commentId: response.commentId,
                                                                            thisFeedId : thisFeedId,
                                                                            commenter : response.commenter_id
                                                                        });
                                                                    });

                                                                    if(response.thisOwnerId != response.commenter_id)
                                                                    {
                                                                        socket.emit('someoneCommentedOnYourfeed', 
                                                                        {
                                                                            thisOwnerId : response.thisOwnerId,
                                                                            commenter_id : response.commenter_id,
                                                                            commentId: response.commentId,
                                                                            thisFeedId : thisFeedId
                                                                        });
                                                                    }

                                                                    var numberN = parseInt($("#numberOfComments_" + thisFeedId).text().replace('(', '').replace(')', ''));
                                                                    $("#numberOfComments_" + thisFeedId).text(numberN + 1);
                                                                    //id='numberOfComments_"+data.newFeedsList[i].thisFeedId+"'
                                                                }
                                                                
                                                            },
                                                            error: function(data)
                                                            {
                                                                bootbox.alert(
                                                                {
                                                                    message: "Some problem occured, check internet connection.",
                                                                    className: 'rubberBand animated',
                                                                    size: 'large'
                                                                });
                                                            }
                                                        });
                                                    }
                                                });
                                                //FETCH COMMENTS
                                                var thefeedToHoldItsIdForComment;
                                                $('.toggleFeedCommentClass').click(function(e)
                                                {
                                                    var thisFeedId = $(this).siblings('.likesNumber').attr('id').replace(/likes_/g, "");
                                                    thefeedToHoldItsIdForComment = thisFeedId;
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/getFeedComments",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            thisFeedId: thisFeedId
                                                        },
                                                        success: function(response)
                                                        {
                                                            if (response === 'empty')
                                                            {
                                                                return;
                                                            }
                                                            else
                                                            {
                                                                //console.log(response.comments);
                                                                $('.comentsPlace').html("");
                                                                $('#' + thisFeedId + "_feedEndBox").append("<div id='commentsForThisFeed_" + thisFeedId + "' class='comentsPlace'></div>");
                                                                for (var i = 0; i < response.comments.length; i++)
                                                                {
                                                                    $('#commentsForThisFeed_' + thisFeedId).append("<div class=''><h5 class='mYBlue-color'>" + response.comments[i].user_first_name + " " + response.comments[i].user_last_name + " <small>@" + response.comments[i].msg_user_name + " (" + moment(response.comments[i].date_commented).format('H:mm A | Do MMM') + ")</small><h5><p style='padding-left: 4%;'>" + response.comments[i].comment_content + "</p></div>");
                                                                }
                                                            }
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Some problem occured, check internet connection.",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                })
                                                //SHOW TAGS
                                                $('.showTagsForFeed').click(function(e)
                                                {
                                                    var thisFeed_id = $(this).siblings('.likeFeedClass').attr('id');
                                                    var notificationType = $(this).siblings('.keepNotificationType').attr('id');
                                                    $.ajax(
                                                    {
                                                        url: "/feeds/getFriendsToTag",
                                                        method: "POST",
                                                        data:
                                                        {
                                                            thisFeedId: thisFeed_id
                                                        },
                                                        success: function(data)
                                                        {
                                                            if (data === 'empty')
                                                            {
                                                                return;
                                                            }
                                                            else
                                                            {
                                                                var results = "";
                                                                data.tagFriendsList.forEach(function(element)
                                                                {
                                                                    results = results + "<h5 class='pointer friend' id='" + element.msg_user_id + "'>" + element.user_first_name + " " + element.user_last_name + "<small>@" + element.msg_user_name + "</small></h5>";
                                                                });
                                                            }
                                                            var dialog = bootbox.dialog(
                                                            {
                                                                title: '<h2><b>Tag a friend</b></h2>',
                                                                message: results,
                                                            });
                                                            $('.friend').click(function()
                                                            {
                                                                //alert("taged"+);
                                                                //var 
                                                                $.ajax(
                                                                {
                                                                    url: "/feeds/tagFriend",
                                                                    method: "POST",
                                                                    data:
                                                                    {
                                                                        thisFeedId: thisFeed_id,
                                                                        notificationType: notificationType,
                                                                        friendId: $(this).attr('id')
                                                                    },
                                                                    success: function(data)
                                                                    {
                                                                        if (data == 'error')
                                                                        {
                                                                            bootbox.alert(
                                                                            {
                                                                                message: "Request could not be completed, retry",
                                                                                className: 'rubberBand animated',
                                                                                size: 'large'
                                                                            });
                                                                        }
                                                                    },
                                                                    error: function(data)
                                                                    {
                                                                        bootbox.alert(
                                                                        {
                                                                            message: "Request could not be completed, retry",
                                                                            className: 'rubberBand animated',
                                                                            size: 'large'
                                                                        });
                                                                    }
                                                                })
                                                            })
                                                        },
                                                        error: function(data)
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Request could not be completed, retry",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                    });
                                                });
                                            }
                                        },
                                        error: function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Some error occured, check internet connection try again",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                    });
                                });
                                $( ".my-button" ).on( "click", function() 
                                {
                                    // $(this).off('click'); 
                                    // $(this).prop("disabled",true);
                                    var thisId = $(this).find(".like-icon").attr('id');
                                    $.ajax(
                                    {
                                        url: "/feeds/likeFeed",
                                        method: "POST",
                                        data:
                                        {
                                            feedIdLiking: thisId
                                        },
                                        success: function(response)
                                        {
                                            // $(this).prop("disabled",false);
                                            function isObject(obj)
                                            {
                                                return obj != null && obj.constructor.name === "Object"
                                            }
                                            if (response.message == 'liked')
                                            {
                                                // $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#fc8a9e");
                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                $("#likes_" + thisId).children('.like_value').text(numberN + 1);
                                                //update other who liked same photo
                                                socket.emit('updateFeedLiked',
                                                {
                                                    userLiked: uid,
                                                    thisId: thisId,
                                                    ownerId : response.feedsOwnerId
                                                });
                                            }
                                            else if (response.message == 'like_deleted')
                                            {
                                                // $("#likes_" + thisId).siblings('.likeFeedClass').css("color", "#686868");
                                                var numberN = parseInt($("#likes_" + thisId).children('.like_value').text());
                                                $("#likes_" + thisId).children('.like_value').text(numberN - 1);




                                                socket.emit('updateFeedUnliked',
                                                {
                                                    userLiked: uid,
                                                    thisId: thisId,
                                                    ownerId : response.feedsOwnerId
                                                });

                                            }
                                            else if (response == 'error')
                                            {
                                                bootbox.alert(
                                                {
                                                    message: "Some problem occured, maybe the post is no longer existing",
                                                    className: 'rubberBand animated',
                                                    size: 'large'
                                                });
                                            }
                                        },
                                        error: function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Some problem occured, check internet connection.",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                    });
                                    if($(this).find("span").css("color") == "rgb(104, 104, 104)")
                                    {

                                      elSpan = this.querySelector('span')
                                      aniPos = findCenter($(this));
                                      myAnimation1.tune({ top: aniPos.y, left: aniPos.x });
                                      myAnimation2.tune({ top: aniPos.y, left: aniPos.x });
                                      myTimeline.replay();

                                      new mojs.Tween({
                                            duration : 900,
                                            onUpdate: function(progress) {
                                                if(progress > 0.3) {
                                                    var scaleProgress = scaleCurve(progress);
                                                    elSpan.style.WebkitTransform = elSpan.style.transform = 'scale3d(' + scaleProgress + ',' + scaleProgress + ',1)';
                                                    elSpan.style.WebkitTransform = elSpan.style.color = '#fc8a9e';
                                                } else {
                                                    elSpan.style.WebkitTransform = elSpan.style.transform = 'scale3d(0,0,1)';
                                                    elSpan.style.WebkitTransform = elSpan.style.color = 'rgba(0,0,0,0.3)';
                                                }
                                            }
                                        }).play();
                                    }
                                    else
                                    {
                                        $(this).find("span").css("color","rgb(104, 104, 104)");
                                    }
                                });                             
                               
                                //HANCLE SENDING COMMENT
                                $('.postCommentButton').click(function()
                                {
                                    var theCommentContent = $(this).parent().siblings('.feedCommentInput').val();
                                    $(this).parent().siblings('.feedCommentInput').val("");
                                    var thisFeedId = $(this).attr('id');

                                    if(theCommentContent == "" || theCommentContent == null)
                                    {
                                        return;
                                    }
                                    else
                                    {
                                        $.ajax(
                                        {
                                            url: "/feeds/sendFeedComment",
                                            method: "POST",
                                            data:
                                            {
                                                theCommentContent: theCommentContent,
                                                thisFeedId: thisFeedId
                                            },
                                            success: function(response)
                                            {
                                                //  console.log(response);
                                                function isObject(obj)
                                                {
                                                    return obj != null && obj.constructor.name === "Object"
                                                }
                                                if (isObject(response))
                                                {
                                                    
                                                    //REMOVE FEED OWNER FROM NORMAL COMMENTERS
                                                    //TELL OTHER USERS THAT                     
                                                    var removeOwnerFromNotifyAboutNewComment = new Promise(function(resolve, reject) 
                                                    {
                                                        var indexOfFeedOwner = response.usersToNotify.indexOf(response.thisOwnerId);
                                                        if(indexOfFeedOwner > -1)
                                                        {
                                                            response.usersToNotify.splice(indexOfFeedOwner, 1);
                                                        }
                                                        resolve(response.usersToNotify);
                                                    });

                                                    removeOwnerFromNotifyAboutNewComment.then(function(data) 
                                                    {
                                                        socket.emit('tellOtherCommentersOnFeed', 
                                                        {
                                                            usersToNotifyIds : data,
                                                            commentId: response.commentId,
                                                            thisFeedId : thisFeedId,
                                                            commenter : response.commenter_id
                                                        });
                                                    });

                                                    if(response.thisOwnerId != response.commenter_id)
                                                    {
                                                        socket.emit('someoneCommentedOnYourfeed', 
                                                        {
                                                            thisOwnerId : response.thisOwnerId,
                                                            commenter_id : response.commenter_id,
                                                            commentId: response.commentId,
                                                            thisFeedId : thisFeedId
                                                        });
                                                    }

                                                    var numberN = parseInt($("#numberOfComments_" + thisFeedId).text().replace('(', '').replace(')', ''));
                                                    $("#numberOfComments_" + thisFeedId).text(numberN + 1);
                                                    //id='numberOfComments_"+data.newFeedsList[i].thisFeedId+"'
                                                }
                                                $(this).siblings('.feedCommentInput').val("");
                                            },
                                            error: function(data)
                                            {
                                                bootbox.alert(
                                                {
                                                    message: "Some problem occured, check internet connection.",
                                                    className: 'rubberBand animated',
                                                    size: 'large'
                                                });
                                            }
                                        });
                                    }
                                });
                                //FETCH COMMENTS
                                var thefeedToHoldItsIdForComment;
                                $('.toggleFeedCommentClass').click(function(e)
                                {
                                    var thisFeedId = $(this).siblings('.likesNumber').attr('id').replace(/likes_/g, "");
                                    //adding nicescoll
                                    $(".theFeedCommentsPlace").niceScroll(
                                    {
                                        cursorcolor: "#2c74a0",
                                        cursorwidth: "9px",
                                        cursorborderradius: "5px", 
                                        cursorminheight: 32, // set the minimum cursor height (pixel)
                                        cursorfixedheight: 40,
                                        autohidemode: false, // only cursor hidden
                                        horizrailenabled: false
                                    });

                                    //fecth comments
                                    $.ajax(
                                    {
                                        url: "/feeds/getFeedComments",
                                        method: "POST",
                                        data:
                                        {
                                            thisFeedId: thisFeedId
                                        },
                                        success: function(response)
                                        {
                                            if (response === 'empty')
                                            {
                                                return;
                                            }
                                            else
                                            {
                                                //console.log(response.comments);
                                                $('#commentsHolder_'+ thisFeedId).html("");


                                                for (var i = 0; i < response.comments.length; i++)
                                                {
                                                    $('#commentsHolder_'+ thisFeedId).append("<div class='row'> <div class='col-sm-5'> <h5 class=''>" + response.comments[i].user_first_name + " " + response.comments[i].user_last_name + " <small class='pointer my-pink-2'>@" + lowerFirstLetter(response.comments[i].user_last_name) + "</small><h5> <p class='commentTimeParagraph'><small>On " + moment(response.comments[i].date_commented).format('H:mm A | Do MMM') + "</small></p> </div> <div class='col-sm-7'> <div class='commentContentPlace'> <p> " + response.comments[i].comment_content + " </p> </div> <hr class='new2'><div> </div>");
                                                }
                                            }
                                        },
                                        error: function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Some problem occured, check internet connection.",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                    });
                                })
                                //SHOW TAGS
                                $('.showTagsForFeed').click(function(e)
                                {
                                    var thisFeed_id = $(this).siblings('.likeFeedClass').attr('id');
                                    var notificationType = $(this).siblings('.keepNotificationType').attr('id');
                                    $.ajax(
                                    {
                                        url: "/feeds/getFriendsToTag",
                                        method: "POST",
                                        data:
                                        {
                                            thisFeedId: thisFeed_id
                                        },
                                        success: function(data)
                                        {
                                            if (data === 'empty')
                                            {
                                                return;
                                            }
                                            else
                                            {
                                                var results = "";
                                                data.tagFriendsList.forEach(function(element)
                                                {
                                                    results = results + "<h5 class='pointer friend' id='" + element.msg_user_id + "'>" + element.user_first_name + " " + element.user_last_name + "<small>@" + element.msg_user_name + "</small></h5>";
                                                });
                                            }
                                            var dialog = bootbox.dialog(
                                            {
                                                title: '<h2><b>Tag a friend</b></h2>',
                                                message: results,
                                            });
                                            $('.friend').click(function()
                                            {
                                                var thisFriendId = $(this).attr('id');
                                                $.ajax(
                                                {
                                                    url: "/feeds/tagFriend",
                                                    method: "POST",
                                                    data:
                                                    {
                                                        thisFeedId: thisFeed_id,
                                                        notificationType: notificationType,
                                                        friendId: $(this).attr('id')
                                                    },
                                                    success: function(data)
                                                    {
                                                        if (data == 'success')
                                                        {
                                                            //send socekt tell user that they are tagged
                                                            socket.emit('youAreTaggedNotifier',
                                                            {
                                                                personTagged: thisFriendId,
                                                                tagger: uid,
                                                                thisFeedId: thisFeed_id
                                                            });
                                                        }
                                                        else if (data == 'error')
                                                        {
                                                            bootbox.alert(
                                                            {
                                                                message: "Request could not be completed, retry",
                                                                className: 'rubberBand animated',
                                                                size: 'large'
                                                            });
                                                        }
                                                        else if (data == 'already_tagged')
                                                        {
                                                            return;
                                                        }
                                                    },
                                                    error: function(data)
                                                    {
                                                        bootbox.alert(
                                                        {
                                                            message: "Request could not be completed, retry",
                                                            className: 'rubberBand animated',
                                                            size: 'large'
                                                        });
                                                    }
                                                })
                                            })
                                        },
                                        error: function(data)
                                        {
                                            bootbox.alert(
                                            {
                                                message: "Request could not be completed, retry",
                                                className: 'rubberBand animated',
                                                size: 'large'
                                            });
                                        }
                                    });
                                });
                            }
                        },
                        error: function(data)
                        {
                            alert("Check network connectivity.");
                        }
                    });
                });           
            });
            //INITIALIZE JSON FOR SECRETS
            var objSecretMessages = [
            {
                "sender": "1",
                "recipient": "1",
                "messageContent": "AF",
                "dateTime": "14: 56"
            }];
            //decode string to accommadte deleted texts
            function decodeString(message)
            {
                var stripped = message.replace(/uGY8AAAbbb/g, '\<span style=\'font-family : Monospace; color: #fc8a9e;\'>');
                stripped = stripped.replace(/uGY8AAAccc/g, '<\/span>');
                return stripped;
            }
            //decode string to accommadte deleted texts
            function decodeForwadedString(message)
            {
                //var message = "uGY8AAAdddForwarded: eITA BOSSuGY8AAAeee";
                // var stripped = message.replace(/uGY8AAAddd/g, '\<span style=\'font-style: italic; color: #A0A0A0;\'>');
                // stripped = stripped.replace(/uGY8AAAeee/g, '<\/span>');
                return message;
            }
            if($('.logedInUserId').text() != null)
            {
                uid = $('.logedInUserId').text();
            }
            $(".showModalForSearchingUser").click(function()
            {
                $(".chatHistory").getNiceScroll().hide()

                $(".chatMessagesBox").getNiceScroll().hide();
                $(".theScrollH").getNiceScroll().hide();

                $(".mainDiv").hide(function()
                {
                    $('.SearchUserModal').show();
                    //clicking handler for new
                    $(".searchUser").keyup(function(e)
                    {
                        var keyword = $(this).val();
                        $('.searchUserResults').empty();

                        if (keyword.length <  2)
                        {
                            $('.searchUserResults').text("");
                        }
                        else
                        {
                            $.ajax(
                            {
                                url: "/user/searchUser",
                                method: "POST",
                                data:
                                {
                                    userToSearch: keyword
                                },
                                success: function(response)
                                {
                                    if (response.result == 'no one')
                                    {
                                        return false;
                                    }
                                    else if (response.result.length > 0)
                                    {
                                        //console.log(response.result)
                                        $('.searchUserResults').empty();
                                        for (var i = 0; i < response.result.length; i++)
                                        {
                                            $('.searchUserResults').append("<li class='friend friendOnSearchResults pointer' id='" + response.result[i].msg_user_id + "'>" + response.result[i].user_last_name + " " + response.result[i].user_first_name + "<small>(@" + response.result[i].msg_user_name + ")</small><span class='w3-right'>  <i class='fa fa-user fa-2x'></i></span></li>");
                                        }
                                        $('.friend').click(function()
                                        {
                                            $('.searchUserResults').empty();
                                            $(".chatHistory").getNiceScroll().show();
                                            $(".chatMessagesBox").scrollTop($(".chatMessagesBox")[0].scrollHeight);
                                            $(".goToHomeChat").click(function()
                                            {
                                                callCloser();
                                            });
                                            $(".mainDiv").show();
                                            $('.SearchUserModal').hide();
                                            var userId = $(this).attr('id');
                                            startChatWith(userId);
                                        });
                                    }
                                },
                                error: function(data) {}
                            });
                        }
                    });
                });
            });
            //CLOSE MODAL 
            $('.closeSearchUserModal').click(function()
            {
                $(".mainDiv").show();
                $('.SearchUserModal').hide();
                $(".searchUser").val("");
                $('.searchUserResults').text("");
                $(".chatHistory").getNiceScroll().show();
            });
            makeCallMethod = function(id)
            {
                $('.chatBox, .profileDiv').hide();
                $('.callDiv').show();
                var isChannelReady = false;
                var isInitiator = false;
                var isStarted = false;
                var localStream;
                var pc;
                var remoteStream;
                var turnReady;
                var pcConfig = {
                    'iceServers': [
                    {
                        'urls': 'stun:stun.l.google.com:19302'
                    }]
                };
                // Set up audio and video regardless of what devices are present.
                var sdpConstraints = {
                    offerToReceiveAudio: true,
                    offerToReceiveVideo: true
                };
                /////////////////////////////////////////////
                var room = friendId + uid;
                // Could prompt for room name:
                // room = prompt('Enter room name:');
                // var socket = io.connect();
                if (room !== '')
                {
                    socket.emit('create or join', room);
                    console.log('Attempted to create or  join room', room);
                }
                socket.on('created', function(room)
                {
                    console.log('Created room ' + room);
                    isInitiator = true;
                });
                socket.on('full', function(room)
                {
                    console.log('Room ' + room + ' is full');
                });
                socket.on('join', function(room)
                {
                    console.log('Another peer made a request to join room ' + room);
                    console.log('This peer is the initiator of room ' + room + '!');
                    isChannelReady = true;
                });
                socket.on('joined', function(room)
                {
                    console.log('joined: ' + room);
                    isChannelReady = true;
                });
                socket.on('log', function(array)
                {
                    console.log.apply(console, array);
                });
                ////////////////////////////////////////////////
                function sendMessage(message)
                {
                    console.log('Client sending message: ', message);
                    socket.emit('message', message);
                }
                // This client receives a message
                socket.on('message', function(message)
                {
                    console.log('Client received message:', message);
                    if (message === 'got user media')
                    {
                        maybeStart();
                    }
                    else if (message.type === 'offer')
                    {
                        if (!isInitiator && !isStarted)
                        {
                            maybeStart();
                        }
                        pc.setRemoteDescription(new RTCSessionDescription(message));
                        doAnswer();
                    }
                    else if (message.type === 'answer' && isStarted)
                    {
                        pc.setRemoteDescription(new RTCSessionDescription(message));
                    }
                    else if (message.type === 'candidate' && isStarted)
                    {
                        var candidate = new RTCIceCandidate(
                        {
                            sdpMLineIndex: message.label,
                            candidate: message.candidate
                        });
                        pc.addIceCandidate(candidate);
                    }
                    else if (message === 'bye' && isStarted)
                    {
                        handleRemoteHangup();
                    }
                });
                ////////////////////////////////////////////////////
                var localVideo = document.querySelector('#localVideo');
                var remoteVideo = document.querySelector('#remoteVideo');
                navigator.mediaDevices.getUserMedia(
                    {
                        audio: true,
                        video: true
                    })
                    .then(gotStream)
                    .catch(function(e)
                    {
                        alert('getUserMedia() error: ' + e.name);
                    });

                function gotStream(stream)
                {
                    console.log('Adding local stream.');
                    localStream = stream;
                    localVideo.srcObject = stream;
                    sendMessage('got user media');
                    if (isInitiator)
                    {
                        maybeStart();
                    }
                    socket.emit('sendCallRequestSockets',
                    {
                        callReciepient: friendId,
                        caller: uid,
                        room: room
                    });
                }
                var constraints = {
                    video: true
                };
                console.log('Getting user media with constraints', constraints);
                if (location.hostname !== 'localhost')
                {
                    requestTurn(
                        'https://networktraversal.googleapis.com/v1alpha/iceconfig?key=AIzaSyARF6xu5eZUJmsFqT_aCRZIgdV5BiCavYU'
                    );
                }

                function maybeStart()
                {
                    console.log('>>>>>>> maybeStart() ', isStarted, localStream, isChannelReady);
                    if (!isStarted && typeof localStream !== 'undefined' && isChannelReady)
                    {
                        console.log('>>>>>> creating peer connection');
                        createPeerConnection();
                        pc.addStream(localStream);
                        isStarted = true;
                        console.log('isInitiator', isInitiator);
                        if (isInitiator)
                        {
                            doCall();
                        }
                    }
                }
                window.onbeforeunload = function()
                {
                    sendMessage('bye');
                };
                /////////////////////////////////////////////////////////
                function createPeerConnection()
                {
                    try
                    {
                        pc = new RTCPeerConnection(null);
                        pc.onicecandidate = handleIceCandidate;
                        pc.onaddstream = handleRemoteStreamAdded;
                        pc.onremovestream = handleRemoteStreamRemoved;
                        console.log('Created RTCPeerConnnection');
                    }
                    catch (e)
                    {
                        console.log('Failed to create PeerConnection, exception: ' + e.message);
                        alert('Cannot create RTCPeerConnection object.');
                        return;
                    }
                }

                function handleIceCandidate(event)
                {
                    console.log('icecandidate event: ', event);
                    if (event.candidate)
                    {
                        sendMessage(
                        {
                            type: 'candidate',
                            label: event.candidate.sdpMLineIndex,
                            id: event.candidate.sdpMid,
                            candidate: event.candidate.candidate
                        });
                    }
                    else
                    {
                        console.log('End of candidates.');
                    }
                }

                function handleCreateOfferError(event)
                {
                    console.log('createOffer() error: ', event);
                }

                function doCall()
                {
                    console.log('Sending offer to peer');
                    pc.createOffer(setLocalAndSendMessage, handleCreateOfferError);
                }

                function doAnswer()
                {
                    console.log('Sending answer to peer.');
                    pc.createAnswer().then(
                        setLocalAndSendMessage,
                        onCreateSessionDescriptionError
                    );
                }

                function setLocalAndSendMessage(sessionDescription)
                {
                    pc.setLocalDescription(sessionDescription);
                    console.log('setLocalAndSendMessage sending message', sessionDescription);
                    sendMessage(sessionDescription);
                }

                function onCreateSessionDescriptionError(error)
                {
                    trace('Failed to create session description: ' + error.toString());
                }

                function requestTurn(turnURL)
                {
                    var turnExists = false;
                    for (var i in pcConfig.iceServers)
                    {
                        if (pcConfig.iceServers[i].urls.substr(0, 5) === 'turn:')
                        {
                            turnExists = true;
                            turnReady = true;
                            break;
                        }
                    }
                    if (!turnExists)
                    {
                        console.log('Getting TURN server from ', turnURL);
                        // No TURN server. Get one from computeengineondemand.appspot.com:
                        var xhr = new XMLHttpRequest();
                        xhr.onreadystatechange = function()
                        {
                            if (xhr.readyState === 4 && xhr.status === 200)
                            {
                                var turnServer = JSON.parse(xhr.responseText);
                                console.log('Got TURN server: ', turnServer);
                                pcConfig.iceServers.push(
                                {
                                    'urls': 'turn:' + turnServer.username + '@' + turnServer.turn,
                                    'credential': turnServer.password
                                });
                                turnReady = true;
                            }
                        };
                        xhr.open('GET', turnURL, true);
                        xhr.send();
                    }
                }

                function handleRemoteStreamAdded(event)
                {
                    console.log('Remote stream added.');
                    remoteStream = event.stream;
                    remoteVideo.srcObject = remoteStream;
                }

                function handleRemoteStreamRemoved(event)
                {
                    console.log('Remote stream removed. Event: ', event);
                }

                function hangup()
                {
                    console.log('Hanging up.');
                    stop();
                    sendMessage('bye');
                }

                function handleRemoteHangup()
                {
                    console.log('Session terminated.');
                    stop();
                    isInitiator = false;
                }

                function stop()
                {
                    isStarted = false;
                    pc.close();
                    pc = null;
                }
            };
            // UPLOAD STARTS
            $image_crop = $('#image_demo').croppie(
            {
                enableExif: true,
                viewport:
                {
                    width: 200,
                    height: 200,
                    type: 'square' //circle
                },
                boundary:
                {
                    width: 300,
                    height: 300
                }
            });
            $('#upload_image').on('change', function(e)
            {
                e.stopPropagation();
                var reader = new FileReader();
                reader.onload = function(event)
                {
                    $image_crop.croppie('bind',
                    {
                        url: event.target.result
                    }).then(function() {});
                }
                reader.readAsDataURL(this.files[0]);
                $('#uploadimageModal').modal('show');                
            });
            $('.crop_image').click(function(event)
            {
                $image_crop.croppie('result',
                {
                    type: 'canvas',
                    size: 'viewport'
                }).then(function(response)
                {
                    $.ajax(
                    {
                        url: "/user/updateProfilePicture",
                        type: "POST",
                        data:
                        {
                            image: response
                        },
                        success: function(data)
                        {
                            $('#uploadimageModal').modal('hide');
                            if (data != "fail")
                            {
                                socket.emit('updateProfilePicture',
                                {
                                    profilePictureSetter: uid,
                                    base64Data: data
                                });
                                //update images for profile
                                $("#myProfilePicture").attr('src', response);
                                $(".profilePictureOnUserProfile").attr('src', response);                                    
                            }
                            else
                            { 
                                bootbox.alert("Some problem occured while trying to update profile picture, try again later.");
                            }
                        }
                    });
                })
            });
            /*UPLOAD END*/
            //FUNCTION TO RESET ACTIVITY
            function resetActivity()
            {
                clearTimeout(activityTimer);
                counterFOrActivity = 0;
                counterToAutomaticalyLogOut = 0;
                counterFOrActivityMethod();
                //SUBSCRIBE TO ONLINE USERS
                socket.emit('statusOnlineReset',
                {
                    userToUpdateItsActivity: uid
                });
            };
            //HANLDES INACTIVITY, GIVES OFFLINE AND AWAY
            function counterFOrActivityMethod()
            {
                counterFOrActivity++;
                counterToAutomaticalyLogOut++;
                if (counterFOrActivity > 90)
                {
                    counterFOrActivity = 1;
                    socket.emit('thisUserIsAway',
                    {
                        userId: uid
                    });
                }
                if (counterToAutomaticalyLogOut == 320)
                {
                    $(".logOut").click();
                }
                activityTimer = setTimeout(function()
                {
                    counterFOrActivityMethod();
                }, 1000);
            };
            //CALLS ACTIVITY COUNTER ON FIRST LOGIN
            counterFOrActivityMethod();
            //WHEN DISCONNECTS
            $(window).on('beforeunload', function()
            {
               // bootbox.alert("SECRET CHAT MESSAGES WILL BE LOST");
                socket.emit('thisUserLeft',
                {
                    id: uid
                });
            });
            socket.on('disconnect', function()
            {
                socket.emit('thisUserLeft',
                {
                    id: uid
                });
            });
            //SUBSCRIBE TO ONLINE USERS
            socket.emit('statusOnline',
            {
                userToUpdateItsActivity: uid
            });
            //HANDLER FOR CLICKING ON FRIEND FROM USER CHAT HISTORY
            $(".friend").click(function(e)
            {
                //GET USER ID 
                friendId = $(this).attr('id');
                $(".emojistabs").hide(); //if emojis tab was shown
                resetActivity();
                //CHECK IF THE LOGE IN USER WAS CHECKING ON ANY OTHER USER, IF TRUE CALL FUNCTION TO STOP THAT
                if (defaultCheckingId != 0)
                {
                    stopCheckingUp(defaultCheckingId);
                }
                defaultCheckingId = friendId; //SET DEFAULT CHECKING UP TO FRIEND CLICKED ON 
                startChatWith(friendId); //CALL METHOD HANDLING CHAT STARTING 
                $('.textNumber_' + friendId).html("");
            });
            //ATTACHEMENTS TOGGLER
            var sshowFileToSend = 0;
            var fileAttachmentHtml = $('.showInputButtonForAttachemnts').html();
            $('.showInputButtonForAttachemnts').click(function(e)
            {
                event.stopPropagation();
                if (sshowFileToSend == 0)
                {
                    $('.dd').delay(25).fadeIn();
                    $('.cc').delay(85).fadeIn();
                    $('.bb').delay(139).fadeIn();
                    $('.aa').delay(170).fadeIn();
                    sshowFileToSend = 1;
                    $('.showInputButtonForAttachemnts').html("<i class='fa fa-times fa-2x' style='color: #ff4dd2;'></i>");
                }
                else
                {
                    $('.aa').delay(25).fadeOut();
                    $('.bb').delay(85).fadeOut();
                    $('.cc').delay(139).fadeOut();
                    $('.dd').delay(170).fadeOut();
                    sshowFileToSend = 0;
                    $('.showInputButtonForAttachemnts').html(fileAttachmentHtml);
                }
            });
            //HANDLE EMOJIS SHOWING
            $(".btnShowEmos").click(function(e)
            {
                e.preventDefault();
                $('.emojionearea-button').click()
            });
            $(".closeEmos").click(function()
            {
                $(".emojistabs").hide();
            });
            //HANDLE CHAT METHOD
            var isTheFirstTimeChatting;
            startChatWith = function(id)
            {
                //checking if mobile device
                if(isMobile.any()) 
                {
                    $(".left-bar").hide();
                    $(".right-bar").show();
                    $(".right-bar").css({"width":"100%", "margin-left":"0px"});
                }

                $(".chatMessagesBox").getNiceScroll().show()
                $(".theScrollH").getNiceScroll().hide();
                $(".chatHistory").getNiceScroll().hide();

                if (defaultChatBox === 0)
                {
                    $(".chatBoxArea").hide();
                    $(".chatBox").show();
                    defaultChatBox = 1;
                }
                friendId = id;
                checkingUp(friendId);
                // to hanlde is typing with keypress time interval of 0-100 and stop is typing
                var timer = null;
                var wordCount;
                $('.buttonToSendMessage').click(function(e)
                {
                    var emojiElt = $("#textareaid").emojioneArea(
                    {
                        autocomplete: false
                    });
                    // Get text
                    var text = emojiElt.data("emojioneArea").getText();

                    // var text = $("#textareaid").data("emojioneArea").getText();

                    text = text.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&apos;").replace(/"/g, "&quot;");
                    
                    
                    // Get html
                    //var html = emojiElt.data("emojioneArea").editor.html()
                    if(text.trim() != '')
                    {
                        submitMessage(text, friendId, 0);
                        // Reset Emoji field 
                        emojiElt.data("emojioneArea").setText('');
                        return false;
                    }
                    else
                    {
                        return false;
                    }
                });
                //ADD EMOJIS
                $("#textareaid").emojioneArea(
                {
                    pickerPosition: "top",
                    tonesStyle: "bullet",
                    events:
                    {
                        keyup: function(editor, e)
                        {
                            e.preventDefault();
                            e.stopImmediatePropagation();
                            $(".emojistabs").hide(); //if emojis tab was shown
                            resetActivity();
                            var subject;
                            //for emojis
                            var emojiElt = $("#textareaid").emojioneArea(
                            {
                                autocomplete: false
                            });
                            // Get text
                            var text = emojiElt.data("emojioneArea").getText();
                            // Get html
                            var html = emojiElt.data("emojioneArea").editor.html();
                            if (e.keyCode == 13)
                            {
                                var forwardStatus = 0;
                                var emojiElt = $("#textareaid").emojioneArea(
                                {
                                    autocomplete: false
                                });
                                // Get text
                                var text = emojiElt.data("emojioneArea").getText();

                                 text = text.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&apos;").replace(/"/g, "&quot;");
                    
                    

                                // Get html
                                //var html = emojiElt.data("emojioneArea").editor.html();
                                if (text.trim() != '')
                                {
                                    submitMessage(text, friendId, 0);
                                    // Reset Emoji field 
                                    emojiElt.data("emojioneArea").setText('');
                                    return false;
                                }
                                else
                                {
                                    return false;
                                }
                            }
                            else if (e.keyCode == 8 || e.keyCode == 46)
                            {
                                var regex = /\s+/gi;
                                wordCount = text.trim().replace(regex, ' ').split(' ').length;
                                erasingMessage(friendId, wordCount);
                                setTimeout(function()
                                {
                                    stopedTyping(friendId);
                                }, 1000);
                            }
                            else if ($('#textareaid').length > 0)
                            {
                                var regex = /\s+/gi;
                                wordCount = text.trim().replace(regex, ' ').split(' ').length;
                                //is typing method
                                isTyping(friendId, wordCount);
                                $('#textareaid').blur(function(e)
                                {
                                    stopedTyping(friendId);
                                });
                                clearTimeout(timer);
                                timer = setTimeout(doStopFunction, 1500);

                                function doStopFunction()
                                {
                                    stopedTyping(friendId);
                                }
                            }
                            else
                            {
                                return false;
                            }
                        }
                    }
                });
                $.ajax
                ({
                    url: '/messaging/getChatByUserId',
                    method: 'POST',
                    data:
                    {
                        userIdToStartChatWith: id
                    },
                    success: function(response)
                    {
                        $('.headerProfile').html("");
                        $('.chatMessagesBox').html("");
                        
                        if (response.haveChatMessage == 'no_user_no_messages')
                        {
                            return false;
                        }
                        else
                        {
                            if(response.userDetailsResults.length > 0)
                            {
                                for (var i = 0; i < response.userDetailsResults.length; i++)
                                {
                                    if (response.userDetailsResults[i].user_profilepicture == "default")
                                    {
                                        $('.headerProfile').html("<div class='w3-row w3-container'> <div class='w3-col' style='width:17%; margin-top: 6px;'> <i class='fa fa-chevron-left backToChatHistory'></i> <span class='showFriendsProfile no_profile_container'> <img src='/profile_pictures/default/pink_default_profile_pic3.png' class='img img-circle ppOnChat' width='40' style='border-radius: 40px; padding: 2px; border: 1px solid #3388bb;'> </span> </div> <div class='w3-col showFriendsProfile' style='width:43%; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; font-size: 89%; margin-top: 10px; padding-left: 2px;'> <b>" + response.userDetailsResults[i].user_last_name + " " + response.userDetailsResults[i].user_first_name + "</b> </div> <div class='w3-col showFriendsProfile' style='width:25%; font-size: 80%; padding-left: 2px; border-left: 3px solid #dddddd;'><p> &nbsp;" + response.userDetailsResults[i].msg_user_status + "</p> </div> <div class='w3-col' style='width:15%; margin-top: 10px;'> &nbsp;<img style='width: 1.8rem;  margin-top: -5px;' src='/svg/mask-solid.svg' title='Request Secret Chat' class='pointer requestSecretChat' alt='Secret Chat request'/> <img src='/img/chat-slached.png' title='Hide chat box' class='pointer goToHomeChat'  style='width: 2.2rem;'/></div> </div>");
                                    }
                                    else
                                    {
                                        $('.headerProfile').html("<div class='w3-row w3-container'> <div class='w3-col' style='width:17%; margin-top: 6px;'> <i class='fa fa-chevron-left backToChatHistory'></i> <span class='showFriendsProfile'> <img src='/profile_pictures/" + response.userDetailsResults[i].msg_user_id + "_profile.png' class='img img-circle ppOnChat' width='40' style='border-radius: 40px; padding: 2px; border: 1px solid #3388bb;'> </span> </div> <div class='w3-col showFriendsProfile' style='width:43%; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; font-size: 89%; margin-top: 10px; padding-left: 2px;'> <b>" + response.userDetailsResults[i].user_last_name + " " + response.userDetailsResults[i].user_first_name + "</b> </div> <div class='w3-col showFriendsProfile' style='width:25%; font-size: 80%; padding-left: 2px; border-left: 3px solid #dddddd;'><p> &nbsp;" + response.userDetailsResults[i].msg_user_status + "</p> </div> <div class='w3-col' style='width:15%; margin-top: 10px;'> &nbsp;<img style='width: 1.8rem;  margin-top: -5px;' src='/svg/mask-solid.svg'  title='Request Secret Chat' class='pointer requestSecretChat' alt='Secret Chat request'/> <img src='/img/chat-slached.png' class='pointer goToHomeChat'  title='Hide chat box'  style='width: 2.2rem;'/></div> </div>");
                                    }
                                }
                            }
                            if (response.haveChatMessage == 'yes')
                            {
                                isTheFirstTimeChatting = 0;
                                for (var i = 0; i < response.messageListResults.length; i++)
                                {
                                    var forwadedTeller = "";
                                    if (response.messageListResults[i].forward_status == 1)
                                    {
                                        var forwadedTeller = "<span style='color: #A0A0A0; display: block; font-size: 80%;'>Forwaded <i class='glyphicon glyphicon-share-alt'></i></span>";
                                    }
                                    if (response.messageListResults[i].sender_user_id == response.logedInUser)
                                    {
                                        $('.chatMessagesBox').append("<div class='bubble me' id='" + response.messageListResults[i].id + "'><span class='exactMessage' id='message_content_" + response.messageListResults[i].id + "'>" + forwadedTeller + " " + decodeString(response.messageListResults[i].msg_text) + "</span><i class='fa fa-chevron-down w3-left moreOptionsOnText moreOptionsOnTextMe dropdown-toggle' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'></i><ul class='dropdown-menu w3-ul w3-hoverable messageDeleteOptions' aria-labelledby='about-us'><li class='deleteOptionsHeading'><b> Message delete </b></li><li class='messageDeleteOptionsItem'>Wrong destination</li><li class='messageDeleteOptionsItem'>Inappropriate</li><li class='messageDeleteOptionsItem'>Typo</li> <li class='forwardMessageItem'> <b><i>Forward Message?</i></b> </li></ul></div><div class='clearfix'></div><span class='time-from w3-right'>" + moment(response.messageListResults[i].msg_date).format('H:mm A | Do MMM') + "</span><div class='clearfix'></div>");
                                    }
                                    else
                                    {
                                        $('.chatMessagesBox').append("<div class='bubble you' id='" + response.messageListResults[i].id + "'><span class='exactMessage' id='message_content_" + response.messageListResults[i].id + "'>" + forwadedTeller + " " + decodeString(response.messageListResults[i].msg_text) + "</span><i class='fa fa-chevron-down w3-right moreOptionsOnText moreOptionsOnTextYou dropdown-toggle' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'></i><ul class='dropdown-menu w3-ul w3-hoverable messageDeleteOptions' aria-labelledby='about-us'><li class='forwardMessageItem'><b> Forward message? </b></li></ul></div><div class='clearfix'></div><span class='time-from w3-left'>" + moment(response.messageListResults[i].date).format('H:mm A | Do MMM') + "</span><div class='clearfix'></div>");
                                    }
                                }
                            }
                            if (response.haveChatMessage == 'no')
                            {
                                isTheFirstTimeChatting = 1;                                
                            }
                        }
                        $('.showFriendsProfile').click(function(e)
                        {
                            e.preventDefault();
                            e.stopImmediatePropagation();
                            populateUserDetails(friendId, 'my_friend');
                        });
                        //GET SECRET MESSAGES
                        var thisNeedle = "" + friendId + "";
                        for (var i = 0; i < objSecretMessages.length; i++)
                        {
                            if (objSecretMessages[i].sender == thisNeedle || objSecretMessages[i].recipient == thisNeedle)
                            {
                                if (objSecretMessages[i].sender == thisNeedle)
                                {
                                    $('.chatMessagesBox').append("<div class='bubble me' id='" + response.messageListResults[i].id + "'><span class='exactMessage' id='message_content_" + response.messageListResults[i].id + "'>" + decodeForwadedString(decodeString(objSecretMessages[i].messageContent)) + "</span><i class='fa fa-chevron-down w3-left moreOptionsOnText moreOptionsOnTextMe dropdown-toggle' label='about-us' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'></i><ul class='dropdown-menu w3-ul w3-hoverable messageDeleteOptions' aria-labelledby='about-us'><li class='deleteOptionsHeading'><b> Message delete </b></li><li class='messageDeleteOptionsItem'>Wrong destination</li><li class='messageDeleteOptionsItem'>Inappropriate</li><li class='messageDeleteOptionsItem'>Typo</li> <li class='forwardMessageItem'> <b><i>Forward Message?</i></b> </li></ul></div><div class='clearfix'></div><span class='time-from w3-right'>" + objSecretMessages[i].dateTime + "</span><div class='clearfix'></div>");
                                }
                                else
                                {
                                    $('.chatMessagesBox').append("<div class='bubble you' id='" + response.messageListResults[i].id + "'><span class='exactMessage' id='message_content_" + response.messageListResults[i].id + "'>" + decodeForwadedString(decodeString(objSecretMessages[i].messageContent)) + "</span><i class='fa fa-chevron-down w3-right moreOptionsOnText moreOptionsOnTextYou dropdown-toggle' label='about-us' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'></i><ul class='dropdown-menu w3-ul w3-hoverable messageDeleteOptions' aria-labelledby='about-us'><li class='forwardMessageItem'><b> Forward message? </b></li></ul></div><div class='clearfix'></div><span class='time-from w3-left'>" + objSecretMessages[i].dateTime + "</span><div class='clearfix'></div>");
                                }
                            }
                        }
                        $('[data-toggle="tooltip"]').tooltip()
                        $('[data-toggle="popover"]').popover()
                        $('.makeCall').click(function(e)
                        {
                            makeCallMethod($(this).attr('id'));
                        });

                        $(".backToChatHistory").click(function()
                        {
                            $(".chatMessagesBox").getNiceScroll().hide()
                            $(".theScrollH").getNiceScroll().hide();
                            $(".chatHistory").getNiceScroll().show();
                            //do something stop checking up
                            if (defaultCheckingId != 0)
                            {
                                stopCheckingUp(defaultCheckingId);
                            }

                            if(isMobile.any()) 
                            {
                                $(".right-bar").hide(function()
                                {
                                    $(".left-bar").css("width","100%");
                                    $(".left-bar").show();
                                });
                            }
                            else
                            {
                                callCloser();
                            }
                        });
                        $('.messageDeleteOptionsItem').click(function()
                        {
                            var thisMessageId = $(this).parent().parent().attr('id');
                            var phrase = "<span style='font-family : Monospace; color: #fc8a9e;'>Deleted: " + $(this).html() + "</span>";
                            var stripped = phrase.replace(/<span style='font-family : Monospace; color: #fc8a9e;'>/g, 'uGY8AAAbbb');
                            var message = stripped.replace(/<\/span>/g, 'uGY8AAAccc');
                            $.ajax(
                            {
                                url: '/messaging/deleteMessage',
                                method: 'POST',
                                data:
                                {
                                    thisMessageId: thisMessageId,
                                    message: message,
                                    userIdToStartChatWith: id
                                },
                                success: function(data)
                                {
                                    if (data.theResponse === "deleted")
                                    {
                                        $("#message_content_" + thisMessageId).html(decodeString(message));
                                        //check if on chat history if this was last message
                                        if (thisMessageId == data.theLastMessageId)
                                        {
                                            $("#lastMessage_" + id).html(phrase);
                                        }
                                        //pipe event to sockets to update on message box 
                                        socket.emit('updateMessageToFeleted',
                                        {
                                            theLastMessageId: data.theLastMessageId,
                                            thisMessageId: thisMessageId,
                                            messageText: phrase,
                                            toUserid: id,
                                            byUserId: uid
                                        });
                                    }
                                    else
                                    {
                                        return false;
                                    }
                                },
                                error: function(data)
                                {
                                    alert(data);
                                }
                            });
                        });
                        $('.forwardMessageItem').click(function(e)
                        {
                            e.stopPropagation();

                            var messageContent = $("#message_content_" + $(this).parent().parent().attr('id')).html();
                            var excludeFromSearch = friendId; //SO THAT IT EXCLUDE THE ORIGINAL SENDER/RECIEVER
                            $('#modalToShowUsersToForwadMessage').show(function()
                            {
                                $.ajax(
                                {
                                    url: '/messaging/getTheUsersToForwardMessageTo',
                                    method: 'POST',
                                    data:
                                    {
                                        excludeFromSearch: excludeFromSearch
                                    },
                                    success: function(data)
                                    {
                                        if (typeof data.usersListResults !== 'undefined')
                                        {
                                            $('.forwardMessageToUserListToPickFrom').empty();
                                            for (var i = 0; i < data.usersListResults.length; i++)
                                            {
                                                $('.forwardMessageToUserListToPickFrom').append("<li class='friendToForwardMessageTo' id='" + data.usersListResults[i].msg_user_id + "'>" + data.usersListResults[i].user_first_name + " " + data.usersListResults[i].user_last_name + " <small>@" + data.usersListResults[i].msg_user_name + "</smal></li>");
                                            }
                                            $('.friendToForwardMessageTo').click(function()
                                            {
                                                var theId = $(this).attr('id');
                                                var forwardStatus = 1;
                                                $("#modalCloserForForwardMessage").click();

                                                function doStartChatFirst()
                                                {
                                                    startChatWith(theId);
                                                }
                                                $.ajax(
                                                {
                                                    url: doStartChatFirst(),
                                                    success: function()
                                                    {
                                                        submitMessage(messageContent, theId, forwardStatus);
                                                    }
                                                })
                                            });
                                        }
                                    },
                                    error: function(data)
                                    {
                                        alert(data);
                                    }
                                });
                            });
                        });
                        $(".chatMessagesBox").niceScroll(
                        {
                            cursorcolor: "#3388bb",
                            cursorwidth: "9px",
                            cursorminheight: 32, // set the minimum cursor height (pixel)
                            cursorfixedheight: 50,
                            autohidemode: false, // only cursor hidden
                        });
                        $(".chatMessagesBox").scrollTop($(".chatMessagesBox")[0].scrollHeight);
                        $(".goToHomeChat").click(function()
                        {
                            $(".chatMessagesBox").getNiceScroll().hide()
                            $(".theScrollH").getNiceScroll().hide();
                            $(".chatHistory").getNiceScroll().show();

                            if(isMobile.any()) 
                            {
                                $(".right-bar").hide(function()
                                {
                                    $(".left-bar").css("width","100%");
                                    $(".left-bar").show();
                                });
                            }
                            else
                            {
                                callCloser();
                            }
                        });
                        $('.requestSecretChat').click(function()
                        {
                            //CHECKS IF THEY ARE NOT ALREADY ON SECRET CHAT
                            var needle = "" + friendId + "";
                            for (var i = 0; i < objSecretMessages.length; i++)
                            {
                                if (objSecretMessages[i].sender == needle || objSecretMessages[i].recipient == needle)
                                {
                                    alert("You are already in secret chat with this person")
                                    return false
                                }
                            }
                            socket.emit('requestUserToGoToIncognito',
                            {
                                user_sender_id: uid,
                                user_recipient_id: friendId
                            });
                        });
                    },
                    error: function(data) {}
                });
            };
            $('.emojiItem').click(function()
            {
                resetActivity();
                var value = $(this).html();
                insertAtCaret('textareaid', value);
            });
            //insert emojis to text field
            function insertAtCaret(textareaid, text)
            {
                var txtarea = document.getElementById(textareaid);
                if (!txtarea)
                {
                    return;
                }
                var scrollPos = txtarea.scrollTop;
                var strPos = 0;
                var br = ((txtarea.selectionStart || txtarea.selectionStart == '0') ?
                    "ff" : (document.selection ? "ie" : false));
                if (br == "ie")
                {
                    txtarea.focus();
                    var range = document.selection.createRange();
                    range.moveStart('character', -txtarea.value.length);
                    strPos = range.text.length;
                }
                else if (br == "ff")
                {
                    strPos = txtarea.selectionStart;
                }
                var front = (txtarea.value).substring(0, strPos);
                var back = (txtarea.value).substring(strPos, txtarea.value.length);
                txtarea.value = front + text + back;
                strPos = strPos + text.length;
                if (br == "ie")
                {
                    txtarea.focus();
                    var ieRange = document.selection.createRange();
                    ieRange.moveStart('character', -txtarea.value.length);
                    ieRange.moveStart('character', strPos);
                    ieRange.moveEnd('character', 0);
                    ieRange.select();
                }
                else if (br == "ff")
                {
                    txtarea.selectionStart = strPos;
                    txtarea.selectionEnd = strPos;
                    txtarea.focus();
                }
                txtarea.scrollTop = scrollPos;
            }
            //FUNCTION TO CLOSE CHATER TO DEFAULT
            callCloser = function()
            {
                $('.nicescroll-rails').remove();
                if (defaultChatBox == 1)
                {
                    $(".chatBoxArea").show();
                    $(".chatBox").hide();
                    defaultChatBox = 0;
                }
                resetActivity();
            }
            //SUBMIT HANDLER
            function submitMessage(subject, userIdToStartChatWith, status)
            {
                resetActivity();
                $('#textareaid').val("");
                var needle = "" + userIdToStartChatWith + "";
                var logeInUser = "" + uid + "";
                var secreteMessage = "" + subject + "";
                for (var i = 0; i < objSecretMessages.length; i++)
                {
                    if (objSecretMessages[i].sender == needle || objSecretMessages[i].recipient == needle)
                    {
                        objSecretMessages = $.parseJSON(JSON.stringify(objSecretMessages));
                        var forwadedTeller = secreteMessage;
                        if (status == 1)
                        {
                            forwadedTeller = secreteMessage + "<span style='color: #A0A0A0; display: block; font-size: 80%;'>Forwaded <i class='glyphicon glyphicon-share-alt'></i></span>";
                        }
                        objSecretMessages.push(
                        {
                            "sender": logeInUser,
                            "recipient": needle,
                            "messageContent": forwadedTeller,
                            "dateTime": "14: 56"
                        });
                        $('.chatMessagesBox').append("<div class='bubble me'>" + subject + "</div><div class='clearfix'></div><span class='time-from w3-right'>" + moment().format('H:mm A | Do MMM') + "</span><div class='clearfix'></div>");
                        $(".chatMessagesBox").scrollTop($(".chatMessagesBox")[0].scrollHeight);
                        socket.emit('sendPrivateMessage',
                        {
                            receiverId: userIdToStartChatWith,
                            inputMessageContent: subject,
                            sender_id: uid
                        });
                        return false
                    }
                }


                if (status == 1)
                {
                    var forwadedTeller = "<span style='color: #A0A0A0; display: block; font-size: 80%;'>Forwaded <i class='glyphicon glyphicon-share-alt'></i></span>";
                }
                else
                {
                    var forwadedTeller = "";
                }
                //append new message on chat box
                $('.chatMessagesBox').append("<div class='bubble me'>"+ forwadedTeller +" " + subject + "</div><div class='clearfix'></div><span class='time-from w3-right'>" + moment().format('H:mm A | Do MMM') + "</span><div class='clearfix'></div>");
                //scroll to bottom of chat box
                $(".chatMessagesBox").scrollTop($(".chatMessagesBox")[0].scrollHeight);


                $.ajax(
                {
                    type: 'POST',
                    url: '/messaging/insert_message',
                    data:
                    {
                        inputMessageContent: subject,
                        receiverId: userIdToStartChatWith,
                        ForwardStatus: status
                    },
                    success: function(data)
                    {
                        
                        $('.noHistoryMessage').remove();
                        if (data == 'not_new_success_status')
                        {
                            socket.emit('sendPrivateMessage',
                            {
                                receiverId: userIdToStartChatWith,
                                inputMessageContent: subject,
                                sender_id: uid
                            });

                            $(".chevronsForMessage_" + userIdToStartChatWith).html("<span style='color: #3388bb !important;'><i class='fa fa-chevron-left'></i></span>");
                            $("#lastMessage_" + userIdToStartChatWith).html(decodeString(subject));
                            //prepend new chat
                            $('#' + userIdToStartChatWith).parent().prepend($('#' + userIdToStartChatWith));
                        }
                        else if (data = 'new_success_status')
                        {
                            socket.emit('sendNewPrivateMessage',
                            {
                                receiverId: userIdToStartChatWith,
                                inputMessageContent: subject,
                                sender_id: uid
                            });
                            $.ajax(
                            {
                                url: "/user/getUserByTheId",
                                type: "POST",
                                data:
                                {
                                    userToSearch: userIdToStartChatWith
                                },
                                success: function(response)
                                {
                                    //result : 'User User'
                                    if (response.result === 'User User')
                                    {
                                        return false;
                                    }
                                    else
                                    {
                                        
                                        for (var i = 0; i < response.result.length; i++)
                                        {
                                            if (response.result[i].user_profilepicture != 'default')
                                            {
                                                $(".chatHistoryBlock").prepend("<li class='userFromChatHistory friend pointer'  id='" + response.result[i].msg_user_id + "'><img id='" + response.result[i].msg_user_id + "_profile_pic' src='/profile_pictures/" + response.result[i].msg_user_id + "_profile.png' class='pp img img-circle' width='36' style='margin-top: 15px'> <span class='frienOnList pointer meta'> <span class='name' style='margin-left: 5px;'> " + response.result[i].user_last_name + " " + response.result[i].user_first_name + " <span style='color: #b3b3b3; font-size:80%;' class='statusOnHistory' arial-label='" + response.result[i].msg_user_status + "'> <small>(" + response.result[i].msg_user_status + ")</small> </span> <span class='textNumber_" + response.result[i].msg_user_id + "'></span> <span id='activity_status_" + response.result[i].msg_user_id + "' class='w3-right'><i style='color: green; margin-right: -20px;' class='activityStatusClass fa fa-circle'></i></span> </span> <p class='preview lastMessageOnChatHistory' style='color: #3388bb !important;'> <span> <span class='chevronsForMessage_" + response.result[i].msg_user_id + "'> <i class='fa fa-chevron-left'></i> </span> <span style='font-weight: bolder; font-size: 16px'>|</span> </span> <span id='lastMessage_" + response.result[i].msg_user_id + "'>" + decodeString(subject) + "</span> </p> </span></li>");
                                            }
                                            else
                                            {
                                                var str = response.result[i].user_first_name;
                                                var matches = str.match(/\b(\w)/g);
                                                var acronym = matches.join('').toUpperCase();
                                                $(".chatHistoryBlock").prepend("<li class='userFromChatHistory friend pointer'  id='" + response.result[i].msg_user_id + "'><span class='frienOnList pointer meta'> <span class='no_profile_container'> <img src='/img/pink_default_profile_pic2.png' style='margin-top: 15px' class='pp_default pp img img-circle' id='" + response.result[i].msg_user_id + "_profile_pic' width='36'> <span class='no_profile_centered' >" + acronym + "</span> </span> <span class='noProfile'> <span class='name'>" + response.result[i].user_last_name + "</span> </span> <span class='name'>" + response.result[i].user_first_name + "</span> <span style='color: #b3b3b3; font-size: 80%;' class='statusOnHistory' arial-label='" + response.result[i].msg_user_status + "'> <small>(" + response.result[i].msg_user_status + ")</small> </span> <span class='textNumber_" + response.result[i].msg_user_id + "'></span> <span id='activity_status_" + response.result[i].msg_user_id + "' class='w3-right'><i style='color: red; z-index: +9389; margin-right: -20px;' class='activityStatusClass fa fa-circle' title='Offline'></i></span> <i class='w3-right' style='padding-top: 8%;'></i> <p class='preview lastMessageOnChatHistory'> <span class='chevronsForMessage_" + response.result[i].msg_user_id + "' style='color: #3388bb !important;'> <i class='fa fa-chevron-left'></i> <span style='font-weight: bolder; font-size: 16px'>|</span> </span> <span id='lastMessage_" + response.result[i].msg_user_id + "'>" + decodeString(subject) + "</span> </p> </span></li>");
                                            }
                                        }
                                        $('.userFromChatHistory').click(function()
                                        {
                                            //$('.closeStartChatModal').click();
                                            startChatWith(userIdToStartChatWith);
                                            //alert(data.sender_id)
                                        });
                                    }
                                },
                                error: function(response) {}
                            });
                        }
                    },
                    error: function(data)
                    {
                        alert("ERROR: " + data);
                    }
                });
            }
            //LOGOUT FUNCTIONALITY
            $(".logOut").click(function()
            {
                socket.emit('thisUserLeft',
                {
                    id: uid
                });
                $.ajax(
                {
                    url: '/user/logout',
                    method: 'POST',
                    data:
                    {
                        action: 'logout'
                    },
                    success: function(data)
                    {
                        
                        // alert("Hi")
                        if (data == 'logedOut')
                        {
                            location.replace("/")
                        }
                    },
                    error: function(data)
                    {
                        alert(data);
                    }
                });
            });

            //to handle is stop checking up when user presses out 
            $(document).click(function(event) { 
                $target = $(event.target);
                if(!$target.closest('.chatBox').length &&  $('.chatBox').is(":visible")) 
                {
                    
                    if(!$target.closest(".chatHistoryBlock").length &&  $(".chatHistoryBlock").is(":visible"))
                    {
                        if (defaultCheckingId != 0)
                        {
                            stopCheckingUp(defaultCheckingId);
                        }
                    }
                }      
            });
            $(window).focus(function() {
                //do something
                checkingUp(friendId);
            });

            $(window).blur(function() 
            {
                //do something
                if (defaultCheckingId != 0)
                {
                    stopCheckingUp(defaultCheckingId);
                }
            });

            //sockets incoming messages
            socket.on(uid, function(data)
            {
                //TELL USER MESSAGE IS DELETED
                if (data.notificationType == 400)
                {
                    var theLastMessageId = data.theLastMessageId;
                    var thisMessageId = data.thisMessageId;
                    var byUserId = data.byUserId;
                    var phrase = data.phrase;
                    //DELETE MESSAGE ON CHAT BOX
                    $("#message_content_" + thisMessageId).html(data.messageText);
                    //CHECK IF LAST MESSAGE IS THE ONE UPDATE THEN DELETE IT
                    if (theLastMessageId == thisMessageId)
                    {
                        $("#lastMessage_" + byUserId).html(data.messageText);
                    }
                }
                //NEW MESSAGE SOCKET 
                if (data.notificationType == 1)
                {
                    $('.noHistoryMessage').remove();
                    $(".events_" + data.senderId).html("");
                    $(".chevronsForMessage_" + data.senderId).html("<span style='color: #3388bb !important;'><i class='fa fa-chevron-right'></i></span>");
                    $("#lastMessage_" + data.senderId).html(decodeString(data.message_content));
                    if (friendId == data.senderId)
                    {
                        //we have to check the scroll of the messagesbo height and put a dropdown array which show that new message has been appended
                        $('.chatMessagesBox').append("<div class='bubble you'>" + decodeString(data.message_content) + "</div><div class='clearfix'></div><span class='time-from w3-left'>" + moment().format('H:mm A | Do MMM') + "</span><div class='clearfix'></div>");
                    }
                    else
                    {
                        $('.textNumber_' + data.senderId).html("<i class='fa fa-envelope' style='color: #ffccf2;'></i>");
                        document.getElementById('notificationTrack').play();
                        document.getElementById('notificationTrack').onplay = function()
                        {
                            resetActivity();
                        }
                    }
                    // $('.lastMessage_'+data.senderId).val("");
                    $('#' + data.senderId).parent().prepend($('#' + data.senderId));
                    var needle = "" + data.senderId + "";
                    var logeInUser = "" + uid + "";
                    var secreteMessage = "" + data.message_content + "";
                    var dateTime = "" + moment().format('H:mm A | Do MMM') + "";
                    for (var i = 0; i < objSecretMessages.length; i++)
                    {
                        if (objSecretMessages[i].sender == needle || objSecretMessages[i].recipient == needle)
                        {
                            objSecretMessages = $.parseJSON(JSON.stringify(objSecretMessages));
                            objSecretMessages.push(
                            {
                                "sender": needle,
                                "recipient": logeInUser,
                                "messageContent": secreteMessage,
                                "dateTime": dateTime
                            });
                            return false
                        }
                    }
                }
                //CHECKING UP
                if (data.notificationType == 2)
                {
                    $(".events_" + data.userCheckinUp).html("<i style='color: #ffcce6; font-size: 10px;'> <i>Checkin up</i></i>");
                    //setTimeout(function, 2000)
                    //setTimeout(function()
                    // {
                    //  $(".events_" + data.userCheckinUp).html("<i class='fa fa-eye' style='color: #ffcce6'> checkin'up</i>");
                    // }, 200)
                }
                //SOCKET FOR USER TYPING
                if (data.notificationType == 3)
                {
                    $(".events_" + data.userTypingId).html("<span class='the_events'><span class='name_of_event'>typing</span>(" + data.wordCount + ")</span>");
                }
                //STOPED TYPING
                if (data.notificationType == 4)
                {
                    $(".events_" + data.userTypingId).html("");
                }
                //STOPED CHECKING
                if (data.notificationType == 5)
                {
                    $('#' + data.userStopChecking).find(".events_" + data.userStopChecking).html("");
                }
                //GET USER AND APPEND VERY NEW CHAT
                if (data.notificationType == 6)
                {
                    var message_content = data.message_content;
                    //alert("very new")
                    $('.noHistoryMessage').remove();
                    $.ajax(
                    {
                        url: "/user/getUserByTheId",
                        type: "POST",
                        data:
                        {
                            userToSearch: data.sender_id
                        },
                        success: function(response)
                        {
                            if (response.result.length == 1)
                            {
                                $('.noChatHistory').remove();
                                for (var i = 0; i < response.result.length; i++)
                                {
                                    if (response.result[i].user_profilepicture != 'default')
                                    {
                                        $(".chatHistoryBlock").prepend("<li class='userFromChatHistory friend pointer'  id='" + response.result[i].msg_user_id + "'><img id='" + response.result[i].msg_user_id + "_profile_pic' src='https://storage.googleapis.com/myplusplus-bkbucket/profile_pictures/" + response.result[i].msg_user_id + "_profile.png' class='pp img img-circle' width='36' style='margin-top: 15px'> <span class='frienOnList pointer meta'> <span class='name' style='margin-left: 5px;'> " + response.result[i].user_last_name + " " + response.result[i].user_first_name + " <span style='color: #b3b3b3; font-size:80%;' class='statusOnHistory' arial-label='" + response.result[i].msg_user_status + "'> <small>(" + response.result[i].msg_user_status + ")</small> </span> <span class='textNumber_" + response.result[i].msg_user_id + "'></span> <span id='activity_status_" + response.result[i].msg_user_id + "' class='w3-right'><i style='color: green; margin-right: -20px;' class='activityStatusClass fa fa-circle'></i></span> </span> <p class='preview lastMessageOnChatHistory' style='color: #3388bb !important;'> <span> <span class='chevronsForMessage_" + response.result[i].msg_user_id + "'> <i class='fa fa-chevron-right'></i> </span> <span style='font-weight: bolder; font-size: 16px'>|</span> </span> <span id='lastMessage_" + response.result[i].msg_user_id + "'>" + decodeString(message_content) + "</span> </p> </span></li>");
                                    }
                                    else
                                    {
                                        var str = response.result[i].user_first_name;
                                        var matches = str.match(/\b(\w)/g);
                                        var acronym = matches.join('').toUpperCase();
                                        $(".chatHistoryBlock").prepend("<li class='userFromChatHistory friend pointer'  id='" + response.result[i].msg_user_id + "'><span class='frienOnList pointer meta'> <span class='no_profile_container'> <img src='https://storage.googleapis.com/myplusplus-bkbucket/profile_pictures/img/pink_default_profile_pic2.png' style='margin-top: 15px' class='pp_default pp img img-circle' id='" + response.result[i].msg_user_id + "_profile_pic' width='36'> <span class='no_profile_centered' >" + acronym + "</span> </span> <span class='noProfile'> <span class='name'>" + response.result[i].user_last_name + "</span> </span> <span class='name'>" + response.result[i].user_first_name + "</span> <span style='color: #b3b3b3; font-size: 80%;' class='statusOnHistory' arial-label='" + response.result[i].msg_user_status + "'> <small>(" + response.result[i].msg_user_status + ")</small> </span> <span class='textNumber_" + response.result[i].msg_user_id + "'></span> <span id='activity_status_" + response.result[i].msg_user_id + "' class='w3-right'><i style='color: red; z-index: +9389; margin-right: -20px;' class='activityStatusClass fa fa-circle' title='Offline'></i></span> <i class='w3-right' style='padding-top: 8%;'></i> <p class='preview lastMessageOnChatHistory'> <span class='chevronsForMessage_" + response.result[i].msg_user_id + "' style='color: #3388bb !important;'> <i class='fa fa-chevron-right'></i> <span style='font-weight: bolder; font-size: 16px'>|</span> </span> <span id='lastMessage_" + response.result[i].msg_user_id + "'>" + decodeString(message_content) + "</span> </p> </span></li>");
                                    }
                                }
                                $('.userFromChatHistory').click(function()
                                {
                                    //$('.closeStartChatModal').click();
                                    startChatWith(data.sender_id);
                                });
                            }
                            else if (response.result == 'User User')
                            {
                                alert("Such user no longer exist!");
                            }
                        },
                        error: function(data)
                        {
                            alert("Error: Could send request!")
                        }
                    });
                }
                //ERRASING TEXT MESSAGE
                if (data.notificationType == 7)
                {
                    $('#' + data.userErasingId).find('.events_' + data.userErasingId).html("<span class='isTypingTeller the_events'><span class='name_of_event'>erasing</span>, " + data.wordCount + "<span class='name_of_event'> words</span></span>");
                }
                //PROFILE PICTURE UPDATE
                if (data.notificationType == 8)
                {
                    // {notificationType: 8, userIdUpdatingProfilePicture: userId, base64Data : base64Data});
                    var profilePictureData = data.base64Data
                    $('#' + data.userIdUpdatingProfilePicture + '_profile_pic').attr('src', profilePictureData);
                }
                //UPDATE STATUS TO ONLINE
                if (data.notificationType == 9)
                {
                    // alert("HI")
                    $('#activity_status_' + data.statusIdUserId).html(" <i style='color: green !important;' title='Online' class='activityStatusClass fa fa-circle'></i>");
                }
                //UPDATE STATUS TO Offline
                if (data.notificationType == 10)
                {
                    $('#activity_status_' + data.statusIdUserId).html("<i style='color: red;' title='Offline' class='activityStatusClass fa fa-circle'></i>");
                }
                //UPDATE STATUS TO AWAY
                if (data.notificationType == 11)
                {
                    $('#activity_status_' + data.statusIdUserId).html("<i style='color: orange;' title='Away' class='activityStatusClass fa fa-circle'></i>");
                }
                //INVITE TO A CALL
                if (data.notificationType == 12)
                {
                    var caller = data.caller;
                    var personRejectedCall = data.callReciepient;
                    var name;
                    $.ajax(
                    {
                        url: "/user/getUserByTheId",
                        type: "POST",
                        data:
                        {
                            userToSearch: caller
                        },
                        success: function(response)
                        {
                            if (response.result.length == 1)
                            {
                                name = response.result[0].last_name + " " + response.result[0].first_name;
                                bootbox.confirm(
                                {
                                    title: "<h2>Video Call</h2>",
                                    message: "<b>" + name + "</b> is calling you!",
                                    buttons:
                                    {
                                        cancel:
                                        {
                                            label: '<i class="fa fa-phone-square" style="font-size:48px;color:red"></i>',
                                            className: 'btn-default'
                                        },
                                        confirm:
                                        {
                                            label: '<i class="fa fa-phone-square" style="font-size:48px;color:green"></i>',
                                            className: 'btn-default'
                                        }
                                    },
                                    callback: function(result)
                                    {
                                        if (result == true)
                                        {
                                            var isChannelReady = false;
                                            var isInitiator = false;
                                            var isStarted = false;
                                            var localStream;
                                            var pc;
                                            var remoteStream;
                                            var turnReady;
                                            var pcConfig = {
                                                'iceServers': [
                                                {
                                                    'urls': 'stun:stun.l.google.com:19302'
                                                }]
                                            };
                                            // Set up audio and video regardless of what devices are present.
                                            var sdpConstraints = {
                                                offerToReceiveAudio: true,
                                                offerToReceiveVideo: true
                                            };
                                            /////////////////////////////////////////////
                                            var room = personRejectedCall + caller
                                            // Could prompt for room name:
                                            // room = prompt('Enter room name:');
                                            //var socket = io.connect();
                                            if (room !== '')
                                            {
                                                socket.emit('create or join', room);
                                                console.log('Attempted to create or  join room', room);
                                            }
                                            socket.on('created', function(room)
                                            {
                                                console.log('Created room ' + room);
                                                isInitiator = true;
                                            });
                                            socket.on('full', function(room)
                                            {
                                                console.log('Room ' + room + ' is full');
                                            });
                                            socket.on('join', function(room)
                                            {
                                                console.log('Another peer made a request to join room ' + room);
                                                console.log('This peer is the initiator of room ' + room + '!');
                                                isChannelReady = true;
                                            });
                                            socket.on('joined', function(room)
                                            {
                                                console.log('joined: ' + room);
                                                isChannelReady = true;
                                            });
                                            socket.on('log', function(array)
                                            {
                                                console.log.apply(console, array);
                                            });
                                            ////////////////////////////////////////////////
                                            function sendMessage(message)
                                            {
                                                console.log('Client sending message: ', message);
                                                socket.emit('message', message);
                                            }
                                            // This client receives a message
                                            socket.on('message', function(message)
                                            {
                                                console.log('Client received message:', message);
                                                if (message === 'got user media')
                                                {
                                                    maybeStart();
                                                }
                                                else if (message.type === 'offer')
                                                {
                                                    if (!isInitiator && !isStarted)
                                                    {
                                                        maybeStart();
                                                    }
                                                    pc.setRemoteDescription(new RTCSessionDescription(message));
                                                    doAnswer();
                                                }
                                                else if (message.type === 'answer' && isStarted)
                                                {
                                                    pc.setRemoteDescription(new RTCSessionDescription(message));
                                                }
                                                else if (message.type === 'candidate' && isStarted)
                                                {
                                                    var candidate = new RTCIceCandidate(
                                                    {
                                                        sdpMLineIndex: message.label,
                                                        candidate: message.candidate
                                                    });
                                                    pc.addIceCandidate(candidate);
                                                }
                                                else if (message === 'bye' && isStarted)
                                                {
                                                    handleRemoteHangup();
                                                }
                                            });
                                            ////////////////////////////////////////////////////
                                            var localVideo = document.querySelector('#localVideo');
                                            var remoteVideo = document.querySelector('#remoteVideo');
                                            navigator.mediaDevices.getUserMedia(
                                                {
                                                    audio: false,
                                                    video: true
                                                })
                                                .then(gotStream)
                                                .catch(function(e)
                                                {
                                                    alert('getUserMedia() error: ' + e.name);
                                                });

                                            function gotStream(stream)
                                            {
                                                console.log('Adding local stream.');
                                                localStream = stream;
                                                localVideo.srcObject = stream;
                                                sendMessage('got user media');
                                                if (isInitiator)
                                                {
                                                    maybeStart();
                                                }
                                                // socket.emit('sendCallRequestSockets', {callReciepient : friendId, caller : uid, room : room});
                                            }
                                            var constraints = {
                                                video: true
                                            };
                                            console.log('Getting user media with constraints', constraints);
                                            if (location.hostname !== 'localhost')
                                            {
                                                requestTurn(
                                                    'https://networktraversal.googleapis.com/v1alpha/iceconfig?key=AIzaSyARF6xu5eZUJmsFqT_aCRZIgdV5BiCavYU'
                                                );
                                            }

                                            function maybeStart()
                                            {
                                                console.log('>>>>>>> maybeStart() ', isStarted, localStream, isChannelReady);
                                                if (!isStarted && typeof localStream !== 'undefined' && isChannelReady)
                                                {
                                                    console.log('>>>>>> creating peer connection');
                                                    createPeerConnection();
                                                    pc.addStream(localStream);
                                                    isStarted = true;
                                                    console.log('isInitiator', isInitiator);
                                                    if (isInitiator)
                                                    {
                                                        doCall();
                                                    }
                                                }
                                            }
                                            $('.chatBox, .profileDiv, .chatBoxArea').hide(function()
                                            {
                                                $('.callDiv').show();
                                                $('.nicescroll-rails').remove();
                                            });
                                            window.onbeforeunload = function()
                                            {
                                                sendMessage('bye');
                                            };
                                            /////////////////////////////////////////////////////////
                                            function createPeerConnection()
                                            {
                                                try
                                                {
                                                    pc = new RTCPeerConnection(null);
                                                    pc.onicecandidate = handleIceCandidate;
                                                    pc.onaddstream = handleRemoteStreamAdded;
                                                    pc.onremovestream = handleRemoteStreamRemoved;
                                                    console.log('Created RTCPeerConnnection');
                                                }
                                                catch (e)
                                                {
                                                    console.log('Failed to create PeerConnection, exception: ' + e.message);
                                                    alert('Cannot create RTCPeerConnection object.');
                                                    return;
                                                }
                                            }

                                            function handleIceCandidate(event)
                                            {
                                                console.log('icecandidate event: ', event);
                                                if (event.candidate)
                                                {
                                                    sendMessage(
                                                    {
                                                        type: 'candidate',
                                                        label: event.candidate.sdpMLineIndex,
                                                        id: event.candidate.sdpMid,
                                                        candidate: event.candidate.candidate
                                                    });
                                                }
                                                else
                                                {
                                                    console.log('End of candidates.');
                                                }
                                            }

                                            function handleCreateOfferError(event)
                                            {
                                                console.log('createOffer() error: ', event);
                                            }

                                            function doCall()
                                            {
                                                console.log('Sending offer to peer');
                                                pc.createOffer(setLocalAndSendMessage, handleCreateOfferError);
                                            }

                                            function doAnswer()
                                            {
                                                console.log('Sending answer to peer.');
                                                pc.createAnswer().then(
                                                    setLocalAndSendMessage,
                                                    onCreateSessionDescriptionError
                                                );
                                            }

                                            function setLocalAndSendMessage(sessionDescription)
                                            {
                                                pc.setLocalDescription(sessionDescription);
                                                console.log('setLocalAndSendMessage sending message', sessionDescription);
                                                sendMessage(sessionDescription);
                                            }

                                            function onCreateSessionDescriptionError(error)
                                            {
                                                trace('Failed to create session description: ' + error.toString());
                                            }

                                            function requestTurn(turnURL)
                                            {
                                                var turnExists = false;
                                                for (var i in pcConfig.iceServers)
                                                {
                                                    if (pcConfig.iceServers[i].urls.substr(0, 5) === 'turn:')
                                                    {
                                                        turnExists = true;
                                                        turnReady = true;
                                                        break;
                                                    }
                                                }
                                                if (!turnExists)
                                                {
                                                    console.log('Getting TURN server from ', turnURL);
                                                    // No TURN server. Get one from computeengineondemand.appspot.com:
                                                    var xhr = new XMLHttpRequest();
                                                    xhr.onreadystatechange = function()
                                                    {
                                                        if (xhr.readyState === 4 && xhr.status === 200)
                                                        {
                                                            var turnServer = JSON.parse(xhr.responseText);
                                                            console.log('Got TURN server: ', turnServer);
                                                            pcConfig.iceServers.push(
                                                            {
                                                                'urls': 'turn:' + turnServer.username + '@' + turnServer.turn,
                                                                'credential': turnServer.password
                                                            });
                                                            turnReady = true;
                                                        }
                                                    };
                                                    xhr.open('GET', turnURL, true);
                                                    xhr.send();
                                                }
                                            }

                                            function handleRemoteStreamAdded(event)
                                            {
                                                console.log('Remote stream added.');
                                                remoteStream = event.stream;
                                                remoteVideo.srcObject = remoteStream;
                                            }

                                            function handleRemoteStreamRemoved(event)
                                            {
                                                console.log('Remote stream removed. Event: ', event);
                                            }

                                            function hangup()
                                            {
                                                console.log('Hanging up.');
                                                stop();
                                                sendMessage('bye');
                                            }

                                            function handleRemoteHangup()
                                            {
                                                console.log('Session terminated.');
                                                stop();
                                                isInitiator = false;
                                            }

                                            function stop()
                                            {
                                                isStarted = false;
                                                pc.close();
                                                pc = null;
                                            }
                                        }
                                        else
                                        {
                                            socket.emit('callRejected',
                                            {
                                                caller: caller,
                                                personRejectedCall: personRejectedCall
                                            });
                                            //io.emit(data.callReciepient, {notificationType: 12, caller:  data.caller, room : data.room});
                                        }
                                    }
                                })
                            }
                        },
                        error: function(data)
                        {
                            alert("Error: Could send request!")
                        }
                    });
                }
                //alert("you call has bee callRejected");
                if (data.notificationType == 13)
                {
                    $('.callDiv').hide(function()
                    {
                        $('.chatBox').show();
                    });
                }
                //TELL WHO IS ONLINE
                if (data.notificationType == 14)
                {
                    $('#activity_status_' + data.markOnlineFriends).html("<i style='color: green; margin-right: -20px;' title='Online' class='activityStatusClass fa fa-circle'></i>");
                }
                //REQUEST FRO SECRET MODE                               
                if (data.notificationType == 30)
                {
                    //alert("REQUEST FOR SECRET MODE: "+data.user_sender_id);
                    $.ajax(
                    {
                        url: "/user/getUserByTheId",
                        type: "POST",
                        data:
                        {
                            userToSearch: data.user_sender_id
                        },
                        success: function(response)
                        {
                            if (response.result.length == 1)
                            {
                                var name = response.result[0].user_last_name + " " + response.result[0].user_first_name;
                                bootbox.confirm(
                                {
                                    title: "<h2>Attention</h2>",
                                    message: "<b>" + name + "</b> is requesting to go to SECRET chat with you!",
                                    buttons:
                                    {
                                        cancel:
                                        {
                                            label: '<i class="fa fa-ban" style="font-size:48px;color:red"></i>',
                                            className: 'btn-default'
                                        },
                                        confirm:
                                        {
                                            label: '<i class="fa fa-check-circle" style="font-size:48px;color:green"></i>',
                                            className: 'btn-default'
                                        }
                                    },
                                    callback: function(result)
                                    {
                                        var userWhoRecievesRequest = uid;
                                        var userWhoSentRequest = data.user_sender_id;
                                        //  io.emit(data.user_recipient_id, {notificationType : 30, user_sender_id  : data.user_sender_id});
                                        if (result == true)
                                        {
                                            doAccept(userWhoRecievesRequest, userWhoSentRequest);
                                        }
                                        else
                                        {
                                            doReject(userWhoRecievesRequest, userWhoSentRequest);
                                        }
                                    }
                                })
                            }
                        }
                    })
                }
                // io.emit(data.personToRequestedSecreetWithMe, {notificationType: 32, this_user: data.me});
                if (data.notificationType == 32)
                {
                    var responseUserId = data.this_user;
                    var myUserId = "" + uid + "";
                    var responseUserId = "" + responseUserId + "";
                    $.ajax(
                    {
                        url: "/user/getUserByTheId",
                        type: "POST",
                        data:
                        {
                            userToSearch: responseUserId
                        },
                        success: function(response)
                        {
                            if (response.result.length == 1)
                            {
                                name = response.result[0].user_last_name + " " + response.result[0].user_first_name;
                                alert(name + " has accepted your request to secret chat");
                                var dateTime = "" + moment().format('H:mm A | Do MMM') + "";
                                objSecretMessages = $.parseJSON(JSON.stringify(objSecretMessages));
                                objSecretMessages.push(
                                {
                                    "sender": myUserId,
                                    "recipient": responseUserId,
                                    "messageContent": "You are now on secret chat",
                                    "dateTime": dateTime
                                });
                            }
                        }
                    })
                }
                if (data.notificationType == 31)
                {
                    var responseUserId = data.this_user;
                    $.ajax(
                    {
                        url: "/user/getUserByTheId",
                        type: "POST",
                        data:
                        {
                            userToSearch: responseUserId
                        },
                        success: function(response)
                        {
                            if (response.result.length == 1)
                            {
                                name = response.result[0].user_last_name + " " + response.result[0].user_first_name;
                                alert(name + " has rejected your request to secret chat");
                            }
                        }
                    })
                }
                //TO TELL USER ABOUT FEEDS
                if (data.notificationType == 50)
                {
                    $('.viewNewFeedsBox').fadeIn('slow', function()
                    {
                        $(this).delay(3000).fadeOut('slow');
                    });
                }
                // //TELL USER THAT THEIR POST HAS NEW COMMENT
                // if(data.notificationType == 51)
                // {
                //  alert("THERE IS NEW COMMENT IN YOUR POST")
                //  //io.emit(userToTell, {notificationType: 51});
                // }
                //TELL USER THAT THEY ARE TAGGED
                if (data.notificationType == 52)
                {
                    //io.emit(data.personTagged, {notificationType: 52, tagger : data.tagger, thisFeedId : data.thisFeedId});
                    //alert("You tagged" + data.thisFeedId)
                    $(".notificationsheadingOnNav").css({"text-decoration": "underline", "text-decoration-color": "#fc8a9e"});
                }


                //notify owner of feed about like
                if (data.notificationType == 53)
                {
                    //io.emit(ownerId, {notificationType: 53, thisId : data.thisId}); 
                    //alert("LIKED YOUR FEED");
                    $(".notificationsheadingOnNav").css({"text-decoration": "underline", "text-decoration-color": "#fc8a9e"});
                    var numberN = parseInt($("#likes_" + data.thisId).children('.like_value').text());
                    $("#likes_" + data.thisId).children('.like_value').text(numberN + 1);

                }
                //notify all users about friend's feed like
                if (data.notificationType == 57)
                {
                    //io.emit(element.msg_user_id, {notificationType: 54, thisId : data.thisId});
                    //alert("LIKED YOUR FRIEND'S FEED");
                    $(".notificationsheadingOnNav").css({"text-decoration": "underline", "text-decoration-color": "#fc8a9e"});
                    var numberN = parseInt($("#likes_" + data.thisId).children('.like_value').text());
                    $("#likes_" + data.thisId).children('.like_value').text(numberN + 1);
                }


                 //notify owner of feed about unlike
                if (data.notificationType == 56)
                {
                    //io.emit(ownerId, {notificationType: 53, thisId : data.thisId}); 
                    //alert("UNLIKED YOUR FEED");
                    //$(".notificationsheadingOnNav").css({"text-decoration": "underline", "text-decoration-color": "#fc8a9e"});
                    var numberN = parseInt($("#likes_" + data.thisId).children('.like_value').text());
                    $("#likes_" + data.thisId).children('.like_value').text(numberN - 1);
                    console.log("unlike duodate")

                }
                //notify all users about friend's feed unlike
                if (data.notificationType == 58)
                {
                    //io.emit(element.msg_user_id, {notificationType: 54, thisId : data.thisId});
                    //alert("UNLIKED YOUR FRIEND'S FEED");
                   // $(".notificationsheadingOnNav").css({"text-decoration": "underline", "text-decoration-color": "#fc8a9e"});
                    var numberN = parseInt($("#likes_" + data.thisId).children('.like_value').text());
                    $("#likes_" + data.thisId).children('.like_value').text(numberN - 1);
                    console.log("unlike duodate")
                }
                



                //when getting comments of feed you created
                if (data.notificationType == 54)
                {
                    //io.emit(data.thisOwnerId, {notificationType : 54, commenter_id : data.commenter_id, commentId : data.commentId});
                    //alert('Some user commented on your feed' + data.commentId);

                    $(".notificationsheadingOnNav").css({"text-decoration": "underline", "text-decoration-color": "#fc8a9e"});
                    var numberN = parseInt($("#numberOfComments_" + data.thisFeedId).text().replace('(', '').replace(')', ''));
                    $("#numberOfComments_" + data.thisFeedId).text(numberN + 1);
                } 
                //when getting notificatrion of comment where you also commented
                if (data.notificationType == 55)
                {
                    //alert('Some user commented on the feed you commented on' + data.commentId);

                    $(".notificationsheadingOnNav").css({"text-decoration": "underline", "text-decoration-color": "#fc8a9e"});
                    //io.emit(element, {notificationType: 55, commentId : commentId, thisFeedId : thisFeedId, commenter : commenter});
                    var numberN = parseInt($("#numberOfComments_" + data.thisFeedId).text().replace('(', '').replace(')', ''));
                    $("#numberOfComments_" + data.thisFeedId).text(numberN + 1);      
                }
            });
            //########################FUNCTIONS TO SEND TO SOCKET SERVER####################################//
            /**********(userWhoRecievesRequest, userWhoSentRequest);********************/
            function doAccept(userWhoRecievesRequest, userWhoSentRequest)
            {
                socket.emit('secretModeAcceptedResponse',
                {
                    personToRequestedSecreetWithMe: userWhoSentRequest,
                    me: userWhoRecievesRequest
                });
                var dateTime = "" + moment().format('H:mm A | Do MMM') + "";
                objSecretMessages = $.parseJSON(JSON.stringify(objSecretMessages));
                var myUserId = "" + uid + "";
                var responseUserId = "" + userWhoSentRequest + "";
                objSecretMessages.push(
                {
                    "sender": myUserId,
                    "recipient": responseUserId,
                    "messageContent": "You are now on secret chat",
                    "dateTime": dateTime
                });
            }

            function doReject(userWhoRecievesRequest, userWhoSentRequest)
            {
                socket.emit('secretModeRejectedResponse',
                {
                    personToRequestedSecreetWithMe: userWhoSentRequest,
                    me: userWhoRecievesRequest
                });
                //console.log("Areedfted");
            }
            //STOP CHECKING UP
            function stopCheckingUp(defaultCheckinid)
            {
                socket.emit('stopCheckin',
                {
                    userStopCheckinUp: uid,
                    stopCheckingUpOnUserId: defaultCheckinid
                });
            }
            //CHECKING UP SOCKET
            function checkingUp(id)
            {
                var userIdToBeNotified = id;
                socket.emit('checkingUpEvent',
                {
                    userCheckinUp: uid,
                    userIdToBeNotified: userIdToBeNotified
                });
            }
            //IS TYPING
            function isTyping(userIdToChatWith, wordCount)
            {
                var userIdToBeNotified = userIdToChatWith;
                var wordCount = wordCount;
                socket.emit('isTypingText',
                {
                    userTypingId: uid,
                    userIdToBeNotified: userIdToBeNotified,
                    wordCount: wordCount
                });
            }
            // STOPED TYPING
            function stopedTyping(userIdToChatWith)
            {
                socket.emit('stopedTyping',
                {
                    userTypingId: uid,
                    userIdToBeNotified: userIdToChatWith
                });
            }
            // ERASING MESSAGE
            function erasingMessage(userIdToStartChatWith, wordCount)
            {
                socket.emit('erasingTheMessage',
                {
                    userErasingId: uid,
                    userChatingWith: userIdToStartChatWith,
                    wordCount: wordCount
                });
            }
        });
    </script>
</body>
</html>